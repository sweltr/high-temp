{
  "articles": [
    {
      "path": "alpha.html",
      "title": "5 Alpha Diversity Estimates",
      "author": [],
      "contents": "\n\nContents\nSynopsis\n16s rRNA\nCalculate Hill Numbers\nHill Numbers Summary\nHill Summary\n\nNormality Tests\nSignificance Tests\nSummary\nPostHoc Analyses\nAlpha Diversity Plots\n\nITS\nCalculate Hill Numbers\nHill Numbers Summary\nHill Summary\n\nNormality Tests\nSignificance Tests\nSummary\nPostHoc Analyses\nAlpha Diversity Plots\n\n\n\nClick here for setup information.\n\nknitr::opts_chunk$set(echo = TRUE, eval = FALSE)\nset.seed(119)\n#library(conflicted)\nlibrary(phyloseq); packageVersion(\"phyloseq\")\n[1] '1.36.0'\nlibrary(Biostrings); packageVersion(\"Biostrings\")\n[1] '2.60.2'\npacman::p_load(tidyverse, DT, ampvis2, hilldiv, \n               microbiome, phytools, phangorn, \n               pairwiseAdonis, codefolder, naniar, \n               labdsv, patchwork, agricolae, ggpubr,\n               reactable, downloadthis, captioner,\n               install = FALSE, update = FALSE)\nsource(\"hack_code/div_test_plot_jjs.R\")\nsource(\"hack_code/div_test_jjs.R\")\n\noptions(scipen=999)\nknitr::opts_current$get(c(\n  \"cache\",\n  \"cache.path\",\n  \"cache.rebuild\",\n  \"dependson\",\n  \"autodep\"\n))\n$cache\n[1] 0\n\n$cache.path\n[1] \"alpha_cache/html5/\"\n\n$cache.rebuild\n[1] FALSE\n\n$dependson\nNULL\n\n$autodep\n[1] FALSE\n\n\n\n\n\n\n\n\n\n\n\n\n\nSynopsis\nThis workflow contains diversity assessments for the 2018 high temperature data sets. In order to run the workflow, you either need to first run the DADA2 Workflow for 2018 High Temp samples and the Data Preparation workflow or begin with the output files from the Data Preparation workflow. See the Data Availability page for complete details.\nIn this workflow…\n16s rRNA\n\n\n\nTo account for presence of rare sequence variants caused by sequencing errors or other technical artifacts, we use Hill numbers (Alberdi and Gilbert 2019a). Hill numbers allow the weight put on rare versus abundant sequence variants to be scaled while providing intuitive comparisons of diversity levels using “effective number of ASVs” as a measuring unit. This approach allows for balancing the over representation of rare ASVs that might be inflated due to sequencing errors.\nWe will then use Shapiro-Wilk tests to test for normalcy and then, depending on the results, either use parametric ANOVA or non-parametric Kruskal-Wallis to compare alpha diversity among treatments.\nCalculate Hill Numbers\nTo calculate Hill numbers, we use the R package hilldiv (Alberdi and Gilbert 2019b). We calculate three metrics that put more or less weight on common species:\nObserved richness, where q-value = 0.\nShannon exponential, which weighs ASVs by their frequency, where q-value = 1.\nSimpson multiplicative inverse, which over weighs abundant ASVs, where q-value = 2.\nWe perform each analysis against the Full (unfiltered) data set as well as the Arbitrary, PERfect and PIME, filtered data sets using the function hill_div.\nThe command is as follows:\nhill_div(count = x, qvalue = i, tree = ultrametric_tree)\nwhere x is the sample by ASV table, i is the q-value corresponding to the metric of interest and tree is an ultrametric formatted phylogenetic tree if you choose to look at lineage, rather than ASV, diversity.\n\n\n\n\n\n\n\n\n\n\n\n\nWe first transform all the data to relative abundance values, and compute new trees.\n\n\nShow code\nssu18_alpha_ds <- c(\"ssu18_ps_work\", \"ssu18_ps_filt\", \"ssu18_ps_perfect\", \"ssu18_ps_pime\")\nfor (i in ssu18_alpha_ds) {\n  tmp_ps <- transform_sample_counts(get(i), function(otu) otu/sum(otu))\n  tmp_ps@phy_tree <- NULL\n  tmp_tree <- rtree(ntaxa(tmp_ps), rooted = TRUE,\n                      tip.label = taxa_names(tmp_ps))\n  tmp_ps_norm <- merge_phyloseq(tmp_ps, sample_data, tmp_tree)\n  tmp_asv <- data.frame(t(otu_table(tmp_ps_norm)))\n  tmp_ps_name <- purrr::map_chr(i, ~ paste0(., \"_norm\"))\n  assign(tmp_ps_name, tmp_ps_norm)\n  tmp_asv_name <- purrr::map_chr(i, ~ paste0(., \"_tu\"))\n  assign(tmp_asv_name, tmp_asv)\n  rm(list = ls(pattern = \"tmp_\"))\n}\n\nNext, we run the analysis for all three metrics on the data sets (without a tree).\n\n\nShow code\nqvalue <- c(0,1,2)\nfor (i in qvalue) {\n  for (j in ssu18_alpha_ds) {\n     tmp_asv <- get(purrr::map_chr(j, ~ paste0(., \"_tu\")))\n     tmp_df <- data.frame(hill_div(tmp_asv, qvalue = i))\n     tmp_df <- tmp_df %>% dplyr::rename(\"tmp_name\" = 1) %>%\n                              tibble::rownames_to_column(\"SamName\")\n     tmp_name <- purrr::map_chr(j, ~ paste0(., \"_h\", i))\n     print(tmp_name)\n     assign(tmp_name, tmp_df)\n     rm(list = ls(pattern = \"tmp_\"))\n  }\n}\nobjects(pattern = \"_h\")\n\nAnd make summary tables to add back into each ps object.\n\n\nShow code\nfor (i in ssu18_alpha_ds) {\n     tmp_obs <- get(purrr::map_chr(i, ~ paste0(., \"_h0\")))\n     tmp_sha <- get(purrr::map_chr(i, ~ paste0(., \"_h1\")))\n     tmp_sim <- get(purrr::map_chr(i, ~ paste0(., \"_h2\")))\n     tmp_hill <- dplyr::left_join(tmp_obs, tmp_sha, by = \"SamName\") %>%\n       dplyr::left_join(., tmp_sim, by = \"SamName\") %>%\n       dplyr::rename(\"Observed\" = 2, \"Shannon_exp\" = 3, \"InvSimpson\" = 4)\n     tmp_name <- purrr::map_chr(i, ~ paste0(., \"_hill\"))\n     assign(tmp_name, tmp_hill)\n     rm(list = ls(pattern = \"tmp_\"))\n}\nobjects(pattern = \"_hill\")\nobjects()\n\nAnd then create the new objects with the diversity data.\n\n\nShow code\nfor (i in ssu18_alpha_ds) {\n     tmp_ps <- get(i)\n     tmp_tree <- rtree(ntaxa(tmp_ps), rooted = TRUE,\n                      tip.label = taxa_names(tmp_ps))\n     tmp_ps <- merge_phyloseq(tmp_ps, sample_data, tmp_tree)\n     tmp_hill <- get(purrr::map_chr(i, ~ paste0(., \"_hill\")))\n     tmp_hill_samp <- dplyr::left_join(data.frame(sample_data(tmp_ps)),\n                                         tmp_hill, by = \"SamName\")\n     tmp_hill_samp$ID <- tmp_hill_samp$SamName\n     tmp_hill_samp <- tmp_hill_samp %>%  tibble::column_to_rownames(\"ID\")\n     tmp_ps2 <- merge_phyloseq(otu_table(tmp_ps),\n                                sample_data(tmp_hill_samp),\n                                tax_table(tmp_ps),\n                                phy_tree(tmp_ps))\n     assign(i, tmp_ps2)\n     tmp_path <- file.path(\"files/alpha/rdata/\")\n     saveRDS(tmp_ps2, paste(tmp_path, i, \".rds\", sep = \"\"))\n     rm(list = ls(pattern = \"tmp_\"))\n}\nobjects()\n\n\n\n\nHill Numbers Summary\nNow we summarize the data for each sample against all three metrics. The table contains the results of ASV diversity estimates from the full data set and the three filtered data sets.\nThe suffix _fi indicates metrics for the Arbitrary data set. The suffix _pe indicates metrics for the PERfect data set and the suffix _pet indicates the lineage diversity for the PERfect data set.\nThe suffix _pi indicates metrics for the PIME data set and the suffix _pit indicates the lineage diversity for the PIME data set.\n\n\n\n\n\n\nHill Summary\n(16S rRNA) Table 1 | Hill numbers for samples in the unfiltered & filtered data sets.\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Sample_ID\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"Observed\":[2371,1610,2272,2356,1575,2040,1663,2124,3065,2010,2157,2441,2386,813,2066],\"Observed_fi\":[831,620,884,922,422,802,680,572,1011,843,771,813,874,376,670],\"Observed_pe\":[707,563,737,764,411,663,574,661,857,725,671,681,751,332,571],\"Observed_pi\":[502,322,590,596,224,570,499,289,664,516,276,594,563,170,491],\"Shannon_exp\":[760.7,236.1,781.1,686.8,501,797.8,578.8,307.3,1098.4,598.8,560.8,973.3,680.1,375.3,886.8],\"Shannon_exp_fi\":[385.1,127.8,437.1,373.7,181,439.4,329.4,102.4,518.7,353.4,284.2,464.8,352.7,165.6,416.5],\"Shannon_exp_pe\":[353.4,126.5,397.4,337.3,211.9,388.4,299.2,146.9,481.3,327.5,270.3,419.8,334.5,149.9,379.4],\"Shannon_exp_pi\":[226.3,59.2,291.2,235,90.1,309.2,246.1,47.9,324.7,208,88.1,331.3,224.4,67.9,298.3],\"InvSimpson\":[200.3,25.5,261.5,159.4,153.3,272,201.2,27.3,309.4,146.8,91.5,394.2,168.5,120.2,427.6],\"InvSimpson_fi\":[128,18.9,178.5,108.7,69.2,178.8,139.5,14.9,182,103.7,60.2,230,110.3,55.7,242.8],\"InvSimpson_pe\":[123.6,19.1,171.6,103.8,82.6,166.8,132.6,18.5,179.7,99.7,60.2,220.5,109.4,56.8,231.4],\"InvSimpson_pi\":[84.2,12,129.3,75.8,38.6,130.7,111,9.6,120.6,67.5,24.4,168.7,76.5,26.4,174.7]},\"columns\":[{\"accessor\":\"Sample_ID\",\"name\":\"Sample_ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"header\":\"Sample ID\",\"minWidth\":150,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"5px solid #eee\"},\"headerStyle\":{\"borderRight\":\"5px solid #eee\"}},{\"accessor\":\"Observed\",\"name\":\"FULL\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"2371\",\"1610\",\"2272\",\"2356\",\"1575\",\"2040\",\"1663\",\"2124\",\"3065\",\"2010\",\"2157\",\"2441\",\"2386\",\"813\",\"2066\"],\"header\":\"FULL\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Observed_fi\",\"name\":\"Arbitrary\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"831\",\"620\",\"884\",\"922\",\"422\",\"802\",\"680\",\"572\",\"1011\",\"843\",\"771\",\"813\",\"874\",\"376\",\"670\"],\"header\":\"Arbitrary\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Observed_pe\",\"name\":\"PERfect\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"707\",\"563\",\"737\",\"764\",\"411\",\"663\",\"574\",\"661\",\"857\",\"725\",\"671\",\"681\",\"751\",\"332\",\"571\"],\"header\":\"PERfect\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Observed_pi\",\"name\":\"PIME\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"502\",\"322\",\"590\",\"596\",\"224\",\"570\",\"499\",\"289\",\"664\",\"516\",\"276\",\"594\",\"563\",\"170\",\"491\"],\"header\":\"PIME\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"style\":{\"borderRight\":\"5px solid #eee\"},\"headerStyle\":{\"borderRight\":\"5px solid #eee\"}},{\"accessor\":\"Shannon_exp\",\"name\":\"FULL\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"760.7\",\"236.1\",\"781.1\",\"686.8\",\"501\",\"797.8\",\"578.8\",\"307.3\",\"1098.4\",\"598.8\",\"560.8\",\"973.3\",\"680.1\",\"375.3\",\"886.8\"],\"header\":\"FULL\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Shannon_exp_fi\",\"name\":\"Arbitrary\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"385.1\",\"127.8\",\"437.1\",\"373.7\",\"181\",\"439.4\",\"329.4\",\"102.4\",\"518.7\",\"353.4\",\"284.2\",\"464.8\",\"352.7\",\"165.6\",\"416.5\"],\"header\":\"Arbitrary\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Shannon_exp_pe\",\"name\":\"PERfect\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"353.4\",\"126.5\",\"397.4\",\"337.3\",\"211.9\",\"388.4\",\"299.2\",\"146.9\",\"481.3\",\"327.5\",\"270.3\",\"419.8\",\"334.5\",\"149.9\",\"379.4\"],\"header\":\"PERfect\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Shannon_exp_pi\",\"name\":\"PIME\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"226.3\",\"59.2\",\"291.2\",\"235\",\"90.1\",\"309.2\",\"246.1\",\"47.9\",\"324.7\",\"208\",\"88.1\",\"331.3\",\"224.4\",\"67.9\",\"298.3\"],\"header\":\"PIME\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"style\":{\"borderRight\":\"5px solid #eee\"},\"headerStyle\":{\"borderRight\":\"5px solid #eee\"}},{\"accessor\":\"InvSimpson\",\"name\":\"FULL\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"200.3\",\"25.5\",\"261.5\",\"159.4\",\"153.3\",\"272\",\"201.2\",\"27.3\",\"309.4\",\"146.8\",\"91.5\",\"394.2\",\"168.5\",\"120.2\",\"427.6\"],\"header\":\"FULL\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"InvSimpson_fi\",\"name\":\"Arbitrary\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"128\",\"18.9\",\"178.5\",\"108.7\",\"69.2\",\"178.8\",\"139.5\",\"14.9\",\"182\",\"103.7\",\"60.2\",\"230\",\"110.3\",\"55.7\",\"242.8\"],\"header\":\"Arbitrary\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"InvSimpson_pe\",\"name\":\"PERfect\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"123.6\",\"19.1\",\"171.6\",\"103.8\",\"82.6\",\"166.8\",\"132.6\",\"18.5\",\"179.7\",\"99.7\",\"60.2\",\"220.5\",\"109.4\",\"56.8\",\"231.4\"],\"header\":\"PERfect\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"InvSimpson_pi\",\"name\":\"PIME\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"84.2\",\"12\",\"129.3\",\"75.8\",\"38.6\",\"130.7\",\"111\",\"9.6\",\"120.6\",\"67.5\",\"24.4\",\"168.7\",\"76.5\",\"26.4\",\"174.7\"],\"header\":\"PIME\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"columnGroups\":[{\"name\":\"Observed richness\",\"headerStyle\":{\"borderRight\":\"5px solid #eee\",\"fontSize\":\"1.1em\"},\"columns\":[\"Observed\",\"Observed_fi\",\"Observed_pe\",\"Observed_pi\"]},{\"name\":\"Shannon exponential\",\"headerStyle\":{\"fontSize\":\"1.1em\"},\"columns\":[\"Shannon_exp\",\"Shannon_exp_fi\",\"Shannon_exp_pe\",\"Shannon_exp_pi\"]},{\"name\":\"Simpson multiplicative inverse\",\"headerStyle\":{\"fontSize\":\"1.1em\"},\"columns\":[\"InvSimpson\",\"InvSimpson_fi\",\"InvSimpson_pe\",\"InvSimpson_pi\"]}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,15],\"paginationType\":\"numbers\",\"showPagination\":true,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"9e0e1d6b4f7db79bfc534bba13d02de4\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nNormality Tests\nBefore running significance tests, we need to know if data is normally distributed, which will tell use whether to use a parametric or non-parametric test. To test if the data are normally distributed, we use the Shapiro-Wilk Normality test and the Bartlett Test of Homogeneity of Variances.\nIf the p-values are both not significant (p > 0.05) from the tests, we accept the null hypothesis (that the results are normally distributed) and test for significance between samples using an ANOVA. If the p-values are both significant (p < 0.05), we reject the null hypothesis (that the results are normally distributed) and test for significance between samples using Kruskal-Wallis (non-parametric equivalent of ANOVA).\nThe commands are as follows:\nshapiro.test(x), where x is a numeric vector of alpha diversity values from the sample data table.\nbartlett.test(Value ~ Group, data = df) Where Value is the metric of interest, Group in the treatment to compare, and df is the data frame.\nFirst the Shapiro-Wilk Normality test.\n\n\nShow code\nssu_tab_alpha_div\nssu18_div_tab <- ssu_tab_alpha_div\nssu18_shap_tests_asv <- c()\nfor (i in colnames(ssu18_div_tab[,7:ncol(ssu18_div_tab)])) {\n   tmp_name <- purrr::map_chr(i, ~ paste0(\"ssu18_shap_asv_\", .))\n   ssu18_shap_tests_asv <- append(ssu18_shap_tests_asv, tmp_name)\n   tmp_test <- eval(shapiro.test(ssu18_div_tab[[i]]))\n   tmp_test$data.name <- tmp_name\n   assign(tmp_name, tmp_test)\n   rm(list = ls(pattern = \"tmp_\"))\n}\n\nobjects(pattern = \"shap_\")\n\nAnd then the Bartlett Test of Homogeneity of Variances.\n\n\nShow code\nssu18_div_tab_asv <- ssu_tab_alpha_div\nssu18_bart_tests_asv <- c()\nfor (i in colnames(ssu18_div_tab_asv[,7:ncol(ssu18_div_tab_asv)])) {\n   tmp_name <- purrr::map_chr(i, ~ paste0(\"ssu18_bart_asv_\", .))\n   ssu18_bart_tests_asv <- append(ssu18_bart_tests_asv, tmp_name)\n   tmp_test <- eval(bartlett.test(ssu18_div_tab_asv[[i]] ~ TEMP, data = ssu18_div_tab_asv))\n   tmp_test$data.name <- tmp_name\n   assign(tmp_name, tmp_test)\n   rm(list = ls(pattern = \"tmp_\"))\n}\nobjects(pattern = \"_bart_\")\n\nHere we see which Shapiro-Wilk Normality and Bartlett tests were significant and which were not. So wherever the value of both p-values in > 0.05 we can use an ANOVA, otherwise we use Kruskal-Wallis.\n\n\n\n(16S rRNA) Table 2 | Summary of Normality Tests for unfiltered & filtered data sets. P-values in red indicate significance (p-value < 0.05).\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"metric\":[\"Observed\",\"Observed\",\"Observed\",\"Observed\",\"Shannon\",\"Shannon\",\"Shannon\",\"Shannon\",\"InvSimpson\",\"InvSimpson\",\"InvSimpson\",\"InvSimpson\"],\"dataset\":[\"FULL\",\"FILT\",\"PERfect\",\"PIME\",\"FULL\",\"FILT\",\"PERfect\",\"PIME\",\"FULL\",\"FILT\",\"PERfect\",\"PIME\"],\"p-value (normality)\":[0.2682,0.3671,0.1905,0.0552,0.994,0.2293,0.3311,0.0365,0.5844,0.6731,0.7466,0.3708],\"p-value (homogeneity)\":[0.5992,0.5851,0.437,0.7551,0.4905,0.1064,0.1592,0.8812,0.1544,0.4116,0.3497,0.3727],\"method\":[\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"Kruskal-Wallis\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\"]},\"columns\":[{\"accessor\":\"metric\",\"name\":\"Metric\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"Observed\",\"Observed\",\"Observed\",\"Observed\",\"Shannon\",\"Shannon\",\"Shannon\",\"Shannon\",\"InvSimpson\",\"InvSimpson\",\"InvSimpson\",\"InvSimpson\"],\"header\":\"Metric\",\"minWidth\":100,\"align\":\"left\",\"headerVAlign\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"dataset\",\"name\":\"dataset\",\"type\":\"character\",\"sortable\":true,\"resizable\":false,\"filterable\":false,\"cell\":[\"FULL\",\"FILT\",\"PERfect\",\"PIME\",\"FULL\",\"FILT\",\"PERfect\",\"PIME\",\"FULL\",\"FILT\",\"PERfect\",\"PIME\"],\"header\":\"dataset\",\"minWidth\":80,\"align\":\"center\",\"headerVAlign\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"p-value (normality)\",\"name\":\"p-value (normality)\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":false,\"filterable\":false,\"cell\":[\"0.2682\",\"0.3671\",\"0.1905\",\"0.0552\",\"0.994\",\"0.2293\",\"0.3311\",\"0.0365\",\"0.5844\",\"0.6731\",\"0.7466\",\"0.3708\"],\"header\":\"p-value (normality)\",\"minWidth\":100,\"align\":\"center\",\"headerVAlign\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"style\":[{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"}]},{\"accessor\":\"p-value (homogeneity)\",\"name\":\"p-value (homogeneity)\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":false,\"filterable\":false,\"cell\":[\"0.5992\",\"0.5851\",\"0.437\",\"0.7551\",\"0.4905\",\"0.1064\",\"0.1592\",\"0.8812\",\"0.1544\",\"0.4116\",\"0.3497\",\"0.3727\"],\"header\":\"p-value (homogeneity)\",\"minWidth\":130,\"align\":\"center\",\"headerVAlign\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"style\":[{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"}]},{\"accessor\":\"method\",\"name\":\"method\",\"type\":\"character\",\"sortable\":true,\"resizable\":false,\"filterable\":false,\"cell\":[\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"Kruskal-Wallis\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\"],\"header\":\"method\",\"minWidth\":120,\"align\":\"center\",\"headerVAlign\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"defaultPageSize\":12,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,12],\"paginationType\":\"numbers\",\"showPagination\":false,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"88811c9ba2d03ce860741156afc68a50\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nSignificance Tests\nTo begin, we need to create a hierarchy variable; a two-column matrix specifying the relationship between samples (first column) and groups (second column).\n\n\nShow code\nssu18_hill_hier <- ssu_tab_alpha_div\nssu18_hill_hier <- ssu18_hill_hier %>% dplyr::select(\"Sample_ID\", \"TEMP\") %>%\n  tibble::remove_rownames()\nssu18_hill_hier <- ssu18_hill_hier[order(ssu18_hill_hier$TEMP), ]\nssu18_hill_hier$TEMP = paste(ssu18_hill_hier$TEMP, 'C', sep='')\nssu18_hill_hier <- ssu18_hill_hier %>% tibble::remove_rownames()\nsaveRDS(ssu18_hill_hier, \"files/alpha/rdata/ssu18_hill_hier.rds\")\n\nAgain, we start by testing significance of ASV diversity for the data sets against each of the three metrics using the div_test function.\nThe command is as follows:\ndiv_test(countable = x, qvalue = i, hierarchy = hier, \n         tree = ultrametric_tree, posthoc = TRUE)\nwhere x is ASV by sample table, i is the q-value corresponding to the metric of interest, hier is the hierarchy matrix, tree is an ultrametric formatted phylogenetic tree (if you choose to explore lineage diversity), and posthoc indicates whether to run post hoc pairwise analyses.\n\n\nShow code\nqvalue <- c(0,1,2)\nfor (i in ssu18_alpha_ds) {\n     for (j in qvalue) {\n         tmp_get <- get(purrr::map_chr(i, ~ paste0(., \"_tu\")))\n         tmp_test <- div_test(tmp_get, qvalue = j,\n                      hierarchy = ssu18_hill_hier,\n                      posthoc = TRUE)\n         tmp_name <- purrr::map_chr(i, ~ paste0(., \"_q\", j, \"_adt\"))\n         print(tmp_name)\n         assign(tmp_name, tmp_test)\n         rm(list = ls(pattern = \"tmp_\"))\n }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nSummary\n(16S rRNA) Table 3 | Summary of significance tests for unfiltered & filtered data sets. P-values in red for post hoc analysis indicate significance (p-value < 0.05).\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"dataset\":[\"FULL\",\"FULL\",\"FULL\",\"FILT\",\"FILT\",\"FILT\",\"PIME\",\"PIME\",\"PIME\",\"PERfect\",\"PERfect\",\"PERfect\"],\"metric\":[\"Observed\",\"Shannon exponential\",\"Inverse Simpson\",\"Observed\",\"Shannon exponential\",\"Inverse Simpson\",\"Observed\",\"Shannon exponential\",\"Inverse Simpson\",\"Observed\",\"Shannon exponential\",\"Inverse Simpson\"],\"q-value\":[\"0\",\"1\",\"2\",\"0\",\"1\",\"2\",\"0\",\"1\",\"2\",\"0\",\"1\",\"2\"],\"normality p-value\":[0.2682,0.994,0.584,0.3671,0.2299,0.6733,0.0552,0.0366,0.3701,0.1905,0.3311,0.7468],\"homogeneity p-value\":[0.5992,0.4904,0.1546,0.5851,0.1065,0.413,0.7551,0.88,0.3714,0.437,0.1592,0.3484],\"method\":[\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"Kruskal-Wallis Test\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\"],\"posthoc method\":[\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Dunn test with Benjamini-Hochberg correction\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\"],\"posthoc p-value\":[0.0605073993041881,6.27145211886132e-05,4.67424377288973e-05,0.00607979325574134,2.61619222669151e-06,1.30357980637008e-06,1.44158556313704e-06,0.00193045413622771,9.87158271400671e-07,0.0504542685916543,7.13607164161826e-06,3.19719103137226e-06]},\"columns\":[{\"accessor\":\"dataset\",\"name\":\"Dataset\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"FULL\",\"FULL\",\"FULL\",\"FILT\",\"FILT\",\"FILT\",\"PIME\",\"PIME\",\"PIME\",\"PERfect\",\"PERfect\",\"PERfect\"],\"header\":\"Dataset\",\"minWidth\":80,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"metric\",\"name\":\"metric\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"Observed\",\"Shannon exponential\",\"Inverse Simpson\",\"Observed\",\"Shannon exponential\",\"Inverse Simpson\",\"Observed\",\"Shannon exponential\",\"Inverse Simpson\",\"Observed\",\"Shannon exponential\",\"Inverse Simpson\"],\"header\":\"metric\",\"minWidth\":140,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"q-value\",\"name\":\"q-value\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0\",\"1\",\"2\",\"0\",\"1\",\"2\",\"0\",\"1\",\"2\",\"0\",\"1\",\"2\"],\"header\":\"q-value\",\"minWidth\":70,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"normality p-value\",\"name\":\"p-value (normality)\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.2682\",\"0.994\",\"0.584\",\"0.3671\",\"0.2299\",\"0.6733\",\"0.0552\",\"0.0366\",\"0.3701\",\"0.1905\",\"0.3311\",\"0.7468\"],\"header\":\"p-value (normality)\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"homogeneity p-value\",\"name\":\"p-value (homogeneity)\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.5992\",\"0.4904\",\"0.1546\",\"0.5851\",\"0.1065\",\"0.413\",\"0.7551\",\"0.88\",\"0.3714\",\"0.437\",\"0.1592\",\"0.3484\"],\"header\":\"p-value (homogeneity)\",\"minWidth\":130,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"method\",\"name\":\"method\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"Kruskal-Wallis Test\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\"],\"header\":\"method\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"posthoc method\",\"name\":\"posthoc method\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Dunn test with Benjamini-Hochberg correction\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\"],\"header\":\"posthoc method\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"posthoc p-value\",\"name\":\"posthoc p-value\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"6.05e-02\",\"6.27e-05\",\"4.67e-05\",\"6.08e-03\",\"2.62e-06\",\"1.3e-06\",\"1.44e-06\",\"1.93e-03\",\"9.87e-07\",\"5.05e-02\",\"7.14e-06\",\"3.2e-06\"],\"header\":\"posthoc p-value\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"style\":[{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"}]}],\"defaultPageSize\":12,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,12],\"paginationType\":\"numbers\",\"showPagination\":false,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"theme\":{\"style\":{\"fontSize\":\"0.7em\"}},\"dataKey\":\"690f29c658c374e839a7e63b38ea970a\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nPostHoc Analyses\nFirst let’s check the results of each posthoc analysis.\n\n\nObserved (q-value = 0)\n\n[1] \"FULL (Observed)\"\n[1] \"Tukey post-hoc test\"\n        diff       lwr       upr      p.adj\n3C-0C -219.6  -956.946 517.74597 0.71329233\n8C-0C -721.0 -1458.346  16.34597 0.05546473\n8C-3C -501.4 -1238.746 235.94597 0.20658985\n\n\n[1] \"FILT (Observed)\"\n[1] \"Tukey post-hoc test\"\n        diff       lwr      upr      p.adj\n3C-0C   -6.0 -221.6963 209.6963 0.99696904\n8C-0C -283.8 -499.4963 -68.1037 0.01109212\n8C-3C -277.8 -493.4963 -62.1037 0.01267274\n\n\n[1] \"PIME (Observed)\"\n[1] \"Tukey post-hoc test\"\n        diff       lwr       upr          p.adj\n3C-0C  -46.6 -140.1306   46.9306 0.406733563435\n8C-0C -325.6 -419.1306 -232.0694 0.000002206313\n8C-3C -279.0 -372.5306 -185.4694 0.000011005557\n\n\n[1] \"PERfect (Observed)\"\n[1] \"Tukey post-hoc test\"\n        diff       lwr       upr      p.adj\n3C-0C    2.4 -191.8227 196.62267 0.99940103\n8C-0C -174.2 -368.4227  20.02267 0.08059254\n8C-3C -176.6 -370.8227  17.62267 0.07616681\n\nShannon exp (q-value = 1)\n\n[1] \"FULL (Shannon exponential)\"\n[1] \"Tukey post-hoc test\"\n           diff       lwr        upr         p.adj\n3C-0C -246.4375 -442.9939  -49.88101 0.01492642034\n8C-0C -511.4071 -707.9635 -314.85066 0.00004295672\n8C-3C -264.9696 -461.5261  -68.41321 0.00950353162\n\n\n[1] \"FILT (Shannon exponential)\"\n[1] \"Tukey post-hoc test\"\n           diff       lwr        upr          p.adj\n3C-0C  -96.4627 -177.3128  -15.61258 0.019965252769\n8C-0C -283.1154 -363.9656 -202.26533 0.000002072881\n8C-3C -186.6527 -267.5029 -105.80262 0.000133670064\n\n\n[1] \"PIME (Shannon exponential)\"\n[1] \"Dunn test with Benjamini-Hochberg correction\"\n             Z     P.unadj       P.adj\n0C-3C 1.767767 0.077099872 0.077099872\n0C-8C 3.535534 0.000406952 0.001220856\n3C-8C 1.767767 0.077099872 0.115649808\n\n\n[1] \"PERfect (Shannon exponential)\"\n[1] \"Tukey post-hoc test\"\n            diff       lwr        upr          p.adj\n3C-0C  -82.87871 -155.6134  -10.14407 0.025808833615\n8C-0C -232.15045 -304.8851 -159.41581 0.000005488596\n8C-3C -149.27174 -222.0064  -76.53710 0.000385348747\n\nInverse Simpson (q-value = 2)\n\n[1] \"FULL (Inverse Simpson)\"\n[1] \"Tukey post-hoc test\"\n           diff       lwr        upr         p.adj\n3C-0C -157.7331 -251.7760  -63.69027 0.00202540187\n8C-0C -249.3938 -343.4367 -155.35097 0.00003566326\n8C-3C  -91.6607 -185.7036    2.38217 0.05628905499\n\n\n[1] \"FILT (Inverse Simpson)\"\n[1] \"Tukey post-hoc test\"\n            diff       lwr        upr           p.adj\n3C-0C  -84.38551 -126.1609  -42.61016 0.0004422940804\n8C-0C -158.66732 -200.4427 -116.89197 0.0000008678593\n8C-3C  -74.28181 -116.0572  -32.50646 0.0012804120273\n\n\n[1] \"PIME (Inverse Simpson)\"\n[1] \"Tukey post-hoc test\"\n            diff        lwr       upr          p.adj\n3C-0C  -61.82853  -93.26452 -30.39255 0.000556162049\n8C-0C -122.59975 -154.03574 -91.16377 0.000000651479\n8C-3C  -60.77122  -92.20720 -29.33524 0.000643758728\n\n\n[1] \"PERfect (Inverse Simpson)\"\n[1] \"Tukey post-hoc test\"\n            diff       lwr        upr          p.adj\n3C-0C  -80.17581 -122.1927  -38.15894 0.000718157610\n8C-0C -146.57155 -188.5884 -104.55467 0.000002158578\n8C-3C  -66.39574 -108.4126  -24.37887 0.003172202683\n\n\n\nNow we can plot the results from the posthoc analyses for each metric and data set using the function div_test_plot_jjs. I modified the original function (div_test_plot) to control a little of the formatting.\nThe command is as follows:\ndiv_test_plot(divtest = x, chart = \"type\", colour = col.pal, \n              posthoc = TRUE, threshold = value))\nwhere x is the results from the div_test function, \"type\" is chart type (box, jitter, or violin), colour is is a color palette, posthoc indicates whether to run posthoc pairwise analyses, and value is the maximum p-value to show in pairwise posthoc results. WARNING if none of the posthoc results are below the specified threshold, the function will throw an error. Therefore, until this is fixed, all posthoc values are shown.\n\n\nShow code\nsource(\"hack_code/div_test_plot_jjs.R\")\nrm(list=ls(pattern=\"_adt_plot\"))\nfor (i in objects(pattern=\"_adt\")) {\n     tmp_name <- purrr::map_chr(i, ~ paste0(., \"_plot\"))\n     tmp_get <- get(i)\n     tmp_df <- div_test_plot_jjs(tmp_get, chart = \"box\",\n                                 colour = swel_col, posthoc = TRUE)\n     tmp_df <- ggpar(tmp_df, legend = \"none\")\n     print(tmp_name)\n     assign(tmp_name, tmp_df)\n     rm(list = ls(pattern = \"tmp_\"))\n}\nssu18_ps_work_q0_adt_plot\n\n\n\n\nAlpha Diversity Plots\nPosthoc adjusted p-values given for each pairwise comparison.\n\n\n\n(16S rRNA) Figure 1 | Alpha diversity plots. Top row = Observed; middle row = Shannon exponential; bottom row = Inverse Simpson. From left to right, Full (unfiltered) data, Arbitrary filtered, PERfect filtered, PIME filtered.\n\n\n\n\n\n\nITS\n\n\n\nTo account for presence of rare sequence variants caused by sequencing errors or other technical artifacts, we use Hill numbers (Alberdi and Gilbert 2019a). Hill numbers allow the weight put on rare versus abundant sequence variants to be scaled while providing intuitive comparisons of diversity levels using “effective number of ASVs” as a measuring unit. This approach allows for balancing the over representation of rare ASVs that might be inflated due to sequencing errors.\nWe will then use Shapiro-Wilk tests to test for normalcy and then, depending on the results, either use parametric ANOVA or non-parametric Kruskal-Wallis to compare alpha diversity among treatments.\nCalculate Hill Numbers\nTo calculate Hill numbers, we use the R package hilldiv (Alberdi and Gilbert 2019b). We calculate three metrics that put more or less weight on common species:\nObserved richness, where q-value = 0.\nShannon exponential, which weighs ASVs by their frequency, where q-value = 1.\nSimpson multiplicative inverse, which over weighs abundant ASVs, where q-value = 2.\nWe perform each analysis against the Full (unfiltered) data set as well as the Arbitrary, PERfect and PIME, filtered data sets using the function hill_div.\nThe command is as follows:\nhill_div(count = x, qvalue = i, tree = ultrametric_tree)\nwhere x is the sample by ASV table, i is the q-value corresponding to the metric of interest and tree is an ultrametric formatted phylogenetic tree, however this really doesn’t apply for ITS data anyway.\nWe first transform all the data to relative abundance values, and compute new trees.\n\n\nShow code\nits18_alpha_ds <- c(\"its18_ps_work\", \"its18_ps_filt\", \"its18_ps_perfect\", \"its18_ps_pime\")\nfor (i in its18_alpha_ds) {\n  tmp_ps <- transform_sample_counts(get(i), function(otu) otu/sum(otu))\n  tmp_ps@phy_tree <- NULL\n  tmp_tree <- rtree(ntaxa(tmp_ps), rooted = TRUE,\n                      tip.label = taxa_names(tmp_ps))\n  tmp_ps_norm <- merge_phyloseq(tmp_ps, sample_data, tmp_tree)\n  tmp_asv <- data.frame(t(otu_table(tmp_ps_norm)))\n  tmp_ps_name <- purrr::map_chr(i, ~ paste0(., \"_norm\"))\n  assign(tmp_ps_name, tmp_ps_norm)\n  tmp_asv_name <- purrr::map_chr(i, ~ paste0(., \"_tu\"))\n  assign(tmp_asv_name, tmp_asv)\n  rm(list = ls(pattern = \"tmp_\"))\n}\n\nNext, we run the analysis for all three metrics on the data sets (without a tree).\n\n\nShow code\nqvalue <- c(0,1,2)\nfor (i in qvalue) {\n  for (j in its18_alpha_ds) {\n     tmp_asv <- get(purrr::map_chr(j, ~ paste0(., \"_tu\")))\n     tmp_df <- data.frame(hill_div(tmp_asv, qvalue = i))\n     tmp_df <- tmp_df %>% dplyr::rename(\"tmp_name\" = 1) %>%\n                              tibble::rownames_to_column(\"SamName\")\n     tmp_name <- purrr::map_chr(j, ~ paste0(., \"_h\", i))\n     print(tmp_name)\n     assign(tmp_name, tmp_df)\n     rm(list = ls(pattern = \"tmp_\"))\n  }\n}\nobjects(pattern = \"_h\")\n\nAnd make summary tables to add back into each ps object.\n\n\nShow code\nfor (i in its18_alpha_ds) {\n     tmp_obs <- get(purrr::map_chr(i, ~ paste0(., \"_h0\")))\n     tmp_sha <- get(purrr::map_chr(i, ~ paste0(., \"_h1\")))\n     tmp_sim <- get(purrr::map_chr(i, ~ paste0(., \"_h2\")))\n     tmp_hill <- dplyr::left_join(tmp_obs, tmp_sha, by = \"SamName\") %>%\n       dplyr::left_join(., tmp_sim, by = \"SamName\") %>%\n       dplyr::rename(\"Observed\" = 2, \"Shannon_exp\" = 3, \"InvSimpson\" = 4)\n     tmp_name <- purrr::map_chr(i, ~ paste0(., \"_hill\"))\n     assign(tmp_name, tmp_hill)\n     rm(list = ls(pattern = \"tmp_\"))\n}\nobjects(pattern = \"_hill\")\nobjects()\n\nAnd then create the new objects with the diversity data.\n\n\nShow code\nfor (i in its18_alpha_ds) {\n     tmp_ps <- get(i)\n     tmp_tree <- rtree(ntaxa(tmp_ps), rooted = TRUE,\n                      tip.label = taxa_names(tmp_ps))\n     tmp_ps <- merge_phyloseq(tmp_ps, sample_data, tmp_tree)\n     tmp_hill <- get(purrr::map_chr(i, ~ paste0(., \"_hill\")))\n     tmp_hill_samp <- dplyr::left_join(data.frame(sample_data(tmp_ps)),\n                                         tmp_hill, by = \"SamName\")\n     tmp_hill_samp$ID <- tmp_hill_samp$SamName\n     tmp_hill_samp <- tmp_hill_samp %>%  tibble::column_to_rownames(\"ID\")\n     tmp_ps2 <- merge_phyloseq(otu_table(tmp_ps),\n                                sample_data(tmp_hill_samp),\n                                tax_table(tmp_ps),\n                                phy_tree(tmp_ps))\n     assign(i, tmp_ps2)\n     tmp_path <- file.path(\"files/alpha/rdata/\")\n     saveRDS(tmp_ps2, paste(tmp_path, i, \".rds\", sep = \"\"))\n     rm(list = ls(pattern = \"tmp_\"))\n}\nobjects()\n\nHill Numbers Summary\nNow we summarize the data for each sample against all three metrics. The table contains the results of ASV diversity estimates from the full data set and the three filtered data sets.\nThe suffix _fi indicates metrics for the Arbitrary data set. The suffix _pe indicates metrics for the PERfect data set and the suffix _pet indicates the lineage diversity for the PERfect data set.\nThe suffix _pi indicates metrics for the PIME data set and the suffix _pit indicates the lineage diversity for the PIME data set.\n\n\n\n\n\n\nHill Summary\n(ITS) Table 1 | Hill numbers for samples in the unfiltered & filtered data sets.\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Sample_ID\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P10_D00_010_C0E\"],\"Observed\":[945,719,1011,765,349,1017,616,954,867,335,702,745,812],\"Observed_fi\":[499,344,494,423,204,471,296,486,492,223,345,390,404],\"Observed_pe\":[148,98,147,136,64,161,90,157,147,76,105,118,143],\"Observed_pi\":[181,123,238,196,109,229,131,246,205,97,198,196,203],\"Shannon_exp\":[55.9,141.5,112.5,132.9,112.1,60.9,157.5,99.5,160.4,35,87.2,232.7,24.6],\"Shannon_exp_fi\":[33.8,79,64,83,72.2,43.3,76.6,58.4,102.9,28,46.7,133.6,14.7],\"Shannon_exp_pe\":[18.5,31.8,38.1,45.7,26.2,25.2,34.2,34.2,46.3,16.9,25.7,51.9,11.1],\"Shannon_exp_pi\":[14.8,31.6,43.3,56.5,42.8,39.5,35.1,35.2,48,18.1,30.7,66.6,8.1],\"InvSimpson\":[10.7,42.4,36.1,44.1,49,17.6,41.8,23.9,56.2,13.7,25.5,96,4.9],\"InvSimpson_fi\":[8.4,28.1,26.2,29.1,36.4,15.5,20.7,16.5,42.8,12.3,17.9,61.7,4],\"InvSimpson_pe\":[6.8,17.3,21.9,24.4,17.8,12.5,15.3,14.8,27.2,9.1,14.2,33.9,3.8],\"InvSimpson_pi\":[5.6,12.5,19.9,26.9,23.7,20.6,11.5,13.1,22.5,9.9,14.2,34.9,2.5]},\"columns\":[{\"accessor\":\"Sample_ID\",\"name\":\"Sample_ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P10_D00_010_C0E\"],\"header\":\"Sample ID\",\"minWidth\":150,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"5px solid #eee\"},\"headerStyle\":{\"borderRight\":\"5px solid #eee\"}},{\"accessor\":\"Observed\",\"name\":\"FULL\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"945\",\"719\",\"1011\",\"765\",\"349\",\"1017\",\"616\",\"954\",\"867\",\"335\",\"702\",\"745\",\"812\"],\"header\":\"FULL\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Observed_fi\",\"name\":\"Arbitrary\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"499\",\"344\",\"494\",\"423\",\"204\",\"471\",\"296\",\"486\",\"492\",\"223\",\"345\",\"390\",\"404\"],\"header\":\"Arbitrary\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Observed_pe\",\"name\":\"PERfect\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"148\",\"98\",\"147\",\"136\",\"64\",\"161\",\"90\",\"157\",\"147\",\"76\",\"105\",\"118\",\"143\"],\"header\":\"PERfect\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Observed_pi\",\"name\":\"PIME\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"181\",\"123\",\"238\",\"196\",\"109\",\"229\",\"131\",\"246\",\"205\",\"97\",\"198\",\"196\",\"203\"],\"header\":\"PIME\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"style\":{\"borderRight\":\"5px solid #eee\"},\"headerStyle\":{\"borderRight\":\"5px solid #eee\"}},{\"accessor\":\"Shannon_exp\",\"name\":\"FULL\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"55.9\",\"141.5\",\"112.5\",\"132.9\",\"112.1\",\"60.9\",\"157.5\",\"99.5\",\"160.4\",\"35\",\"87.2\",\"232.7\",\"24.6\"],\"header\":\"FULL\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Shannon_exp_fi\",\"name\":\"Arbitrary\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"33.8\",\"79\",\"64\",\"83\",\"72.2\",\"43.3\",\"76.6\",\"58.4\",\"102.9\",\"28\",\"46.7\",\"133.6\",\"14.7\"],\"header\":\"Arbitrary\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Shannon_exp_pe\",\"name\":\"PERfect\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"18.5\",\"31.8\",\"38.1\",\"45.7\",\"26.2\",\"25.2\",\"34.2\",\"34.2\",\"46.3\",\"16.9\",\"25.7\",\"51.9\",\"11.1\"],\"header\":\"PERfect\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Shannon_exp_pi\",\"name\":\"PIME\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"14.8\",\"31.6\",\"43.3\",\"56.5\",\"42.8\",\"39.5\",\"35.1\",\"35.2\",\"48\",\"18.1\",\"30.7\",\"66.6\",\"8.1\"],\"header\":\"PIME\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"style\":{\"borderRight\":\"5px solid #eee\"},\"headerStyle\":{\"borderRight\":\"5px solid #eee\"}},{\"accessor\":\"InvSimpson\",\"name\":\"FULL\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"10.7\",\"42.4\",\"36.1\",\"44.1\",\"49\",\"17.6\",\"41.8\",\"23.9\",\"56.2\",\"13.7\",\"25.5\",\"96\",\"4.9\"],\"header\":\"FULL\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"InvSimpson_fi\",\"name\":\"Arbitrary\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"8.4\",\"28.1\",\"26.2\",\"29.1\",\"36.4\",\"15.5\",\"20.7\",\"16.5\",\"42.8\",\"12.3\",\"17.9\",\"61.7\",\"4\"],\"header\":\"Arbitrary\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"InvSimpson_pe\",\"name\":\"PERfect\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"6.8\",\"17.3\",\"21.9\",\"24.4\",\"17.8\",\"12.5\",\"15.3\",\"14.8\",\"27.2\",\"9.1\",\"14.2\",\"33.9\",\"3.8\"],\"header\":\"PERfect\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"InvSimpson_pi\",\"name\":\"PIME\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"5.6\",\"12.5\",\"19.9\",\"26.9\",\"23.7\",\"20.6\",\"11.5\",\"13.1\",\"22.5\",\"9.9\",\"14.2\",\"34.9\",\"2.5\"],\"header\":\"PIME\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"columnGroups\":[{\"name\":\"Observed richness\",\"headerStyle\":{\"borderRight\":\"5px solid #eee\",\"fontSize\":\"1.1em\"},\"columns\":[\"Observed\",\"Observed_fi\",\"Observed_pe\",\"Observed_pi\"]},{\"name\":\"Shannon exponential\",\"headerStyle\":{\"fontSize\":\"1.1em\"},\"columns\":[\"Shannon_exp\",\"Shannon_exp_fi\",\"Shannon_exp_pe\",\"Shannon_exp_pi\"]},{\"name\":\"Simpson multiplicative inverse\",\"headerStyle\":{\"fontSize\":\"1.1em\"},\"columns\":[\"InvSimpson\",\"InvSimpson_fi\",\"InvSimpson_pe\",\"InvSimpson_pi\"]}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,13],\"paginationType\":\"numbers\",\"showPagination\":true,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"484a2a1d115ced7d1614beaeae762c62\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nNormality Tests\nBefore running significance tests, we need to know if data is normally distributed, which will tell use whether to use a parametric or non-parametric test. To test if the data are normally distributed, we use the Shapiro-Wilk Normality test and the Bartlett Test of Homogeneity of Variances.\nIf the p-values are both not significant (p > 0.05) from the tests, we accept the null hypothesis (that the results are normally distributed) and test for significance between samples using an ANOVA. If the p-values are both significant (p < 0.05), we reject the null hypothesis (that the results are normally distributed) and test for significance between samples using Kruskal-Wallis (non-parametric equivalent of ANOVA).\nThe commands are as follows:\nshapiro.test(x), where x is a numeric vector of alpha diversity values from the sample data table.\nbartlett.test(Value ~ Group, data = df) Where Value is the metric of interest, Group in the treatment to compare, and df is the data frame.\nFirst the Shapiro-Wilk Normality test.\n\n\nShow code\nits_tab_alpha_div\nits18_div_tab <- its_tab_alpha_div\nits18_shap_tests_asv <- c()\nfor (i in colnames(its18_div_tab[,7:ncol(its18_div_tab)])) {\n   tmp_name <- purrr::map_chr(i, ~ paste0(\"its18_shap_asv_\", .))\n   its18_shap_tests_asv <- append(its18_shap_tests_asv, tmp_name)\n   tmp_test <- eval(shapiro.test(its18_div_tab[[i]]))\n   tmp_test$data.name <- tmp_name\n   assign(tmp_name, tmp_test)\n   rm(list = ls(pattern = \"tmp_\"))\n}\n\nobjects(pattern = \"shap_\")\n\nAnd then the Bartlett Test of Homogeneity of Variances.\n\n\nShow code\nits18_div_tab_asv <- its_tab_alpha_div\nits18_bart_tests_asv <- c()\nfor (i in colnames(its18_div_tab_asv[,7:ncol(its18_div_tab_asv)])) {\n   tmp_name <- purrr::map_chr(i, ~ paste0(\"its18_bart_asv_\", .))\n   its18_bart_tests_asv <- append(its18_bart_tests_asv, tmp_name)\n   tmp_test <- eval(bartlett.test(its18_div_tab_asv[[i]] ~ TEMP, data = its18_div_tab_asv))\n   tmp_test$data.name <- tmp_name\n   assign(tmp_name, tmp_test)\n   rm(list = ls(pattern = \"tmp_\"))\n}\nobjects(pattern = \"_bart_\")\n\nHere we see which Shapiro-Wilk Normality and Bartlett tests were significant and which were not. So wherever the value of both p-values in > 0.05 we can use an ANOVA, otherwise we use Kruskal-Wallis.\n\n\n\n(ITS) Table 2 | Summary of Normality Tests for unfiltered & filtered data sets. P-values in red indicate significance (p-value < 0.05).\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"metric\":[\"Observed\",\"Observed\",\"Observed\",\"Observed\",\"Shannon\",\"Shannon\",\"Shannon\",\"Shannon\",\"InvSimpson\",\"InvSimpson\",\"InvSimpson\",\"InvSimpson\"],\"dataset\":[\"FULL\",\"FILT\",\"PERfect\",\"PIME\",\"FULL\",\"FILT\",\"PERfect\",\"PIME\",\"FULL\",\"FILT\",\"PERfect\",\"PIME\"],\"p-value (normality)\":[0.1284,0.1148,0.1616,0.1343,0.8465,0.9339,0.9213,0.9724,0.1837,0.3503,0.9607,0.9581],\"p-value (homogeneity)\":[0.5161,0.9381,0.6674,0.4543,0.4455,0.3632,0.5551,0.4325,0.1255,0.1601,0.2372,0.4763],\"method\":[\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\"]},\"columns\":[{\"accessor\":\"metric\",\"name\":\"Metric\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"Observed\",\"Observed\",\"Observed\",\"Observed\",\"Shannon\",\"Shannon\",\"Shannon\",\"Shannon\",\"InvSimpson\",\"InvSimpson\",\"InvSimpson\",\"InvSimpson\"],\"header\":\"Metric\",\"minWidth\":100,\"align\":\"left\",\"headerVAlign\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"dataset\",\"name\":\"dataset\",\"type\":\"character\",\"sortable\":true,\"resizable\":false,\"filterable\":false,\"cell\":[\"FULL\",\"FILT\",\"PERfect\",\"PIME\",\"FULL\",\"FILT\",\"PERfect\",\"PIME\",\"FULL\",\"FILT\",\"PERfect\",\"PIME\"],\"header\":\"dataset\",\"minWidth\":80,\"align\":\"center\",\"headerVAlign\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"p-value (normality)\",\"name\":\"p-value (normality)\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":false,\"filterable\":false,\"cell\":[\"0.1284\",\"0.1148\",\"0.1616\",\"0.1343\",\"0.8465\",\"0.9339\",\"0.9213\",\"0.9724\",\"0.1837\",\"0.3503\",\"0.9607\",\"0.9581\"],\"header\":\"p-value (normality)\",\"minWidth\":100,\"align\":\"center\",\"headerVAlign\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"style\":[{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"}]},{\"accessor\":\"p-value (homogeneity)\",\"name\":\"p-value (homogeneity)\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":false,\"filterable\":false,\"cell\":[\"0.5161\",\"0.9381\",\"0.6674\",\"0.4543\",\"0.4455\",\"0.3632\",\"0.5551\",\"0.4325\",\"0.1255\",\"0.1601\",\"0.2372\",\"0.4763\"],\"header\":\"p-value (homogeneity)\",\"minWidth\":130,\"align\":\"center\",\"headerVAlign\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"style\":[{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"}]},{\"accessor\":\"method\",\"name\":\"method\",\"type\":\"character\",\"sortable\":true,\"resizable\":false,\"filterable\":false,\"cell\":[\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\"],\"header\":\"method\",\"minWidth\":120,\"align\":\"center\",\"headerVAlign\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"defaultPageSize\":12,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,12],\"paginationType\":\"numbers\",\"showPagination\":false,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"57ccf5f6f62b87e32127f70dae384abd\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nSignificance Tests\nTo begin, we need to create a hierarchy variable; a two-column matrix specifying the relationship between samples (first column) and groups (second column).\n\n\nShow code\nits18_hill_hier <- its_tab_alpha_div\nits18_hill_hier <- its18_hill_hier %>% dplyr::select(\"Sample_ID\", \"TEMP\") %>%\n  tibble::remove_rownames()\nits18_hill_hier <- its18_hill_hier[order(its18_hill_hier$TEMP), ]\nits18_hill_hier$TEMP = paste(its18_hill_hier$TEMP, 'C', sep='')\nits18_hill_hier <- its18_hill_hier %>% tibble::remove_rownames()\nsaveRDS(its18_hill_hier, \"files/alpha/rdata/its18_hill_hier.rds\")\n\nAgain, we start by testing significance of ASV diversity for the data sets against each of the three metrics using the div_test function.\nThe command is as follows:\ndiv_test(countable = x, qvalue = i, hierarchy = hier, \n         tree = ultrametric_tree, posthoc = TRUE)\nwhere x is ASV by sample table, i is the q-value corresponding to the metric of interest, hier is the hierarchy matrix, tree is an ultrametric formatted phylogenetic tree (if you choose to explore lineage diversity), and posthoc indicates whether to run post hoc pairwise analyses.\n\n\nShow code\nqvalue <- c(0,1,2)\nfor (i in its18_alpha_ds) {\n     for (j in qvalue) {\n         tmp_get <- get(purrr::map_chr(i, ~ paste0(., \"_tu\")))\n         tmp_test <- div_test(tmp_get, qvalue = j,\n                      hierarchy = its18_hill_hier,\n                      posthoc = TRUE)\n         tmp_name <- purrr::map_chr(i, ~ paste0(., \"_q\", j, \"_adt\"))\n         print(tmp_name)\n         assign(tmp_name, tmp_test)\n         rm(list = ls(pattern = \"tmp_\"))\n }\n}\n\n\n\n\n\n\n\n\n\n\nSummary\n(ITS) Table 3 | Summary of significance tests for unfiltered & filtered data sets. P-values in red for post hoc analysis indicate significance (p-value < 0.05).\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"dataset\":[\"FULL\",\"FULL\",\"FULL\",\"FILT\",\"FILT\",\"FILT\",\"PIME\",\"PIME\",\"PIME\",\"PERfect\",\"PERfect\",\"PERfect\"],\"metric\":[\"Observed\",\"Shannon exponential\",\"Inverse Simpson\",\"Observed\",\"Shannon exponential\",\"Inverse Simpson\",\"Observed\",\"Shannon exponential\",\"Inverse Simpson\",\"Observed\",\"Shannon exponential\",\"Inverse Simpson\"],\"q-value\":[\"0\",\"1\",\"2\",\"0\",\"1\",\"2\",\"0\",\"1\",\"2\",\"0\",\"1\",\"2\"],\"normality p-value\":[0.1284,0.8456,0.1837,0.1148,0.9344,0.3491,0.1343,0.9721,0.9549,0.1616,0.9194,0.9609],\"homogeneity p-value\":[0.5161,0.4454,0.1258,0.9381,0.3632,0.1594,0.4543,0.4363,0.4768,0.6674,0.5554,0.2362],\"method\":[\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\"],\"posthoc method\":[\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\"],\"posthoc p-value\":[0.0061449553764622,0.221216281343134,0.181872267062003,0.00236345013953324,0.139482445831165,0.183238990772846,7.36265579596885e-06,0.346441934422685,0.341788345935967,0.00108705030410124,0.186893114842365,0.204850383725631]},\"columns\":[{\"accessor\":\"dataset\",\"name\":\"Dataset\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"FULL\",\"FULL\",\"FULL\",\"FILT\",\"FILT\",\"FILT\",\"PIME\",\"PIME\",\"PIME\",\"PERfect\",\"PERfect\",\"PERfect\"],\"header\":\"Dataset\",\"minWidth\":80,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"metric\",\"name\":\"metric\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"Observed\",\"Shannon exponential\",\"Inverse Simpson\",\"Observed\",\"Shannon exponential\",\"Inverse Simpson\",\"Observed\",\"Shannon exponential\",\"Inverse Simpson\",\"Observed\",\"Shannon exponential\",\"Inverse Simpson\"],\"header\":\"metric\",\"minWidth\":140,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"q-value\",\"name\":\"q-value\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0\",\"1\",\"2\",\"0\",\"1\",\"2\",\"0\",\"1\",\"2\",\"0\",\"1\",\"2\"],\"header\":\"q-value\",\"minWidth\":70,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"normality p-value\",\"name\":\"p-value (normality)\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.1284\",\"0.8456\",\"0.1837\",\"0.1148\",\"0.9344\",\"0.3491\",\"0.1343\",\"0.9721\",\"0.9549\",\"0.1616\",\"0.9194\",\"0.9609\"],\"header\":\"p-value (normality)\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"homogeneity p-value\",\"name\":\"p-value (homogeneity)\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.5161\",\"0.4454\",\"0.1258\",\"0.9381\",\"0.3632\",\"0.1594\",\"0.4543\",\"0.4363\",\"0.4768\",\"0.6674\",\"0.5554\",\"0.2362\"],\"header\":\"p-value (homogeneity)\",\"minWidth\":130,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"method\",\"name\":\"method\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\",\"ANOVA\"],\"header\":\"method\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"posthoc method\",\"name\":\"posthoc method\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\",\"Tukey post-hoc test\"],\"header\":\"posthoc method\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"posthoc p-value\",\"name\":\"posthoc p-value\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"6.14e-03\",\"2.21e-01\",\"1.82e-01\",\"2.36e-03\",\"1.39e-01\",\"1.83e-01\",\"7.36e-06\",\"3.46e-01\",\"3.42e-01\",\"1.09e-03\",\"1.87e-01\",\"2.05e-01\"],\"header\":\"posthoc p-value\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"style\":[{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"}]}],\"defaultPageSize\":12,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,12],\"paginationType\":\"numbers\",\"showPagination\":false,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"theme\":{\"style\":{\"fontSize\":\"0.7em\"}},\"dataKey\":\"b89c88ac2ab5dbd8a9dd2214e1c204d5\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nPostHoc Analyses\nFirst let’s check the results of each posthoc analysis.\n\n\nObserved (q-value = 0)\n\n[1] \"FULL (Observed)\"\n[1] \"Tukey post-hoc test\"\n         diff       lwr        upr       p.adj\n3C-0C  -68.70 -337.2489  199.84893 0.768173881\n8C-0C -394.45 -662.9989 -125.90107 0.006201167\n8C-3C -325.75 -608.8254  -42.67457 0.025372568\n\n\n[1] \"FILT (Observed)\"\n[1] \"Tukey post-hoc test\"\n         diff       lwr       upr       p.adj\n3C-0C   11.00 -101.5783 123.57828 0.961373753\n8C-0C -173.25 -285.8283 -60.67172 0.004588355\n8C-3C -184.25 -302.9179 -65.58208 0.004327805\n\n\n[1] \"PIME (Observed)\"\n[1] \"Tukey post-hoc test\"\n        diff        lwr        upr          p.adj\n3C-0C  -28.3  -59.02587   2.425871 0.071121744588\n8C-0C -107.8 -138.52587 -77.074129 0.000006170051\n8C-3C  -79.5 -111.88791 -47.112088 0.000138893963\n\n\n[1] \"PERfect (Observed)\"\n[1] \"Tukey post-hoc test\"\n        diff       lwr       upr       p.adj\n3C-0C  -5.35 -38.46046  27.76046 0.898558605\n8C-0C -60.60 -93.71046 -27.48954 0.001378091\n8C-3C -55.25 -90.15149 -20.34851 0.003804791\n\nShannon exp (q-value = 1)\n\n[1] \"FULL (Shannon exponential)\"\n[1] \"Tukey post-hoc test\"\n           diff        lwr       upr     p.adj\n3C-0C  68.52857  -31.79969 168.85684 0.1967805\n8C-0C  34.59038  -65.73789 134.91864 0.6257554\n8C-3C -33.93820 -139.69348  71.81708 0.6644870\n\n\n[1] \"FILT (Shannon exponential)\"\n[1] \"Tukey post-hoc test\"\n           diff       lwr      upr     p.adj\n3C-0C  42.89239 -10.62278 96.40756 0.1199483\n8C-0C  18.50838 -35.00679 72.02355 0.6240029\n8C-3C -24.38401 -80.79395 32.02593 0.4878559\n\n\n[1] \"PIME (Shannon exponential)\"\n[1] \"Tukey post-hoc test\"\n             diff       lwr      upr     p.adj\n3C-0C  15.1283988 -14.51712 44.77392 0.3777877\n8C-0C   0.5613833 -29.08414 30.20690 0.9985157\n8C-3C -14.5670155 -45.81614 16.68211 0.4381419\n\n\n[1] \"PERfect (Shannon exponential)\"\n[1] \"Tukey post-hoc test\"\n             diff        lwr       upr     p.adj\n3C-0C  13.7449005  -7.058747 34.548549 0.2152611\n8C-0C   0.3995566 -20.404091 21.203205 0.9984731\n8C-3C -13.3453440 -35.274314  8.583626 0.2639185\n\nInverse Simpson (q-value = 2)\n\n[1] \"FULL (Inverse Simpson)\"\n[1] \"Tukey post-hoc test\"\n           diff       lwr      upr     p.adj\n3C-0C  30.12853 -10.93247 71.18953 0.1597780\n8C-0C  15.09562 -25.96538 56.15662 0.5888250\n8C-3C -15.03291 -58.31500 28.24918 0.6216188\n\n\n[1] \"FILT (Inverse Simpson)\"\n[1] \"Tukey post-hoc test\"\n            diff       lwr      upr     p.adj\n3C-0C  19.474580  -7.08637 46.03553 0.1601425\n8C-0C   8.362193 -18.19876 34.92314 0.6743506\n8C-3C -11.112388 -39.11009 16.88531 0.5422962\n\n\n[1] \"PIME (Inverse Simpson)\"\n[1] \"Tukey post-hoc test\"\n            diff        lwr       upr     p.adj\n3C-0C  8.4231399  -7.904659 24.750938 0.3705643\n8C-0C  0.3894783 -15.938320 16.717277 0.9976460\n8C-3C -8.0336616 -25.244672  9.177349 0.4372626\n\n\n[1] \"PERfect (Inverse Simpson)\"\n[1] \"Tukey post-hoc test\"\n           diff        lwr       upr     p.adj\n3C-0C  9.662568  -4.771842 24.096979 0.2078889\n8C-0C  1.449038 -12.985373 15.883449 0.9592809\n8C-3C -8.213530 -23.428735  7.001674 0.3405328\n\n\n\nNow we can plot the results from the posthoc analyses for each metric and data set using the function div_test_plot_jjs. I modified the original function (div_test_plot) to control a little of the formatting.\nThe command is as follows:\ndiv_test_plot(divtest = x, chart = \"type\", colour = col.pal, \n              posthoc = TRUE, threshold = value))\nwhere x is the results from the div_test function, \"type\" is chart type (box, jitter, or violin), colour is is a color palette, posthoc indicates whether to run posthoc pairwise analyses, and value is the maximum p-value to show in pairwise posthoc results. WARNING if none of the posthoc results are below the specified threshold, the function will throw an error. Therefore, until this is fixed, all posthoc values are shown.\n\n\nShow code\nsource(\"hack_code/div_test_plot_jjs.R\")\nrm(list=ls(pattern=\"_adt_plot\"))\nfor (i in objects(pattern=\"_adt\")) {\n     tmp_name <- purrr::map_chr(i, ~ paste0(., \"_plot\"))\n     tmp_get <- get(i)\n     tmp_df <- div_test_plot_jjs(tmp_get, chart = \"box\",\n                                 colour = swel_col, posthoc = TRUE)\n     tmp_df <- ggpar(tmp_df, legend = \"none\")\n     print(tmp_name)\n     assign(tmp_name, tmp_df)\n     rm(list = ls(pattern = \"tmp_\"))\n}\nits18_ps_work_q0_adt_plot\n\n\n\n\nAlpha Diversity Plots\nPosthoc adjusted p-values given for each pairwise comparison.\n\n\n\n(ITS) Figure 1 | Alpha diversity plots. Top row = Observed; middle row = Shannon exponential; bottom row = Inverse Simpson. From left to right, Full (unfiltered) data, Arbitrary filtered, PERfect filtered, PIME filtered.\n\n\n\n\n\n\n\n\nAlberdi, Antton, and M Thomas P Gilbert. 2019a. “A Guide to the Application of Hill Numbers to DNA-Based Diversity Analyses.” Molecular Ecology Resources 19 (4): 804–17. https://doi.org/10.1111/1755‐0998.13014.\n\n\n———. 2019b. “Hilldiv: An r Package for the Integral Analysis of Diversity Based on Hill Numbers.” bioRxiv, 545665. https://doi.org/10.1101/545665.\n\n\n\n\n",
      "last_modified": "2021-10-12T18:15:53-05:00"
    },
    {
      "path": "beta.html",
      "title": "6 Beta Diversity & Dispersion Estimates",
      "description": "Reproducible workflow for ... In this workflow, ....\n",
      "author": [],
      "contents": "\n\nContents\nSynopsis\n16s rRNA\nSignificance Tests\nBeta Dispersion\nSignificance Tests\nSummaries\n\n\nITS\nSignificance Tests\nBeta Dispersion\nSignificance Tests\nSummaries\n\n\n\n\nClick here for setup information.\n\nknitr::opts_chunk$set(echo = TRUE, eval = FALSE)\nset.seed(119)\nlibrary(phyloseq); packageVersion(\"phyloseq\")\nlibrary(Biostrings); packageVersion(\"Biostrings\")\npacman::p_load(tidyverse, DT, ampvis2, hilldiv, \n               microbiome, phytools, phangorn, reactable,\n               pairwiseAdonis, codefolder, naniar, downloadthis,\n               labdsv, patchwork, agricolae, captioner, microeco,\n               install = FALSE, update = FALSE)\n\n#pacman::p_depends(agricolae, local = TRUE)  \n#pacman::p_depends_reverse(agricolae, local = TRUE)  \n\noptions(scipen=999)\nknitr::opts_current$get(c(\n  \"cache\",\n  \"cache.path\",\n  \"cache.rebuild\",\n  \"dependson\",\n  \"autodep\"\n))\n\n\n\n\n\n\n\n\n\n\n\n\n\nSynopsis\nThis workflow contains diversity assessments for the 2018 high temperature data sets. In order to run the workflow, you either need to first run the DADA2 Workflow for 2018 High Temp samples and the Data Preparation workflow or begin with the output files from the Data Preparation workflow. See the Data Availability page for complete details.\nIn this workflow…\n16s rRNA\n\n\n\nSignificance Tests\nIn order to test for significance between sample groups, we must perform the following steps:\nTransform sample counts to relative abundance.\nCreate distance matrices based on some metrics, for example wunifrac, unifrac, and jsd. For this we use the function phyloseq::distance.\nNext, calculate beta dispersion using the betadisper function from the vegan package (Oksanen et al. 2012).\nThen, use the function permutest to run a Permutation test for homogeneity of multivariate dispersions.\nIf the beta dispersion tests are not significant we will run a PERMANOVA using adonis (since PERMANOVA assumes equal dispersion), otherwise we will use Analysis of Similarity (ANOSIM), both available in the vegan package (Oksanen et al. 2012).\nSteps 2–4 are combined in a for loop that tests all three distance metrics.\nBefore we begin, we need to first transform sample counts to relative abundance and generate some new trees.\n\n\nShow code\nssu_samp_ps <- c(\"ssu18_ps_work\", \"ssu18_ps_filt\", \n             \"ssu18_ps_perfect\", \"ssu18_ps_pime\")\nfor (i in ssu_samp_ps) {\n     tmp_name <- purrr::map_chr(i, ~ paste0(., \"_prop\"))\n     tmp_get <- get(i)\n     tmp_ps <- transform_sample_counts(tmp_get, function(otu) \n                                          1e5 * otu/sum(otu))\n     tmp_ps@phy_tree <- NULL\n     tmp_ps <- prune_samples(sample_sums(tmp_ps) > 0, tmp_ps)\n     tmp_tree <- rtree(ntaxa(tmp_ps), rooted = TRUE, \n                       tip.label = taxa_names(tmp_ps))\n     tmp_ps <- merge_phyloseq(tmp_ps, sample_data, tmp_tree)\n     print(tmp_name)\n     assign(tmp_name, tmp_ps)\n     rm(list = ls(pattern = \"tmp_\"))\n}\n\nBeta Dispersion\nHere we create distance matrices for each metric, calculate the beta dispersion, and run a permutation test for homogeneity of multivariate dispersions.\n\n\nShow code\nssu_dist <- c(\"jsd\", \"unifrac\", \"wunifrac\")\nfor (i in ssu_samp_ps) {\n    for (d in ssu_dist){\n       tmp_get <- get(purrr::map_chr(i, ~ paste0(i, \"_prop\")))\n       tmp_samp <- data.frame(sample_data(tmp_get))\n       tmp_df <- phyloseq::distance(tmp_get, method = d)\n       tmp_df_name <- purrr::map_chr(d, ~ paste0(i, \"_beta_dist_\", .))\n       assign(tmp_df_name, tmp_df)\n       tmp_df2 <- betadisper(tmp_df, tmp_samp$TEMP, bias.adjust = TRUE)\n       tmp_df_name2 <- purrr::map_chr(d, ~ paste0(i, \"_beta_dispersion_\", .))\n       assign(tmp_df_name2, tmp_df2)\n       tmp_df3 <- permutest(tmp_df2, pairwise = TRUE,\n                            permutations = 1000, binary = FALSE)\n       tmp_df_name3 <- purrr::map_chr(d, ~ paste0(i, \"_permutest_\", .))\n       assign(tmp_df_name3, tmp_df3)\n       rm(list = ls(pattern = \"tmp_\"))\n    }\n}\nobjects()\n\nDetailed results of Beta Dispersion & Permutation tests\n\n\n\n\n\nFULL\n\n\n#################################################### \nBETA DISPERSION significance test jsd distance \n####################################################\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 1000\n\nResponse: Distances\n          Df   Sum Sq   Mean Sq      F N.Perm Pr(>F)\nGroups     2 0.018639 0.0093195 2.9882   1000 0.1089\nResiduals 12 0.037425 0.0031188                     \n\nPairwise comparisons:\n(Observed p-value below diagonal, permuted p-value above\ndiagonal)\n         0        3      8\n0          0.465534 0.1638\n3 0.412469          0.0599\n8 0.159005 0.075347       \n\n#################################################### \nBETA DISPERSION significance test unifrac distance \n####################################################\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 1000\n\nResponse: Distances\n          Df    Sum Sq    Mean Sq      F N.Perm  Pr(>F)   \nGroups     2 0.0062292 0.00311458 5.3484   1000 0.00999 **\nResiduals 12 0.0069881 0.00058234                         \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nPairwise comparisons:\n(Observed p-value below diagonal, permuted p-value above\ndiagonal)\n         0        3     8\n0          0.831169 0.012\n3 0.727926          0.032\n8 0.033203 0.048150      \n\n#################################################### \nBETA DISPERSION significance test wunifrac distance \n####################################################\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 1000\n\nResponse: Distances\n          Df   Sum Sq   Mean Sq      F N.Perm   Pr(>F)   \nGroups     2 0.018783 0.0093917 7.3178   1000 0.005994 **\nResiduals 12 0.015401 0.0012834                          \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nPairwise comparisons:\n(Observed p-value below diagonal, permuted p-value above\ndiagonal)\n         0        3     8\n0          0.957043 0.015\n3 0.938214          0.004\n8 0.024555 0.019472      \n\nArbitrary\n\n\n#################################################### \nBETA DISPERSION significance test jsd distance \n####################################################\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 1000\n\nResponse: Distances\n          Df   Sum Sq   Mean Sq      F N.Perm  Pr(>F)  \nGroups     2 0.019867 0.0099333 3.0824   1000 0.08891 .\nResiduals 12 0.038671 0.0032226                        \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nPairwise comparisons:\n(Observed p-value below diagonal, permuted p-value above\ndiagonal)\n         0        3      8\n0          0.854146 0.0859\n3 0.843567          0.0869\n8 0.112793 0.090799       \n\n#################################################### \nBETA DISPERSION significance test unifrac distance \n####################################################\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 1000\n\nResponse: Distances\n          Df   Sum Sq   Mean Sq      F N.Perm   Pr(>F)   \nGroups     2 0.025430 0.0127152 7.0788   1000 0.005994 **\nResiduals 12 0.021555 0.0017962                          \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nPairwise comparisons:\n(Observed p-value below diagonal, permuted p-value above\ndiagonal)\n         0        3     8\n0          0.583417 0.011\n3 0.568432          0.018\n8 0.018174 0.023627      \n\n#################################################### \nBETA DISPERSION significance test wunifrac distance \n####################################################\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 1000\n\nResponse: Distances\n          Df   Sum Sq   Mean Sq      F N.Perm   Pr(>F)   \nGroups     2 0.023408 0.0117041 6.7591   1000 0.004995 **\nResiduals 12 0.020779 0.0017316                          \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nPairwise comparisons:\n(Observed p-value below diagonal, permuted p-value above\ndiagonal)\n         0        3     8\n0          0.565435 0.008\n3 0.528192          0.013\n8 0.023244 0.032852      \n\nPERfect\n\n\n#################################################### \nBETA DISPERSION significance test jsd distance \n####################################################\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 1000\n\nResponse: Distances\n          Df   Sum Sq   Mean Sq      F N.Perm  Pr(>F)  \nGroups     2 0.027097 0.0135487 4.5971   1000 0.02098 *\nResiduals 12 0.035367 0.0029472                        \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nPairwise comparisons:\n(Observed p-value below diagonal, permuted p-value above\ndiagonal)\n         0        3     8\n0          0.778222 0.044\n3 0.771551          0.027\n8 0.061934 0.045555      \n\n#################################################### \nBETA DISPERSION significance test unifrac distance \n####################################################\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 1000\n\nResponse: Distances\n          Df   Sum Sq   Mean Sq      F N.Perm   Pr(>F)   \nGroups     2 0.034618 0.0173088 9.4781   1000 0.003996 **\nResiduals 12 0.021914 0.0018262                          \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nPairwise comparisons:\n(Observed p-value below diagonal, permuted p-value above\ndiagonal)\n          0         3     8\n0           0.5684316 0.008\n3 0.5529721           0.008\n8 0.0088715 0.0096445      \n\n#################################################### \nBETA DISPERSION significance test wunifrac distance \n####################################################\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 1000\n\nResponse: Distances\n          Df   Sum Sq   Mean Sq      F N.Perm   Pr(>F)   \nGroups     2 0.020738 0.0103692 7.5898   1000 0.002997 **\nResiduals 12 0.016395 0.0013662                          \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nPairwise comparisons:\n(Observed p-value below diagonal, permuted p-value above\ndiagonal)\n         0        3     8\n0          0.547453 0.005\n3 0.516927          0.003\n8 0.027061 0.017081      \n\nPIME\n\n\n#################################################### \nBETA DISPERSION significance test jsd distance \n####################################################\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 1000\n\nResponse: Distances\n          Df   Sum Sq   Mean Sq      F N.Perm Pr(>F)\nGroups     2 0.007284 0.0036418 0.9199   1000 0.4356\nResiduals 12 0.047509 0.0039591                     \n\nPairwise comparisons:\n(Observed p-value below diagonal, permuted p-value above\ndiagonal)\n        0       3      8\n0         0.84515 0.3876\n3 0.82435         0.3407\n8 0.37620 0.31969       \n\n#################################################### \nBETA DISPERSION significance test unifrac distance \n####################################################\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 1000\n\nResponse: Distances\n          Df   Sum Sq   Mean Sq      F N.Perm Pr(>F)\nGroups     2 0.016868 0.0084341 1.4936   1000 0.2398\nResiduals 12 0.067761 0.0056468                     \n\nPairwise comparisons:\n(Observed p-value below diagonal, permuted p-value above\ndiagonal)\n        0       3      8\n0         0.97902 0.2617\n3 0.97444         0.2058\n8 0.24180 0.21934       \n\n#################################################### \nBETA DISPERSION significance test wunifrac distance \n####################################################\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 1000\n\nResponse: Distances\n          Df   Sum Sq   Mean Sq      F N.Perm   Pr(>F)   \nGroups     2 0.025802 0.0129010 8.6861   1000 0.008991 **\nResiduals 12 0.017823 0.0014852                          \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nPairwise comparisons:\n(Observed p-value below diagonal, permuted p-value above\ndiagonal)\n         0        3     8\n0          0.982018 0.006\n3 0.982289          0.004\n8 0.015248 0.014089      \n\n\n\nRemember, if the beta dispersion p-value is greater than 0.05 we use PERMANOVA, otherwise we use ANOSIM.\n\n\n\n\n\n\n(16S rRNA) Table 1 | Summary of Beta Dispersion Tests for unfiltered & filtered data sets against various distance metrics. The test column shows the method chosen (based on the test results) to assess differences in beta diversity. If p-values are significant (red, p-value < 0.05) we used ANOSIM, otherwise we used PERMANOVA (blue, p-value > 0.05).\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"dataset\":[\"FULL\",\"FULL\",\"FULL\",\"FILT\",\"FILT\",\"FILT\",\"PERfect\",\"PERfect\",\"PERfect\",\"PIME\",\"PIME\",\"PIME\"],\"dist\":[\"Jensen–Shannon divergence\",\"unweighted UniFrac\",\"weighted UniFrac\",\"Jensen–Shannon divergence\",\"unweighted UniFrac\",\"weighted UniFrac\",\"Jensen–Shannon divergence\",\"unweighted UniFrac\",\"weighted UniFrac\",\"Jensen–Shannon divergence\",\"unweighted UniFrac\",\"weighted UniFrac\"],\"pval\":[0.1089,0.01,0.006,0.0889,0.006,0.005,0.021,0.004,0.003,0.4356,0.2398,0.009],\"test\":[\"ADONIS\",\"ANOSIM\",\"ANOSIM\",\"ADONIS\",\"ANOSIM\",\"ANOSIM\",\"ANOSIM\",\"ANOSIM\",\"ANOSIM\",\"ADONIS\",\"ADONIS\",\"ANOSIM\"]},\"columns\":[{\"accessor\":\"dataset\",\"name\":\"Dataset\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"FULL\",\"FULL\",\"FULL\",\"FILT\",\"FILT\",\"FILT\",\"PERfect\",\"PERfect\",\"PERfect\",\"PIME\",\"PIME\",\"PIME\"],\"header\":\"Dataset\",\"minWidth\":50,\"align\":\"left\",\"headerVAlign\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"dist\",\"name\":\"distance\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"Jensen–Shannon divergence\",\"unweighted UniFrac\",\"weighted UniFrac\",\"Jensen–Shannon divergence\",\"unweighted UniFrac\",\"weighted UniFrac\",\"Jensen–Shannon divergence\",\"unweighted UniFrac\",\"weighted UniFrac\",\"Jensen–Shannon divergence\",\"unweighted UniFrac\",\"weighted UniFrac\"],\"header\":\"distance\",\"minWidth\":100,\"align\":\"left\",\"headerVAlign\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"pval\",\"name\":\"p-value\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":false,\"filterable\":true,\"cell\":[\"0.1089\",\"0.0100\",\"0.0060\",\"0.0889\",\"0.0060\",\"0.0050\",\"0.0210\",\"0.0040\",\"0.0030\",\"0.4356\",\"0.2398\",\"0.0090\"],\"header\":\"p-value\",\"minWidth\":100,\"align\":\"center\",\"headerVAlign\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"style\":[{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"}]},{\"accessor\":\"test\",\"name\":\"test\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"ADONIS\",\"ANOSIM\",\"ANOSIM\",\"ADONIS\",\"ANOSIM\",\"ANOSIM\",\"ANOSIM\",\"ANOSIM\",\"ANOSIM\",\"ADONIS\",\"ADONIS\",\"ANOSIM\"],\"header\":\"test\",\"minWidth\":100,\"align\":\"center\",\"headerVAlign\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"defaultPageSize\":12,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,12],\"paginationType\":\"numbers\",\"showPagination\":false,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"125489211532ae68fedb7a51e9633aab\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nNow we to create sample data frames for each data set.\n\n\nShow code\nfor (i in ssu_samp_ps) {\n     tmp_get <- get(purrr::map_chr(i, ~ paste0(., \"_prop\")))\n     tmp_samp <- data.frame(sample_data(tmp_get))\n     tmp_name <- purrr::map_chr(i, ~ paste0(., \"_sampledf\"))\n     assign(tmp_name, tmp_samp)\n     rm(list = ls(pattern = \"tmp_\"))\n}\nobjects(pattern=\"_sampledf\")\n\nSignificance Tests\nDepending on the test, we need different data structures. For adonis we use the sample metadata and for anosim we will start with a phyloseq object. So for each data set we create two variables: adonis_sampledf and anosim_data\nDetailed results of Beta Dispersion & Permutation tests\n\n\nFULL\n\n\n\n\n\n\nIs the p-value of the jsd distance metric less than 0.05? FALSE.\nThen we use ADONIS.\n\nssu18_ps_work_adonis_jsd <-  adonis(ssu18_ps_work_beta_dist_jsd ~ TEMP,\n                                 data = adonis_sampledf, permutations = 1000)\nssu18_ps_work_adonis2_jsd <- adonis2(ssu18_ps_work_beta_dist_jsd ~ TEMP,\n                                  data = adonis_sampledf, permutations = 1000)\n\nIs the p-value of the unifrac distance metric less than 0.05? TRUE.\nThen we use ANOSIM.\n\nssu18_ps_work_groups <- get_variable(anosim_data, \"TEMP\")\nssu18_ps_work_anosim_unifrac <-\n  anosim(phyloseq::distance(ssu18_ps_work_prop, \"unifrac\"),\n         grouping = ssu18_ps_work_groups)\n\nIs the p-value of the wunifrac distance metric less than 0.05? TRUE.\nThen we use ANOSIM.\n\nssu18_ps_work_groups <- get_variable(anosim_data, \"TEMP\")\nssu18_ps_work_anosim_wunifrac <-\n  anosim(phyloseq::distance(ssu18_ps_work_prop, \"wunifrac\"),\n         grouping = ssu18_ps_work_groups)\n\nDetailed results of Significance tests for FULL data set\n\n\n ***PERMANOVA for Jensen-Shannon Divergence, `jsd`*** \nPermutation test for adonis under reduced model\nTerms added sequentially (first to last)\nPermutation: free\nNumber of permutations: 1000\n\nadonis2(formula = ssu18_ps_work_beta_dist_jsd ~ TEMP, data = adonis_sampledf, permutations = 1000)\n         Df SumOfSqs      R2      F   Pr(>F)   \nTEMP      2  0.21809 0.23826 1.8767 0.003996 **\nResidual 12  0.69727 0.76174                   \nTotal    14  0.91536 1.00000                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n ***ANOSIM for Unweighted UniFrac distance, `unifrac`*** \n\nCall:\nanosim(x = phyloseq::distance(ssu18_ps_work_prop, \"unifrac\"),      grouping = ssu18_ps_work_groups) \nDissimilarity: \n\nANOSIM statistic R: 0.2356 \n      Significance: 0.003 \n\nPermutation: free\nNumber of permutations: 999\n\nUpper quantiles of permutations (null model):\n   90%    95%  97.5%    99% \n0.0873 0.1130 0.1396 0.1725 \n\nDissimilarity ranks between and within classes:\n        0%   25%  50%   75% 100%  N\nBetween  1 32.50 58.0 81.00  103 75\n0        2 10.25 17.5 33.25   56 10\n3        4 14.75 26.5 41.00   65 10\n8       39 69.75 85.5 94.25  105 10\n\n ***ANOSIM for Weighted-UniFrac distance, `wunifrac`*** \n\nCall:\nanosim(x = phyloseq::distance(ssu18_ps_work_prop, \"wunifrac\"),      grouping = ssu18_ps_work_groups) \nDissimilarity: \n\nANOSIM statistic R: 0.3218 \n      Significance: 0.001 \n\nPermutation: free\nNumber of permutations: 999\n\nUpper quantiles of permutations (null model):\n  90%   95% 97.5%   99% \n0.090 0.120 0.149 0.176 \n\nDissimilarity ranks between and within classes:\n        0%   25%  50%    75% 100%  N\nBetween  2 36.50 59.0  81.50  102 75\n0        3  9.75 20.5  35.00   50 10\n3        1 14.50 19.0  27.75   48 10\n8       17 66.75 80.5 102.00  105 10\n\nArbitrary\n\n\n\n\n\n\nIs the p-value of the jsd distance metric less than 0.05? FALSE.\nThen we use ADONIS.\n\nssu18_ps_filt_adonis_jsd <-  adonis(ssu18_ps_filt_beta_dist_jsd ~ TEMP,\n                                 data = adonis_sampledf, permutations = 1000)\nssu18_ps_filt_adonis2_jsd <- adonis2(ssu18_ps_filt_beta_dist_jsd ~ TEMP,\n                                  data = adonis_sampledf, permutations = 1000)\n\nIs the p-value of the unifrac distance metric less than 0.05? TRUE.\nThen we use ANOSIM.\n\nssu18_ps_filt_groups <- get_variable(anosim_data, \"TEMP\")\nssu18_ps_filt_anosim_unifrac <-\n  anosim(phyloseq::distance(ssu18_ps_filt_prop, \"unifrac\"),\n         grouping = ssu18_ps_filt_groups)\n\nIs the p-value of the wunifrac distance metric less than 0.05? TRUE.\nThen we use ANOSIM.\n\nssu18_ps_filt_groups <- get_variable(anosim_data, \"TEMP\")\nssu18_ps_filt_anosim_wunifrac <-\n  anosim(phyloseq::distance(ssu18_ps_filt_prop, \"wunifrac\"),\n         grouping = ssu18_ps_filt_groups)\n\nDetailed results of Significance tests for Arbitrary data set\n\n\n ***PERMANOVA for Jensen-Shannon Divergence, `jsd`*** \nPermutation test for adonis under reduced model\nTerms added sequentially (first to last)\nPermutation: free\nNumber of permutations: 1000\n\nadonis2(formula = ssu18_ps_filt_beta_dist_jsd ~ TEMP, data = adonis_sampledf, permutations = 1000)\n         Df SumOfSqs      R2      F  Pr(>F)   \nTEMP      2  0.15050 0.29049 2.4566 0.00999 **\nResidual 12  0.36758 0.70951                  \nTotal    14  0.51808 1.00000                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n ***ANOSIM for Unweighted UniFrac distance, `unifrac`*** \n\nCall:\nanosim(x = phyloseq::distance(ssu18_ps_filt_prop, \"unifrac\"),      grouping = ssu18_ps_filt_groups) \nDissimilarity: \n\nANOSIM statistic R: 0.2427 \n      Significance: 0.009 \n\nPermutation: free\nNumber of permutations: 999\n\nUpper quantiles of permutations (null model):\n  90%   95% 97.5%   99% \n0.109 0.136 0.169 0.225 \n\nDissimilarity ranks between and within classes:\n        0%   25%  50%   75% 100%  N\nBetween  2 35.00 58.0 81.50  102 75\n0        1  7.75 17.5 34.75   59 10\n3       13 23.00 28.5 34.50   57 10\n8       11 66.50 81.5 99.50  105 10\n\n ***ANOSIM for Weighted-UniFrac distance, `wunifrac`*** \n\nCall:\nanosim(x = phyloseq::distance(ssu18_ps_filt_prop, \"wunifrac\"),      grouping = ssu18_ps_filt_groups) \nDissimilarity: \n\nANOSIM statistic R: 0.3618 \n      Significance: 0.001 \n\nPermutation: free\nNumber of permutations: 999\n\nUpper quantiles of permutations (null model):\n  90%   95% 97.5%   99% \n0.103 0.140 0.173 0.216 \n\nDissimilarity ranks between and within classes:\n        0%   25% 50%   75% 100%  N\nBetween  3 37.50  61 82.50  104 75\n0        1  7.25  14 27.25   36 10\n3        2 13.00  27 37.75   43 10\n8       23 59.25  76 99.00  105 10\n\nPERfect\n\n\n\n\n\n\nIs the p-value of the jsd distance metric less than 0.05? TRUE.\nThen we use ANOSIM.\n\nssu18_ps_perfect_groups <- get_variable(anosim_data, \"TEMP\")\nssu18_ps_perfect_anosim_jsd <-\n  anosim(phyloseq::distance(ssu18_ps_perfect_prop, \"jsd\"),\n         grouping = ssu18_ps_perfect_groups)\n\nIs the p-value of the unifrac distance metric less than 0.05? TRUE.\nThen we use ANOSIM.\n\nssu18_ps_perfect_groups <- get_variable(anosim_data, \"TEMP\")\nssu18_ps_perfect_anosim_unifrac <-\n  anosim(phyloseq::distance(ssu18_ps_perfect_prop, \"unifrac\"),\n         grouping = ssu18_ps_perfect_groups)\n\nIs the p-value of the wunifrac distance metric less than 0.05? TRUE.\nThen we use ANOSIM.\n\nssu18_ps_perfect_groups <- get_variable(anosim_data, \"TEMP\")\nssu18_ps_perfect_anosim_wunifrac <-\n  anosim(phyloseq::distance(ssu18_ps_perfect_prop, \"wunifrac\"),\n         grouping = ssu18_ps_perfect_groups)\n\nDetailed results of Significance tests for PIME data set\n\n\n ***ANOSIM for Jensen-Shannon Divergence, `jsd`*** \n\nCall:\nanosim(x = phyloseq::distance(ssu18_ps_perfect_prop, \"jsd\"),      grouping = ssu18_ps_perfect_groups) \nDissimilarity: \n\nANOSIM statistic R: 0.2996 \n      Significance: 0.001 \n\nPermutation: free\nNumber of permutations: 999\n\nUpper quantiles of permutations (null model):\n   90%    95%  97.5%    99% \n0.0999 0.1450 0.1770 0.2081 \n\nDissimilarity ranks between and within classes:\n        0%  25%  50%   75% 100%  N\nBetween  2 33.5 61.0 83.50  104 75\n0        5 15.5 19.5 44.75   59 10\n3        1  9.5 23.0 29.75   57 10\n8       39 53.5 75.0 95.50  105 10\n\n ***ANOSIM for Unweighted UniFrac distance, `unifrac`*** \n\nCall:\nanosim(x = phyloseq::distance(ssu18_ps_perfect_prop, \"unifrac\"),      grouping = ssu18_ps_perfect_groups) \nDissimilarity: \n\nANOSIM statistic R: 0.2053 \n      Significance: 0.007 \n\nPermutation: free\nNumber of permutations: 999\n\nUpper quantiles of permutations (null model):\n   90%    95%  97.5%    99% \n0.0908 0.1191 0.1441 0.1814 \n\nDissimilarity ranks between and within classes:\n        0%   25% 50%    75% 100%  N\nBetween  5 31.00  59  81.50  102 75\n0        1  4.75  14  36.25   56 10\n3        4 21.75  34  43.50   53 10\n8       52 70.50  80 100.00  105 10\n\n ***ANOSIM for Weighted-UniFrac distance, `wunifrac`*** \n\nCall:\nanosim(x = phyloseq::distance(ssu18_ps_perfect_prop, \"wunifrac\"),      grouping = ssu18_ps_perfect_groups) \nDissimilarity: \n\nANOSIM statistic R: 0.3378 \n      Significance: 0.001 \n\nPermutation: free\nNumber of permutations: 999\n\nUpper quantiles of permutations (null model):\n   90%    95%  97.5%    99% \n0.0942 0.1213 0.1538 0.1831 \n\nDissimilarity ranks between and within classes:\n        0%   25%  50%   75% 100%  N\nBetween  2 36.00 61.0 80.50  105 75\n0        1 20.00 26.5 35.50   40 10\n3        3  6.25 15.5 20.75   42 10\n8       14 61.00 92.5 99.25  104 10\n\nPIME\n\n\n\n\n\n\nIs the p-value of the jsd distance metric less than 0.05? FALSE.\nThen we use ADONIS.\n\nssu18_ps_pime_adonis_jsd <-  adonis(ssu18_ps_pime_beta_dist_jsd ~ TEMP,\n                                 data = adonis_sampledf, permutations = 1000)\nssu18_ps_pime_adonis2_jsd <- adonis2(ssu18_ps_pime_beta_dist_jsd ~ TEMP,\n                                  data = adonis_sampledf, permutations = 1000)\n\nIs the p-value of the unifrac distance metric less than 0.05? FALSE.\nThen we use ADONIS.\n\nssu18_ps_pime_adonis_unifrac <-  adonis(ssu18_ps_pime_beta_dist_unifrac ~ TEMP,\n                                     data = adonis_sampledf, permutations = 1000)\nssu18_ps_pime_adonis2_unifrac <- adonis2(ssu18_ps_pime_beta_dist_unifrac ~ TEMP,\n                                      data = adonis_sampledf, permutations = 1000)\n\nIs the p-value of the wunifrac distance metric less than 0.05? TRUE.\nThen we use ANOSIM.\n\nssu18_ps_pime_groups <- get_variable(anosim_data, \"TEMP\")\nssu18_ps_pime_anosim_wunifrac <-\n  anosim(phyloseq::distance(ssu18_ps_pime_prop, \"wunifrac\"),\n         grouping = ssu18_ps_pime_groups)\n\nDetailed results of Significance tests for PIME data set\n\n\n ***PERMANOVA for Jensen-Shannon Divergence, `jsd`*** \nPermutation test for adonis under reduced model\nTerms added sequentially (first to last)\nPermutation: free\nNumber of permutations: 1000\n\nadonis2(formula = ssu18_ps_pime_beta_dist_jsd ~ TEMP, data = adonis_sampledf, permutations = 1000)\n         Df SumOfSqs      R2      F   Pr(>F)    \nTEMP      2  0.23994 0.59595 8.8496 0.000999 ***\nResidual 12  0.16268 0.40405                    \nTotal    14  0.40262 1.00000                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n ***PERMANOVA for Unweighted UniFrac distance, `unifrac`*** \nPermutation test for adonis under reduced model\nTerms added sequentially (first to last)\nPermutation: free\nNumber of permutations: 1000\n\nadonis2(formula = ssu18_ps_pime_beta_dist_unifrac ~ TEMP, data = adonis_sampledf, permutations = 1000)\n         Df SumOfSqs      R2      F   Pr(>F)    \nTEMP      2  0.78789 0.64853 11.071 0.000999 ***\nResidual 12  0.42699 0.35147                    \nTotal    14  1.21488 1.00000                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n ***ANOSIM for Weighted-UniFrac distance, `wunifrac`*** \n\nCall:\nanosim(x = phyloseq::distance(ssu18_ps_pime_prop, \"wunifrac\"),      grouping = ssu18_ps_pime_groups) \nDissimilarity: \n\nANOSIM statistic R: 0.5316 \n      Significance: 0.001 \n\nPermutation: free\nNumber of permutations: 999\n\nUpper quantiles of permutations (null model):\n  90%   95% 97.5%   99% \n0.114 0.157 0.207 0.262 \n\nDissimilarity ranks between and within classes:\n        0%   25% 50%  75% 100%  N\nBetween  9 41.00  62 85.5  105 75\n0        1  8.75  17 28.5   37 10\n3        2  5.50  17 26.5   39 10\n8        4 50.50  73 81.0   97 10\n\n\n\nSummaries\nHere is a quick summary of significance tests for the data sets against three distance matrices.\n\n\n\n(16S rRNA) Table 2 | Summary of significant tests for the unfiltered & filtered data sets. P-values in red indicate significant differences (p-value < 0.05).\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"distance metric\":[\"Jensen-Shannon Divergence\",\"unweighted UniFrac\",\"weighted UniFrac\"],\"FULL\":[0.006,0.003,0.001],\"FILT\":[0.01,0.009,0.001],\"PERfect\":[0.001,0.007,0.001],\"PIME\":[0.001,0.001,0.001]},\"columns\":[{\"accessor\":\"distance metric\",\"name\":\"Distance metric\",\"type\":\"character\",\"sortable\":false,\"resizable\":true,\"filterable\":false,\"cell\":[\"Jensen-Shannon Divergence\",\"unweighted UniFrac\",\"weighted UniFrac\"],\"header\":\"Distance metric\",\"minWidth\":200,\"align\":\"left\",\"headerVAlign\":\"center\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"FULL\",\"name\":\"FULL\",\"type\":\"numeric\",\"sortable\":false,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.006\",\"0.003\",\"0.001\"],\"header\":\"FULL\",\"minWidth\":100,\"align\":\"center\",\"headerVAlign\":\"center\",\"style\":[{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"}],\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"FILT\",\"name\":\"FILT\",\"type\":\"numeric\",\"sortable\":false,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.010\",\"0.009\",\"0.001\"],\"header\":\"FILT\",\"minWidth\":100,\"align\":\"center\",\"headerVAlign\":\"center\",\"style\":[{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"}],\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"PERfect\",\"name\":\"PERfect\",\"type\":\"numeric\",\"sortable\":false,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.001\",\"0.007\",\"0.001\"],\"header\":\"PERfect\",\"minWidth\":100,\"align\":\"center\",\"headerVAlign\":\"center\",\"style\":[{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"}],\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"PIME\",\"name\":\"PIME\",\"type\":\"numeric\",\"sortable\":false,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.001\",\"0.001\",\"0.001\"],\"header\":\"PIME\",\"minWidth\":100,\"align\":\"center\",\"headerVAlign\":\"center\",\"style\":[{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"}],\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"columnGroups\":[{\"name\":\"p-values\",\"headerStyle\":{\"fontSize\":\"1.3em\"},\"columns\":[\"FULL\",\"FILT\",\"PERfect\",\"PIME\"]}],\"defaultPageSize\":12,\"paginationType\":\"numbers\",\"showPagination\":false,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"theme\":{\"style\":{\"fontSize\":\"0.9em\"}},\"dataKey\":\"bd26b561fb9059d6b0e32a959b06d95c\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\n\n\n\nITS\n\n\n\nSignificance Tests\nIn order to test for significance between sample groups, we must perform the following steps:\nTransform sample counts to relative abundance.\nCreate distance matrices based on some metrics, for example gower, bray, and jsd. For this we use the function phyloseq::distance.\nNext, calculate beta dispersion using the betadisper function from the vegan package (Oksanen et al. 2012).\nThen, use the function permutest to run a Permutation test for homogeneity of multivariate dispersions.\nIf the beta dispersion tests are not significant we will run a PERMANOVA using adonis (since PERMANOVA aitsmes equal dispersion), otherwise we will use Analysis of Similarity (ANOSIM), both available in the vegan package (Oksanen et al. 2012).\nSteps 2–4 are combined in a for loop that tests all three distance metrics.\nBefore we begin, we need to first transform sample counts to relative abundance and generate some new trees.\n\n\nShow code\nits_samp_ps <- c(\"its18_ps_work\", \"its18_ps_filt\", \n             \"its18_ps_perfect\", \"its18_ps_pime\")\nfor (i in its_samp_ps) {\n     tmp_name <- purrr::map_chr(i, ~ paste0(., \"_prop\"))\n     tmp_get <- get(i)\n     tmp_ps <- transform_sample_counts(tmp_get, function(otu) \n                                          1e5 * otu/sum(otu))\n     tmp_ps@phy_tree <- NULL\n     tmp_ps <- prune_samples(sample_sums(tmp_ps) > 0, tmp_ps)\n     tmp_ps <- merge_phyloseq(tmp_ps, sample_data)\n     print(tmp_name)\n     assign(tmp_name, tmp_ps)\n     rm(list = ls(pattern = \"tmp_\"))\n}\n\nBeta Dispersion\nHere we create distance matrices for each metric, calculate the beta dispersion, and run a permutation test for homogeneity of multivariate dispersions.\n\n\nShow code\nits_dist <- c(\"jsd\", \"bray\", \"gower\")\nfor (i in its_samp_ps) {\n    for (d in its_dist){\n       tmp_get <- get(purrr::map_chr(i, ~ paste0(i, \"_prop\")))\n       tmp_samp <- data.frame(sample_data(tmp_get))\n       tmp_df <- phyloseq::distance(tmp_get, method = d)\n       tmp_df_name <- purrr::map_chr(d, ~ paste0(i, \"_beta_dist_\", .))\n       assign(tmp_df_name, tmp_df)\n       tmp_df2 <- betadisper(tmp_df, tmp_samp$TEMP, bias.adjust = TRUE)\n       tmp_df_name2 <- purrr::map_chr(d, ~ paste0(i, \"_beta_dispersion_\", .))\n       assign(tmp_df_name2, tmp_df2)\n       tmp_df3 <- permutest(tmp_df2, pairwise = TRUE,\n                            permutations = 1000, binary = FALSE)\n       tmp_df_name3 <- purrr::map_chr(d, ~ paste0(i, \"_permutest_\", .))\n       assign(tmp_df_name3, tmp_df3)\n       rm(list = ls(pattern = \"tmp_\"))\n    }\n}\nobjects()\n\nDetailed results of Beta Dispersion & Permutation tests\n\n\n\n\n\nFULL\n\n\n#################################################### \nBETA DISPERSION significance test jsd distance \n####################################################\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 1000\n\nResponse: Distances\n          Df    Sum Sq   Mean Sq     F N.Perm Pr(>F)\nGroups     2 0.0016626 0.0008313 0.272   1000 0.7522\nResiduals 10 0.0305600 0.0030560                    \n\nPairwise comparisons:\n(Observed p-value below diagonal, permuted p-value above\ndiagonal)\n        0       3      8\n0         0.65734 0.7612\n3 0.65549         0.4925\n8 0.75785 0.49503       \n\n#################################################### \nBETA DISPERSION significance test bray distance \n####################################################\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 1000\n\nResponse: Distances\n          Df   Sum Sq   Mean Sq      F N.Perm Pr(>F)\nGroups     2 0.002828 0.0014140 0.3342   1000 0.7093\nResiduals 10 0.042306 0.0042306                     \n\nPairwise comparisons:\n(Observed p-value below diagonal, permuted p-value above\ndiagonal)\n        0       3      8\n0         0.51548 0.8501\n3 0.53577         0.4525\n8 0.85014 0.48472       \n\n#################################################### \nBETA DISPERSION significance test gower distance \n####################################################\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 1000\n\nResponse: Distances\n          Df    Sum Sq   Mean Sq      F N.Perm Pr(>F)\nGroups     2 0.0029899 0.0014950 1.3038   1000 0.3247\nResiduals 10 0.0114662 0.0011466                     \n\nPairwise comparisons:\n(Observed p-value below diagonal, permuted p-value above\ndiagonal)\n        0       3      8\n0         0.78921 0.2058\n3 0.75923         0.3506\n8 0.22060 0.33265       \n\nArbitrary\n\n\n#################################################### \nBETA DISPERSION significance test jsd distance \n####################################################\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 1000\n\nResponse: Distances\n          Df   Sum Sq   Mean Sq      F N.Perm Pr(>F)\nGroups     2 0.001023 0.0005116 0.0745   1000 0.9101\nResiduals 10 0.068640 0.0068640                     \n\nPairwise comparisons:\n(Observed p-value below diagonal, permuted p-value above\ndiagonal)\n        0       3      8\n0         0.68831 0.9301\n3 0.67472         0.8062\n8 0.92769 0.81555       \n\n#################################################### \nBETA DISPERSION significance test bray distance \n####################################################\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 1000\n\nResponse: Distances\n          Df   Sum Sq  Mean Sq      F N.Perm Pr(>F)\nGroups     2 0.002408 0.001204 0.1338   1000 0.8801\nResiduals 10 0.090000 0.009000                     \n\nPairwise comparisons:\n(Observed p-value below diagonal, permuted p-value above\ndiagonal)\n        0       3      8\n0         0.58042 0.9061\n3 0.58847         0.7582\n8 0.90501 0.75350       \n\n#################################################### \nBETA DISPERSION significance test gower distance \n####################################################\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 1000\n\nResponse: Distances\n          Df    Sum Sq   Mean Sq      F N.Perm Pr(>F)\nGroups     2 0.0058376 0.0029188 2.2494   1000 0.1419\nResiduals 10 0.0129758 0.0012976                     \n\nPairwise comparisons:\n(Observed p-value below diagonal, permuted p-value above\ndiagonal)\n         0        3      8\n0          0.061938 0.4555\n3 0.074044          0.2847\n8 0.464903 0.264060       \n\nPERfect\n\n\n#################################################### \nBETA DISPERSION significance test jsd distance \n####################################################\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 1000\n\nResponse: Distances\n          Df   Sum Sq   Mean Sq      F N.Perm Pr(>F)\nGroups     2 0.001059 0.0005293 0.1168   1000 0.8831\nResiduals 10 0.045317 0.0045317                     \n\nPairwise comparisons:\n(Observed p-value below diagonal, permuted p-value above\ndiagonal)\n        0       3      8\n0         0.69231 0.9131\n3 0.71118         0.6683\n8 0.92002 0.67220       \n\n#################################################### \nBETA DISPERSION significance test bray distance \n####################################################\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 1000\n\nResponse: Distances\n          Df   Sum Sq   Mean Sq      F N.Perm Pr(>F)\nGroups     2 0.002522 0.0012611 0.2056   1000 0.8062\nResiduals 10 0.061340 0.0061340                     \n\nPairwise comparisons:\n(Observed p-value below diagonal, permuted p-value above\ndiagonal)\n        0       3      8\n0         0.57443 0.9950\n3 0.58316         0.6224\n8 0.99819 0.62424       \n\n#################################################### \nBETA DISPERSION significance test gower distance \n####################################################\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 1000\n\nResponse: Distances\n          Df    Sum Sq   Mean Sq      F N.Perm Pr(>F)\nGroups     2 0.0023433 0.0011716 2.0201   1000 0.2138\nResiduals 10 0.0058000 0.0005800                     \n\nPairwise comparisons:\n(Observed p-value below diagonal, permuted p-value above\ndiagonal)\n         0        3      8\n0          0.868132 0.1029\n3 0.869601          0.2677\n8 0.091826 0.229457       \n\nPIME\n\n\n#################################################### \nBETA DISPERSION significance test jsd distance \n####################################################\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 1000\n\nResponse: Distances\n          Df   Sum Sq   Mean Sq      F N.Perm Pr(>F)\nGroups     2 0.007678 0.0038389 0.3436   1000 0.7163\nResiduals 10 0.111712 0.0111712                     \n\nPairwise comparisons:\n(Observed p-value below diagonal, permuted p-value above\ndiagonal)\n        0       3      8\n0         0.47253 0.4805\n3 0.49362         0.9760\n8 0.47799 0.97911       \n\n#################################################### \nBETA DISPERSION significance test bray distance \n####################################################\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 1000\n\nResponse: Distances\n          Df   Sum Sq   Mean Sq      F N.Perm Pr(>F)\nGroups     2 0.008276 0.0041378 0.2627   1000 0.7602\nResiduals 10 0.157522 0.0157522                     \n\nPairwise comparisons:\n(Observed p-value below diagonal, permuted p-value above\ndiagonal)\n        0       3      8\n0         0.46753 0.5874\n3 0.51164         0.8821\n8 0.58541 0.88566       \n\n#################################################### \nBETA DISPERSION significance test gower distance \n####################################################\n\nPermutation test for homogeneity of multivariate dispersions\nPermutation: free\nNumber of permutations: 1000\n\nResponse: Distances\n          Df    Sum Sq   Mean Sq      F N.Perm   Pr(>F)   \nGroups     2 0.0165873 0.0082936 15.047   1000 0.001998 **\nResiduals 10 0.0055118 0.0005512                          \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nPairwise comparisons:\n(Observed p-value below diagonal, permuted p-value above\ndiagonal)\n           0          3     8\n0            0.05594406 0.002\n3 0.04179289            0.040\n8 0.00072543 0.03074504      \n\n\n\nRemember, if the beta dispersion p-value is greater than 0.05 we use PERMANOVA, otherwise we use ANOSIM.\n\n\n\n\n\n\n(ITS) Table 1 | Summary of Beta Dispersion Tests for unfiltered & filtered data sets against various distance metrics. The test column shows the method chosen (based on the test results) to assess differences in beta diversity. If p-values are significant (red, p-value < 0.05) we used ANOSIM, otherwise we used PERMANOVA (blue, p-value > 0.05).\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"dataset\":[\"FULL\",\"FULL\",\"FULL\",\"FILT\",\"FILT\",\"FILT\",\"PERfect\",\"PERfect\",\"PERfect\",\"PIME\",\"PIME\",\"PIME\"],\"dist\":[\"Jensen–Shannon divergence\",\"Bray-Curtis dissimilarity\",\"Gower distance\",\"Jensen–Shannon divergence\",\"Bray-Curtis dissimilarity\",\"Gower distance\",\"Jensen–Shannon divergence\",\"Bray-Curtis dissimilarity\",\"Gower distance\",\"Jensen–Shannon divergence\",\"Bray-Curtis dissimilarity\",\"Gower distance\"],\"pval\":[0.7522,0.7093,0.3247,0.9101,0.8801,0.1419,0.8831,0.8062,0.2138,0.7163,0.7602,0.002],\"test\":[\"ADONIS\",\"ADONIS\",\"ADONIS\",\"ADONIS\",\"ADONIS\",\"ADONIS\",\"ADONIS\",\"ADONIS\",\"ADONIS\",\"ADONIS\",\"ADONIS\",\"ANOSIM\"]},\"columns\":[{\"accessor\":\"dataset\",\"name\":\"Dataset\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"FULL\",\"FULL\",\"FULL\",\"FILT\",\"FILT\",\"FILT\",\"PERfect\",\"PERfect\",\"PERfect\",\"PIME\",\"PIME\",\"PIME\"],\"header\":\"Dataset\",\"minWidth\":50,\"align\":\"left\",\"headerVAlign\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"dist\",\"name\":\"distance\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"Jensen–Shannon divergence\",\"Bray-Curtis dissimilarity\",\"Gower distance\",\"Jensen–Shannon divergence\",\"Bray-Curtis dissimilarity\",\"Gower distance\",\"Jensen–Shannon divergence\",\"Bray-Curtis dissimilarity\",\"Gower distance\",\"Jensen–Shannon divergence\",\"Bray-Curtis dissimilarity\",\"Gower distance\"],\"header\":\"distance\",\"minWidth\":100,\"align\":\"left\",\"headerVAlign\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"pval\",\"name\":\"p-value\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":false,\"filterable\":true,\"cell\":[\"0.7522\",\"0.7093\",\"0.3247\",\"0.9101\",\"0.8801\",\"0.1419\",\"0.8831\",\"0.8062\",\"0.2138\",\"0.7163\",\"0.7602\",\"0.0020\"],\"header\":\"p-value\",\"minWidth\":100,\"align\":\"center\",\"headerVAlign\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"style\":[{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"}]},{\"accessor\":\"test\",\"name\":\"test\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"ADONIS\",\"ADONIS\",\"ADONIS\",\"ADONIS\",\"ADONIS\",\"ADONIS\",\"ADONIS\",\"ADONIS\",\"ADONIS\",\"ADONIS\",\"ADONIS\",\"ANOSIM\"],\"header\":\"test\",\"minWidth\":100,\"align\":\"center\",\"headerVAlign\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"defaultPageSize\":12,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,12],\"paginationType\":\"numbers\",\"showPagination\":false,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"0e627cd3ad28b39af93d6fd48b0e16b6\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nNow we to create sample data frames for each data set.\n\n\nShow code\nfor (i in its_samp_ps) {\n     tmp_get <- get(purrr::map_chr(i, ~ paste0(., \"_prop\")))\n     tmp_samp <- data.frame(sample_data(tmp_get))\n     tmp_name <- purrr::map_chr(i, ~ paste0(., \"_sampledf\"))\n     assign(tmp_name, tmp_samp)\n     rm(list = ls(pattern = \"tmp_\"))\n}\nobjects(pattern=\"_sampledf\")\n\nSignificance Tests\nDepending on the test, we need different data structures. For adonis we use the sample metadata and for anosim we will start with a phyloseq object. So for each data set we create two variables: adonis_sampledf and anosim_data\nDetailed results of Beta Dispersion & Permutation tests\n\n\nFULL\n\n\n\n\n\n\nIs the p-value of the jsd distance metric less than 0.05? FALSE.\nThen we use ADONIS.\n\nits18_ps_work_adonis_jsd <-  adonis(its18_ps_work_beta_dist_jsd ~ TEMP,\n                                 data = adonis_sampledf, permutations = 1000)\nits18_ps_work_adonis2_jsd <- adonis2(its18_ps_work_beta_dist_jsd ~ TEMP,\n                                  data = adonis_sampledf, permutations = 1000)\n\nIs the p-value of the bray distance metric less than 0.05? FALSE.\nThen we use ADONIS.\n\nits18_ps_work_adonis_bray <-  adonis(its18_ps_work_beta_dist_bray ~ TEMP,\n                                 data = adonis_sampledf, permutations = 1000)\nits18_ps_work_adonis2_bray <- adonis2(its18_ps_work_beta_dist_bray ~ TEMP,\n                                  data = adonis_sampledf, permutations = 1000)\n\nIs the p-value of the gower distance metric less than 0.05? FALSE.\nThen we use ADONIS.\n\nits18_ps_work_adonis_gower <-  adonis(its18_ps_work_beta_dist_gower ~ TEMP,\n                                 data = adonis_sampledf, permutations = 1000)\nits18_ps_work_adonis2_gower <- adonis2(its18_ps_work_beta_dist_gower ~ TEMP,\n                                  data = adonis_sampledf, permutations = 1000)\n\nDetailed results of Significance tests for FULL data set\n\n\n ***PERMANOVA for Jensen-Shannon Divergence, `jsd`*** \nPermutation test for adonis under reduced model\nTerms added sequentially (first to last)\nPermutation: free\nNumber of permutations: 1000\n\nadonis2(formula = its18_ps_work_beta_dist_jsd ~ TEMP, data = adonis_sampledf, permutations = 1000)\n         Df SumOfSqs     R2      F  Pr(>F)  \nTEMP      2  0.38087 0.2287 1.4826 0.03796 *\nResidual 10  1.28448 0.7713                 \nTotal    12  1.66534 1.0000                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n ***PERMANOVA for Bray-Curtis dissimilarity, `bray`*** \n       Df        SumOfSqs            R2               F        \n Min.   : 2   Min.   :0.9003   Min.   :0.2070   Min.   :1.305  \n 1st Qu.: 6   1st Qu.:2.1744   1st Qu.:0.5000   1st Qu.:1.305  \n Median :10   Median :3.4484   Median :0.7930   Median :1.305  \n Mean   : 8   Mean   :2.8992   Mean   :0.6667   Mean   :1.305  \n 3rd Qu.:11   3rd Qu.:3.8986   3rd Qu.:0.8965   3rd Qu.:1.305  \n Max.   :12   Max.   :4.3488   Max.   :1.0000   Max.   :1.305  \n                                                NA's   :2      \n     Pr(>F)       \n Min.   :0.05095  \n 1st Qu.:0.05095  \n Median :0.05095  \n Mean   :0.05095  \n 3rd Qu.:0.05095  \n Max.   :0.05095  \n NA's   :2        \n\n ***PERMANOVA for Gower distance, `gower`*** \n       Df        SumOfSqs             R2               F        \n Min.   : 2   Min.   :0.05219   Min.   :0.2016   Min.   :1.263  \n 1st Qu.: 6   1st Qu.:0.12941   1st Qu.:0.5000   1st Qu.:1.263  \n Median :10   Median :0.20664   Median :0.7984   Median :1.263  \n Mean   : 8   Mean   :0.17255   Mean   :0.6667   Mean   :1.263  \n 3rd Qu.:11   3rd Qu.:0.23273   3rd Qu.:0.8992   3rd Qu.:1.263  \n Max.   :12   Max.   :0.25882   Max.   :1.0000   Max.   :1.263  \n                                                 NA's   :2      \n     Pr(>F)       \n Min.   :0.00999  \n 1st Qu.:0.00999  \n Median :0.00999  \n Mean   :0.00999  \n 3rd Qu.:0.00999  \n Max.   :0.00999  \n NA's   :2        \n\nArbitrary\n\n\n\n\n\n\nIs the p-value of the jsd distance metric less than 0.05? FALSE.\nThen we use ADONIS.\n\nits18_ps_filt_adonis_jsd <-  adonis(its18_ps_filt_beta_dist_jsd ~ TEMP,\n                                 data = adonis_sampledf, permutations = 1000)\nits18_ps_filt_adonis2_jsd <- adonis2(its18_ps_filt_beta_dist_jsd ~ TEMP,\n                                  data = adonis_sampledf, permutations = 1000)\n\nIs the p-value of the bray distance metric less than 0.05? FALSE.\nThen we use ADONIS.\n\nits18_ps_filt_adonis_bray <-  adonis(its18_ps_filt_beta_dist_bray ~ TEMP,\n                                 data = adonis_sampledf, permutations = 1000)\nits18_ps_filt_adonis2_bray <- adonis2(its18_ps_filt_beta_dist_bray ~ TEMP,\n                                  data = adonis_sampledf, permutations = 1000)\n\nIs the p-value of the gower distance metric less than 0.05? FALSE.\nThen we use ADONIS.\n\nits18_ps_filt_adonis_gower <-  adonis(its18_ps_filt_beta_dist_gower ~ TEMP,\n                                 data = adonis_sampledf, permutations = 1000)\nits18_ps_filt_adonis2_gower <- adonis2(its18_ps_filt_beta_dist_gower ~ TEMP,\n                                  data = adonis_sampledf, permutations = 1000)\n\nDetailed results of Significance tests for Arbitrary data set\n\n\n ***PERMANOVA for Jensen-Shannon Divergence, `jsd`*** \nPermutation test for adonis under reduced model\nTerms added sequentially (first to last)\nPermutation: free\nNumber of permutations: 1000\n\nadonis2(formula = its18_ps_filt_beta_dist_jsd ~ TEMP, data = adonis_sampledf, permutations = 1000)\n         Df SumOfSqs      R2      F  Pr(>F)  \nTEMP      2  0.36598 0.25398 1.7022 0.02498 *\nResidual 10  1.07499 0.74602                 \nTotal    12  1.44097 1.00000                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n ***PERMANOVA for Bray-Curtis dissimilarity, `bray`*** \n       Df        SumOfSqs            R2               F        \n Min.   : 2   Min.   :0.8899   Min.   :0.2216   Min.   :1.423  \n 1st Qu.: 6   1st Qu.:2.0078   1st Qu.:0.5000   1st Qu.:1.423  \n Median :10   Median :3.1257   Median :0.7784   Median :1.423  \n Mean   : 8   Mean   :2.6770   Mean   :0.6667   Mean   :1.423  \n 3rd Qu.:11   3rd Qu.:3.5706   3rd Qu.:0.8892   3rd Qu.:1.423  \n Max.   :12   Max.   :4.0155   Max.   :1.0000   Max.   :1.423  \n                                                NA's   :2      \n     Pr(>F)       \n Min.   :0.03996  \n 1st Qu.:0.03996  \n Median :0.03996  \n Mean   :0.03996  \n 3rd Qu.:0.03996  \n Max.   :0.03996  \n NA's   :2        \n\n ***PERMANOVA for Gower distance, `gower`*** \n       Df        SumOfSqs            R2               F        \n Min.   : 2   Min.   :0.1076   Min.   :0.2416   Min.   :1.593  \n 1st Qu.: 6   1st Qu.:0.2225   1st Qu.:0.5000   1st Qu.:1.593  \n Median :10   Median :0.3375   Median :0.7584   Median :1.593  \n Mean   : 8   Mean   :0.2967   Mean   :0.6667   Mean   :1.593  \n 3rd Qu.:11   3rd Qu.:0.3913   3rd Qu.:0.8792   3rd Qu.:1.593  \n Max.   :12   Max.   :0.4451   Max.   :1.0000   Max.   :1.593  \n                                                NA's   :2      \n     Pr(>F)        \n Min.   :0.006993  \n 1st Qu.:0.006993  \n Median :0.006993  \n Mean   :0.006993  \n 3rd Qu.:0.006993  \n Max.   :0.006993  \n NA's   :2         \n\nPERfect\n\n\n\n\n\n\nIs the p-value of the jsd distance metric less than 0.05? FALSE.\nThen we use ADONIS.\n\nits18_ps_perfect_adonis_jsd <-  adonis(its18_ps_perfect_beta_dist_jsd ~ TEMP,\n                                 data = adonis_sampledf, permutations = 1000)\nits18_ps_perfect_adonis2_jsd <- adonis2(its18_ps_perfect_beta_dist_jsd ~ TEMP,\n                                  data = adonis_sampledf, permutations = 1000)\n\nIs the p-value of the bray distance metric less than 0.05? FALSE.\nThen we use ADONIS.\n\nits18_ps_perfect_adonis_bray <-  adonis(its18_ps_perfect_beta_dist_bray ~ TEMP,\n                                 data = adonis_sampledf, permutations = 1000)\nits18_ps_perfect_adonis2_bray <- adonis2(its18_ps_perfect_beta_dist_bray ~ TEMP,\n                                  data = adonis_sampledf, permutations = 1000)\n\nIs the p-value of the gower distance metric less than 0.05? FALSE.\nThen we use ADONIS.\n\nits18_ps_perfect_adonis_gower <-  adonis(its18_ps_perfect_beta_dist_gower ~ TEMP,\n                                 data = adonis_sampledf, permutations = 1000)\nits18_ps_perfect_adonis2_gower <- adonis2(its18_ps_perfect_beta_dist_gower ~ TEMP,\n                                  data = adonis_sampledf, permutations = 1000)\n\nDetailed results of Significance tests for PIME data set\n\n\n ***PERMANOVA for Jensen-Shannon Divergence, `jsd`*** \nPermutation test for adonis under reduced model\nTerms added sequentially (first to last)\nPermutation: free\nNumber of permutations: 1000\n\nadonis2(formula = its18_ps_perfect_beta_dist_jsd ~ TEMP, data = adonis_sampledf, permutations = 1000)\n         Df SumOfSqs      R2      F  Pr(>F)  \nTEMP      2  0.38311 0.23194 1.5099 0.04296 *\nResidual 10  1.26864 0.76806                 \nTotal    12  1.65176 1.00000                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n ***PERMANOVA for Bray-Curtis dissimilarity, `bray`*** \n       Df        SumOfSqs            R2               F        \n Min.   : 2   Min.   :0.8938   Min.   :0.2056   Min.   :1.294  \n 1st Qu.: 6   1st Qu.:2.1734   1st Qu.:0.5000   1st Qu.:1.294  \n Median :10   Median :3.4530   Median :0.7944   Median :1.294  \n Mean   : 8   Mean   :2.8978   Mean   :0.6667   Mean   :1.294  \n 3rd Qu.:11   3rd Qu.:3.8999   3rd Qu.:0.8972   3rd Qu.:1.294  \n Max.   :12   Max.   :4.3468   Max.   :1.0000   Max.   :1.294  \n                                                NA's   :2      \n     Pr(>F)       \n Min.   :0.07293  \n 1st Qu.:0.07293  \n Median :0.07293  \n Mean   :0.07293  \n 3rd Qu.:0.07293  \n Max.   :0.07293  \n NA's   :2        \n\n ***PERMANOVA for Gower distance, `gower`*** \n       Df        SumOfSqs            R2               F        \n Min.   : 2   Min.   :0.0647   Min.   :0.2319   Min.   :1.509  \n 1st Qu.: 6   1st Qu.:0.1395   1st Qu.:0.5000   1st Qu.:1.509  \n Median :10   Median :0.2143   Median :0.7681   Median :1.509  \n Mean   : 8   Mean   :0.1860   Mean   :0.6667   Mean   :1.509  \n 3rd Qu.:11   3rd Qu.:0.2466   3rd Qu.:0.8841   3rd Qu.:1.509  \n Max.   :12   Max.   :0.2790   Max.   :1.0000   Max.   :1.509  \n                                                NA's   :2      \n     Pr(>F)        \n Min.   :0.001998  \n 1st Qu.:0.001998  \n Median :0.001998  \n Mean   :0.001998  \n 3rd Qu.:0.001998  \n Max.   :0.001998  \n NA's   :2         \n\nPIME\n\n\n\n\n\n\nIs the p-value of the jsd distance metric less than 0.05? FALSE.\nThen we use ADONIS.\n\nits18_ps_pime_adonis_jsd <-  adonis(its18_ps_pime_beta_dist_jsd ~ TEMP,\n                                 data = adonis_sampledf, permutations = 1000)\nits18_ps_pime_adonis2_jsd <- adonis2(its18_ps_pime_beta_dist_jsd ~ TEMP,\n                                  data = adonis_sampledf, permutations = 1000)\n\nIs the p-value of the bray distance metric less than 0.05? FALSE.\nThen we use ADONIS.\n\nits18_ps_pime_adonis_bray <-  adonis(its18_ps_pime_beta_dist_bray ~ TEMP,\n                                 data = adonis_sampledf, permutations = 1000)\nits18_ps_pime_adonis2_bray <- adonis2(its18_ps_pime_beta_dist_bray ~ TEMP,\n                                  data = adonis_sampledf, permutations = 1000)\n\nIs the p-value of the gower distance metric less than 0.05? TRUE.\nThen we use ANOSIM.\n\nits18_ps_pime_groups <- get_variable(anosim_data, \"TEMP\")\nits18_ps_pime_anosim_gower <-\n  anosim(phyloseq::distance(its18_ps_pime_prop, \"gower\"),\n         grouping = its18_ps_pime_groups)\n\nDetailed results of Significance tests for PIME data set\n\n\n ***PERMANOVA for Jensen-Shannon Divergence, `jsd`*** \nPermutation test for adonis under reduced model\nTerms added sequentially (first to last)\nPermutation: free\nNumber of permutations: 1000\n\nadonis2(formula = its18_ps_pime_beta_dist_jsd ~ TEMP, data = adonis_sampledf, permutations = 1000)\n         Df SumOfSqs     R2      F   Pr(>F)    \nTEMP      2  0.54824 0.4002 3.3361 0.000999 ***\nResidual 10  0.82167 0.5998                    \nTotal    12  1.36991 1.0000                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n ***PERMANOVA for Bray-Curtis dissimilarity, `bray`*** \nPermutation test for adonis under reduced model\nTerms added sequentially (first to last)\nPermutation: free\nNumber of permutations: 1000\n\nadonis2(formula = its18_ps_pime_beta_dist_bray ~ TEMP, data = adonis_sampledf, permutations = 1000)\n         Df SumOfSqs      R2     F   Pr(>F)    \nTEMP      2   1.1998 0.30872 2.233 0.000999 ***\nResidual 10   2.6865 0.69128                   \nTotal    12   3.8862 1.00000                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n ***ANOSIM for Gower distance, `gower`*** \n\nCall:\nanosim(x = phyloseq::distance(its18_ps_pime_prop, \"gower\"), grouping = its18_ps_pime_groups) \nDissimilarity: gower \n\nANOSIM statistic R: 0.6542 \n      Significance: 0.001 \n\nPermutation: free\nNumber of permutations: 999\n\nUpper quantiles of permutations (null model):\n  90%   95% 97.5%   99% \n0.151 0.221 0.265 0.346 \n\nDissimilarity ranks between and within classes:\n        0%   25%  50%   75% 100%  N\nBetween  4 31.50 48.5 64.25   78 56\n0       22 25.00 34.5 40.75   57 10\n3        8 12.75 15.5 16.75   19  6\n8        1  2.25  4.0  5.75    7  6\n\n\n\nSummaries\nHere is a quick summary of significance tests for the data sets against three distance matrices.\n\n\n\n(ITS) Table 2 | Summary of significant tests for the unfiltered & filtered data sets. P-values in red indicate significant differences (p-value < 0.05).\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"distance metric\":[\"Jensen-Shannon Divergence\",\"Bray-Curtis dissimilarity\",\"Gower distance\"],\"FULL\":[0.04,0.046,0.014],\"FILT\":[0.037,0.033,0.008],\"PERfect\":[0.0599,0.0819,0.002],\"PIME\":[0.001,0.001,0.001]},\"columns\":[{\"accessor\":\"distance metric\",\"name\":\"Distance metric\",\"type\":\"character\",\"sortable\":false,\"resizable\":true,\"filterable\":false,\"cell\":[\"Jensen-Shannon Divergence\",\"Bray-Curtis dissimilarity\",\"Gower distance\"],\"header\":\"Distance metric\",\"minWidth\":200,\"align\":\"left\",\"headerVAlign\":\"center\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"FULL\",\"name\":\"FULL\",\"type\":\"numeric\",\"sortable\":false,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.040\",\"0.046\",\"0.014\"],\"header\":\"FULL\",\"minWidth\":100,\"align\":\"center\",\"headerVAlign\":\"center\",\"style\":[{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"}],\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"FILT\",\"name\":\"FILT\",\"type\":\"numeric\",\"sortable\":false,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.037\",\"0.033\",\"0.008\"],\"header\":\"FILT\",\"minWidth\":100,\"align\":\"center\",\"headerVAlign\":\"center\",\"style\":[{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"}],\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"PERfect\",\"name\":\"PERfect\",\"type\":\"numeric\",\"sortable\":false,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.0599\",\"0.0819\",\"0.002\"],\"header\":\"PERfect\",\"minWidth\":100,\"align\":\"center\",\"headerVAlign\":\"center\",\"style\":[{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#2271B2\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"}],\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"PIME\",\"name\":\"PIME\",\"type\":\"numeric\",\"sortable\":false,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.001\",\"0.001\",\"0.001\"],\"header\":\"PIME\",\"minWidth\":100,\"align\":\"center\",\"headerVAlign\":\"center\",\"style\":[{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"},{\"color\":\"#B22271\",\"fontWeight\":\"bold\"}],\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"columnGroups\":[{\"name\":\"p-values\",\"headerStyle\":{\"fontSize\":\"1.3em\"},\"columns\":[\"FULL\",\"FILT\",\"PERfect\",\"PIME\"]}],\"defaultPageSize\":12,\"paginationType\":\"numbers\",\"showPagination\":false,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"theme\":{\"style\":{\"fontSize\":\"0.9em\"}},\"dataKey\":\"079db4e6c2e9ed19842eac9085e5d884\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\n\n\n\n\n\nOksanen, Jari, F. Guillaume Blanchet, Roeland Kindt, Pierre Legendre, Peter R. Minchin, R. B. O’Hara, Gavin L. Simpson, Peter Sólymos, M. Henry H. Stevens, and Helene Wagner. 2012. “Vegan: Community Ecology Package.” R Package Version 2 (0). https://cran.r-project.org/web/packages/vegan/index.html.\n\n\n\n\n",
      "last_modified": "2021-10-12T18:12:00-05:00"
    },
    {
      "path": "dada2.html",
      "title": "1 DADA2 Workflow",
      "description": "DADA2 workflow for processing the **16S rRNA** and the **ITS** high temperature data sets. Workflow uses paired end reads, beginning with raw fastq files, ending with sequence and taxonomy tables.\n",
      "author": [],
      "contents": "\n\nContents\nPrerequisites\n16s rRNA Data\nOverview\n1. Set Working Environment\n2. Define Primers\n3. Remove Primers\n4. Quality Assessment & Filtering\n5. Learn Error Rates\n6. Dereplicate Reads\n7. DADA2 & ASV Inference\n8. Construct Sequence Table\n9. Remove Chimeras\n10. Track Reads through Workflow\n11. Assign Taxonomy\n12. Save Image\nR Session Information & Code\n\nITS Data\nOverview\n1. Set Working Environment\n2. Define Primers\n3. Remove Primers\n4. Quality Assessment & Filtering\n5. Learn Error Rates\n6. Dereplicate Reads\n7. DADA2 & ASV Inference\n8. Merge Paired Reads\n9. Construct Sequence Table\n10. Remove Chimeras\n11. Track Reads through Workflow\n12. Assign Taxonomy\n13. Save Image\nR Session Information & Code\nSource Code\nData Availability\n\n\n\nClick here for setup information.\n\nknitr::opts_chunk$set(echo = TRUE, eval = FALSE)\nset.seed(919191)\n#pacman::p_depends(ape, local = TRUE)  \n#pacman::p_depends_reverse(ape, local = TRUE)  \nlibrary(dada2); packageVersion(\"dada2\")\n[1] '1.20.0'\nlibrary(ShortRead); packageVersion(\"ShortRead\")\n[1] '1.50.0'\nlibrary(ggplot2); packageVersion(\"ggplot2\")\n[1] '3.3.5'\npacman::p_load(rmarkdown, DT, gridExtra, grid, \n               formatR, reactable, downloadthis,\n               captioner, dplyr, sparkline, \n               install = FALSE, update = FALSE)\n\noptions(scipen=999)\nknitr::opts_current$get(c(\n  \"cache\",\n  \"cache.path\",\n  \"cache.rebuild\",\n  \"dependson\",\n  \"autodep\"\n))\n$cache\n[1] 0\n\n$cache.path\n[1] \"dada2_cache/html5/\"\n\n$cache.rebuild\n[1] FALSE\n\n$dependson\nNULL\n\n$autodep\n[1] FALSE\nremove(list = ls())\n\n\n\n\n\n\n\n\n\n\nPrerequisites\nIn order to run this workflow, you either need the raw data, available on the figshare project site, or the trimmed data, available from the European Nucleotide Archive (ENA) under project accession number PRJEB45074. See the Data Availability page for more details.\nThis workflow contains the code we used to process the 16S rRNA and ITS data sets using DADA2 (Callahan et al. 2016). Workflow construction is based on the DADA2 Pipeline Tutorial (1.8) and the primer identification section of the DADA2 ITS Pipeline Workflow (1.8).\n\nBecause the workflows share many variable names, you must either split the workflow into a script for each data set OR run the command remove(list = ls()) before beginning the next workflow.\n16s rRNA Data\n\nNOTE: The reverse reads for 16S rRNA data set are unusable (see below), therefore this workflow deals with forward reads only.\n\nWe will screen the forward reads for reverse primers and show the quality plots of the reverse reads at the beginning of the workflow. After that, reverse reads are not used.\nOverview\nSequence Files & Samples\nWe sequenced a total of 15 samples collected from 10 different plots at a single depth in each plot.\n\n\n\n(16S rRNA) Table 1 | Sample data & associated sequencing information.\n\n\n Download data as csv file\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Sample_ID\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"Plot\":[\"P01\",\"P01\",\"P02\",\"P03\",\"P03\",\"P04\",\"P05\",\"P05\",\"P06\",\"P07\",\"P07\",\"P08\",\"P09\",\"P09\",\"P10\"],\"Treatment\":[\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\",\"Control\"],\"Temp\":[3,8,0,3,8,0,3,8,0,3,8,0,3,8,0],\"Depth\":[\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\"],\"Pair\":[\"A\",\"A\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"C\",\"D\",\"D\",\"D\",\"E\",\"E\",\"E\"],\"raw_reads\":[85489,77645,87091,93065,66401,67810,58266,120892,101599,76781,79032,77599,95566,95182,67583],\"Fastq_ID_Forward\":[\"P1_S1_L001_R1_001_16S.fastq.gz\",\"P1-8C_S11_L001_R1_001_16S.fastq.gz\",\"P2_S2_L001_R1_001_16S.fastq.gz\",\"P3_S3_L001_R1_001_16S.fastq.gz\",\"P3-8C_S12_L001_R1_001_16S.fastq.gz\",\"P4_S4_L001_R1_001_16S.fastq.gz\",\"P5_S5_L001_R1_001_16S.fastq.gz\",\"P5-8C_S13_L001_R1_001_16S.fastq.gz\",\"P6_S6_L001_R1_001_16S.fastq.gz\",\"P7_S7_L001_R1_001_16S.fastq.gz\",\"P7-8C_S14_L001_R1_001_16S.fastq.gz\",\"P8_S8_L001_R1_001_16S.fastq.gz\",\"P9_S9_L001_R1_001_16S.fastq.gz\",\"P9-8C_S15_L001_R1_001_16S.fastq.gz\",\"P10_S10_L001_R1_001_16S.fastq.gz\"],\"Fastq_ID_Reverse\":[\"P1_S1_L001_R2_001_16S.fastq.gz\",\"P1-8C_S11_L001_R2_001_16S.fastq.gz\",\"P2_S2_L001_R2_001_16S.fastq.gz\",\"P3_S3_L001_R2_001_16S.fastq.gz\",\"P3-8C_S12_L001_R2_001_16S.fastq.gz\",\"P4_S4_L001_R2_001_16S.fastq.gz\",\"P5_S5_L001_R2_001_16S.fastq.gz\",\"P5-8C_S13_L001_R2_001_16S.fastq.gz\",\"P6_S6_L001_R2_001_16S.fastq.gz\",\"P7_S7_L001_R2_001_16S.fastq.gz\",\"P7-8C_S14_L001_R2_001_16S.fastq.gz\",\"P8_S8_L001_R2_001_16S.fastq.gz\",\"P9_S9_L001_R2_001_16S.fastq.gz\",\"P9-8C_S15_L001_R2_001_16S.fastq.gz\",\"P10_S10_L001_R2_001_16S.fastq.gz\"],\"I7_Index_ID\":[\"SD701\",\"SD702\",\"SD701\",\"SD701\",\"SD702\",\"SD701\",\"SD701\",\"SD702\",\"SD701\",\"SD701\",\"SD702\",\"SD701\",\"SD702\",\"SD702\",\"SD702\"],\"index\":[\"tactaggt\",\"acgtacgt\",\"tactaggt\",\"tactaggt\",\"acgtacgt\",\"tactaggt\",\"tactaggt\",\"acgtacgt\",\"tactaggt\",\"tactaggt\",\"acgtacgt\",\"tactaggt\",\"acgtacgt\",\"acgtacgt\",\"acgtacgt\"],\"I5_Index_ID\":[\"SD501\",\"SD503\",\"SD502\",\"SD503\",\"SD504\",\"SD504\",\"SD505\",\"SD505\",\"SD506\",\"SD507\",\"SD506\",\"SD508\",\"SD501\",\"SD507\",\"SD502\"],\"index2\":[\"AAGCAGCA\",\"CGATCTAC\",\"ACGCGTGA\",\"CGATCTAC\",\"TGCGTCAC\",\"TGCGTCAC\",\"GTCTAGTG\",\"GTCTAGTG\",\"CTAGTATG\",\"GATAGCGT\",\"CTAGTATG\",\"TCTACACT\",\"AAGCAGCA\",\"GATAGCGT\",\"ACGCGTGA\"]},\"columns\":[{\"accessor\":\"Sample_ID\",\"name\":\"Sample ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"header\":\"Sample ID\",\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"Total reads\",\"minWidth\":150,\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"Plot\",\"name\":\"Plot\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01\",\"P01\",\"P02\",\"P03\",\"P03\",\"P04\",\"P05\",\"P05\",\"P06\",\"P07\",\"P07\",\"P08\",\"P09\",\"P09\",\"P10\"],\"header\":\"Plot\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Treatment\",\"name\":\"Treatment\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\",\"Control\"],\"header\":\"Treatment\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Temp\",\"name\":\"Temp\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\"],\"header\":\"Temp\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Depth\",\"name\":\"Depth\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\"],\"header\":\"Depth\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Pair\",\"name\":\"Pair\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"A\",\"A\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"C\",\"D\",\"D\",\"D\",\"E\",\"E\",\"E\"],\"header\":\"Pair\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"raw_reads\",\"name\":\"raw_reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"85489\",\"77645\",\"87091\",\"93065\",\"66401\",\"67810\",\"58266\",\"120892\",\"101599\",\"76781\",\"79032\",\"77599\",\"95566\",\"95182\",\"67583\"],\"header\":\"raw reads\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"1250001\"},{\"accessor\":\"Fastq_ID_Forward\",\"name\":\"Fastq_ID_Forward\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P1_S1_L001_R1_001_16S.fastq.gz\",\"P1-8C_S11_L001_R1_001_16S.fastq.gz\",\"P2_S2_L001_R1_001_16S.fastq.gz\",\"P3_S3_L001_R1_001_16S.fastq.gz\",\"P3-8C_S12_L001_R1_001_16S.fastq.gz\",\"P4_S4_L001_R1_001_16S.fastq.gz\",\"P5_S5_L001_R1_001_16S.fastq.gz\",\"P5-8C_S13_L001_R1_001_16S.fastq.gz\",\"P6_S6_L001_R1_001_16S.fastq.gz\",\"P7_S7_L001_R1_001_16S.fastq.gz\",\"P7-8C_S14_L001_R1_001_16S.fastq.gz\",\"P8_S8_L001_R1_001_16S.fastq.gz\",\"P9_S9_L001_R1_001_16S.fastq.gz\",\"P9-8C_S15_L001_R1_001_16S.fastq.gz\",\"P10_S10_L001_R1_001_16S.fastq.gz\"],\"header\":\"Fastq ID Forward\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Fastq_ID_Reverse\",\"name\":\"Fastq_ID_Reverse\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P1_S1_L001_R2_001_16S.fastq.gz\",\"P1-8C_S11_L001_R2_001_16S.fastq.gz\",\"P2_S2_L001_R2_001_16S.fastq.gz\",\"P3_S3_L001_R2_001_16S.fastq.gz\",\"P3-8C_S12_L001_R2_001_16S.fastq.gz\",\"P4_S4_L001_R2_001_16S.fastq.gz\",\"P5_S5_L001_R2_001_16S.fastq.gz\",\"P5-8C_S13_L001_R2_001_16S.fastq.gz\",\"P6_S6_L001_R2_001_16S.fastq.gz\",\"P7_S7_L001_R2_001_16S.fastq.gz\",\"P7-8C_S14_L001_R2_001_16S.fastq.gz\",\"P8_S8_L001_R2_001_16S.fastq.gz\",\"P9_S9_L001_R2_001_16S.fastq.gz\",\"P9-8C_S15_L001_R2_001_16S.fastq.gz\",\"P10_S10_L001_R2_001_16S.fastq.gz\"],\"header\":\"Fastq ID Reverse\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"I7_Index_ID\",\"name\":\"I7_Index_ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"SD701\",\"SD702\",\"SD701\",\"SD701\",\"SD702\",\"SD701\",\"SD701\",\"SD702\",\"SD701\",\"SD701\",\"SD702\",\"SD701\",\"SD702\",\"SD702\",\"SD702\"],\"header\":\"I7 Index ID\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"index\",\"name\":\"index\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"tactaggt\",\"acgtacgt\",\"tactaggt\",\"tactaggt\",\"acgtacgt\",\"tactaggt\",\"tactaggt\",\"acgtacgt\",\"tactaggt\",\"tactaggt\",\"acgtacgt\",\"tactaggt\",\"acgtacgt\",\"acgtacgt\",\"acgtacgt\"],\"header\":\"index\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"I5_Index_ID\",\"name\":\"I5_Index_ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"SD501\",\"SD503\",\"SD502\",\"SD503\",\"SD504\",\"SD504\",\"SD505\",\"SD505\",\"SD506\",\"SD507\",\"SD506\",\"SD508\",\"SD501\",\"SD507\",\"SD502\"],\"header\":\"I5 Index ID\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"index2\",\"name\":\"index2\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"AAGCAGCA\",\"CGATCTAC\",\"ACGCGTGA\",\"CGATCTAC\",\"TGCGTCAC\",\"TGCGTCAC\",\"GTCTAGTG\",\"GTCTAGTG\",\"CTAGTATG\",\"GATAGCGT\",\"CTAGTATG\",\"TCTACACT\",\"AAGCAGCA\",\"GATAGCGT\",\"ACGCGTGA\"],\"header\":\"index2\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,15],\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"nowrap\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"d0a61580e78aeaf7492f0e095e84ee27\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\n\nWorkflow\nThe workflow consists of the following steps:\nStep\nCommand\nWhat we’re doing\n1\nmultiple\nprepare input file names & paths\n2\nmultiple\nDefine primers (all orientations)\n3\ncutadapt\nRemove primers\n4\nfilterAndTrim()\nassess quality & filter reads\n5\nlearnErrors()\ngenerate an error model for the data\n6\nderepFastq\ndereplicate sequences\n7\ndada()\ninfer ASVs on both forward & reverse reads independently\n8\nmakeSequenceTable()\ngenerate a count table\n9\nremoveBimeraDenovo()\nscreen for & remove chimeras\n10\n\ntrack reads through workflow\n11\nassignTaxonomy()\nassign taxonomy & finish workflow\n12\nsave.image()\nsave an image of seqtab & taxtab for next part of workflow\n1. Set Working Environment\nNext, we need to setup the working environment by renaming the fastq files and defining a path for the working directory.\nRename samples\nTo make the parsing easier, we will eliminate the lane and well number from each sample. If you do not wish to do that you will need to adjust the code accordingly. I am positive there are more elegant ways of doing this.\n\nCAUTION. If you use this for your own data, please check that this code works on a few backup files before proceeding.\n\n\nsetwd(\"RAW\")\norig_fastq <- list.files(pattern = \"*.fastq.gz\")\nnewname_fastq <- gsub(\"_S.*_L001\", \"\", orig_fastq)\nnewname_fastq <- gsub(\"_001\", \"\", newname_fastq)\nfile.rename(orig_fastq, newname_fastq)\nsetwd(\"../\")\n\n\npath <- \"RAW\"\nhead(list.files(path))\n\n\n[1] \"P1_R1.fastq.gz\"    \"P1_R2.fastq.gz\"    \"P1-8C_R1.fastq.gz\"\n[4] \"P1-8C_R2.fastq.gz\" \"P10_R1.fastq.gz\"   \"P10_R2.fastq.gz\"  \n\nThen, we generate matched lists of the forward and reverse read files. We also parse out the sample name.\n\nfnFs <- sort(list.files(path, pattern = \"_R1.fastq.gz\", full.names = TRUE))\nfnRs <- sort(list.files(path, pattern = \"_R2.fastq.gz\", full.names = TRUE))\n\n\np1a <- plotQualityProfile(fnFs[1:15], aggregate = TRUE)\np2a <- plotQualityProfile(fnRs[1:15], aggregate = TRUE)\n\np3a <- grid.arrange(p1a, p2a, nrow = 1)\nggsave(\"plot_qscores_2018a.png\", p3a, width = 7, height = 3)\n\nUnfortunately, the reverse reads are unusable.\n\n\n\n(16S rRNA) Figure 1 | Aggregated quality score plots for forward (left) & reverse (right) reads.\n2. Define Primers\nBefore we start the DADA2 workflow we need to run catadapt (Martin 2011) on all fastq.gz files to trim the primers. For bacteria and archaea, we amplified the V4 hypervariable region of the 16S rRNA gene using the primer pair 515F (GTGCCAGCMGCCGCGGTAA) and 806R (GGACTACHVGGGTWTCTAAT) (Caporaso et al. 2011), which should yield an amplicon length of about 253 bp.\nFirst we define the primers.\n\nFWD <- \"GTGCCAGCMGCCGCGGTAA\"\nREV <- \"GGACTACHVGGGTWTCTAAT\"\n\nNext, we check the presence and orientation of these primers in the data. I started doing this for ITS data because of primer read-through but I really like the general idea of doing it just to make sure nothing funny is going of with the data. To do this, we will create all orientations of the input primer sequences. In other words the Forward, Complement, Reverse, and Reverse Complement variations.\n\nallOrients <- function(primer) {\n    require(Biostrings)\n    dna <- DNAString(primer)\n    orients <- c(Forward = dna,\n                 Complement = complement(dna),\n                 Reverse = reverse(dna),\n                 RevComp = reverseComplement(dna))\n    return(sapply(orients, toString))\n}\nFWD.orients <- allOrients(FWD)\nREV.orients <- allOrients(REV)\nFWD.orients\nREV.orients\n\n              Forward            Complement               Reverse\n\"GTGCCAGCMGCCGCGGTAA\" \"CACGGTCGKCGGCGCCATT\" \"AATGGCGCCGMCGACCGTG\"\n              RevComp\n\"TTACCGCGGCKGCTGGCAC\"\n               Forward             Complement                Reverse\n\"GGACTACHVGGGTWTCTAAT\" \"CCTGATGDBCCCAWAGATTA\" \"TAATCTWTGGGVHCATCAGG\"\n               RevComp\n\"ATTAGAWACCCBDGTAGTCC\"\nNow we do a little pre-filter step to eliminate ambiguous bases (Ns) because Ns make mapping of short primer sequences difficult. This step removes any reads with Ns. Again, set some files paths, this time for the filtered reads.\n\nfnFs.filtN <- file.path(path, \"filtN\", basename(fnFs))\nfilterAndTrim(fnFs, fnFs.filtN,\n              maxN = 0, multithread = TRUE)\n\nNice. Time to assess the number of times a primer (and all primer orientations) appear in the forward and reverse reads. According to the workflow, counting the primers on one set of paired end fastq files is sufficient to see if there is a problem. This assumes that all the files were created using the same library prep. Basically for both primers, we will search for all four orientations in both forward and reverse reads. Since this is 16S rRNA we do not anticipate any issues but it is worth checking anyway.\n\nsampnum <- 2\n\n\nprimerHits <- function(primer, fn) {\n    # Counts number of reads in which the primer is found\n    nhits <- vcountPattern(primer, sread(readFastq(fn)), fixed = FALSE)\n    return(sum(nhits > 0))\n}\n\nForward primers\n\nrbind(FWD.ForwardReads = sapply(FWD.orients, primerHits,\n                                fn = fnFs.filtN[[sampnum]]))\n\n                 Forward Complement Reverse RevComp\nFWD.ForwardReads   74707          0       0       0\nReverse primers\n\nrbind(REV.ForwardReads = sapply(REV.orients, primerHits,\n                                fn = fnFs.filtN[[sampnum]]))\n\n                 Forward Complement Reverse RevComp\nREV.ForwardReads       0          0       0     165\nAs expected, forward primers predominantly in the forward reads and very little evidence of reverse primers.\n3. Remove Primers\nNow we can run catadapt (Martin 2011) to remove the primers from the fastq sequences. A little setup first. If this command executes successfully it means R has found cutadapt.\n\ncutadapt <- \"/Users/rad/miniconda3/envs/cutadapt/bin/cutadapt\"\nsystem2(cutadapt, args = \"--version\") # Run shell commands from R\n\n2.8\nWe set paths and trim the forward primer and the reverse-complement of the reverse primer off of R1 (forward reads) and trim the reverse primer and the reverse-complement of the forward primer off of R2 (reverse reads).\n\npath.cut <- file.path(path, \"cutadapt\")\nif(!dir.exists(path.cut)) dir.create(path.cut)\nfnFs.cut <- file.path(path.cut, basename(fnFs))\n\nFWD.RC <- dada2:::rc(FWD)\nREV.RC <- dada2:::rc(REV)\n\nR1.flags <- paste(\"-g\", FWD, \"-a\", REV.RC)\n\nfor(i in seq_along(fnFs)) {system2(cutadapt,\n                                   args = c(R1.flags,\n                                            \"-m\", 20, \"-n\", 2, \"-e\", 0.12,\n                                            \"-o\", fnFs.cut[i],\n                                            fnFs.filtN[i]))}\n\nThis is cutadapt 2.8 with Python 3.7.6\nCommand line parameters: -g GTGCCAGCMGCCGCGGTAA -a ATTAGAWACCCBDGTAGTCC \\\n                         -m 20 -n 2 -e 0.12 \\\n                         -o RAW/cutadapt/P1_R1.fastq.gz RAW/filtN/P1_R1.fastq.gz\nNote. If the code above removes all of the base pairs in a sequence, you will get downstream errors unless you set the -m flag. This flag sets the minimum length and reads shorter than this will be discarded. Without this flag, reads of length 0 will be kept and cause issues. Also, a lot of output will be written to the screen by cutadapt!.\nWe can now count the number of primers in the sequences from the output of cutadapt.\n\nrbind(\n  FWD.ForwardReads = sapply(FWD.orients, primerHits, fn = fnFs.cut[[sampnum]]),\n  REV.ForwardReads = sapply(REV.orients, primerHits, fn = fnFs.cut[[sampnum]]))\n\n                 Forward Complement Reverse RevComp\nFWD.ForwardReads       0          0       0       0\nREV.ForwardReads       0          0       0       0\nBasically, primers are no longer detected in the cutadapted reads. Now, for each sample, we can take a look at how the pre-filtering step and primer removal affected the total number of raw reads.\n\n\n\n\n\n\n(16S rRNA) Table 2 | Total reads per sample after prefiltering and primer removal (using cutadapt).\n\n\n Download data as csv file\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Sample_ID\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"raw_reads\":[85489,77645,87091,93065,66401,67810,58266,120892,101599,76781,79032,77599,95566,95182,67583],\"pre_filt_reads\":[85482,77642,87085,93053,66367,67800,58259,120842,101592,76776,79022,77591,95564,94457,67579],\"cutadapt_reads\":[85402,77470,86878,92851,65498,67617,58006,117015,101363,76583,78724,77133,95310,44250,67432],\"per_reads_kept\":[0.999,0.998,0.998,0.998,0.986,0.997,0.996,0.968,0.998,0.997,0.996,0.994,0.997,0.465,0.998]},\"columns\":[{\"accessor\":\"Sample_ID\",\"name\":\"Sample ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"header\":\"Sample ID\",\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"Total reads\",\"minWidth\":150,\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"raw_reads\",\"name\":\"raw_reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"85489\",\"77645\",\"87091\",\"93065\",\"66401\",\"67810\",\"58266\",\"120892\",\"101599\",\"76781\",\"79032\",\"77599\",\"95566\",\"95182\",\"67583\"],\"header\":\"raw reads\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"1250001\"},{\"accessor\":\"pre_filt_reads\",\"name\":\"pre_filt_reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"85482\",\"77642\",\"87085\",\"93053\",\"66367\",\"67800\",\"58259\",\"120842\",\"101592\",\"76776\",\"79022\",\"77591\",\"95564\",\"94457\",\"67579\"],\"header\":\"pre filt reads\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"1249111\"},{\"accessor\":\"cutadapt_reads\",\"name\":\"cutadapt_reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"85402\",\"77470\",\"86878\",\"92851\",\"65498\",\"67617\",\"58006\",\"117015\",\"101363\",\"76583\",\"78724\",\"77133\",\"95310\",\"44250\",\"67432\"],\"header\":\"cutadapt reads\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"1191532\"},{\"accessor\":\"per_reads_kept\",\"name\":\"per_reads_kept\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.999\",\"0.998\",\"0.998\",\"0.998\",\"0.986\",\"0.997\",\"0.996\",\"0.968\",\"0.998\",\"0.997\",\"0.996\",\"0.994\",\"0.997\",\"0.465\",\"0.998\"],\"header\":\"per reads kept\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,15],\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"nowrap\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"cf6f2904b0768c9d8cc3684f58d63f4c\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\n4. Quality Assessment & Filtering\nWe need the forward and reverse fastq file names plus the sample names.\n\ncutFs <- sort(list.files(path.cut, pattern = \"_R1.fastq.gz\",\n                         full.names = TRUE))\nget.sample.name <- function(fname) strsplit(basename(fname), \"_\")[[1]][1]\nsample.names <- unname(sapply(cutFs, get.sample.name))\nhead(sample.names)\n\n\nc(\"P1\", \"P1-8C\", \"P10\", \"P2\", \"P3\", \"P3-8C\")\n[1] \"P1\"    \"P1-8C\" \"P10\"   \"P2\"    \"P3\"    \"P3-8C\"\n\nFirst let’s look at the quality of our reads. The numbers in brackets specify which samples to view. Here we are looking at an aggregate plot of all data (except the negative control).\nQuality plots\n\np1 <- plotQualityProfile(cutFs[1:15], aggregate = TRUE)\nggsave(\"ssu18_plot_qscores.png\", p1, width = 7, height = 3)\nggsave(\"ssu18_plot_qscores.png\", p1)\n\n\n\n\n(16S rRNA) Figure 2 | Aggregated quality score plot for forward reads after prefilter & primer removal.\nThe forward reads look good.\nFiltering\nFirst, we again make some path variables and setup a new directory of filtered reads.\n\nfiltFs <- file.path(path.cut, \"filtered\", basename(cutFs))\n\nAnd then we trim the reads.\n\nout <- filterAndTrim(cutFs, filtFs,\n                     maxN = 0, maxEE = 2,\n                     truncQ = 2, rm.phix = TRUE,\n                     compress = TRUE, multithread = 20)\nout\n\n\nThese parameters should be set based on the anticipated length of the amplicon and the read quality.\nAnd here is a table of how the filtering step affected the number of reads in each sample. As you can see, there are a few samples that started with a low read count to begin with—we will likely remove those samples at some point.\n\n\n\n(16S rRNA) Table 3 | Total reads per sample after filtering.\n\n\n Download data as csv file\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Sample_ID\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"reads_in\":[85402,77470,86878,92851,65498,67617,58006,117015,101363,76583,78724,77133,95310,44250,67432],\"reads_out\":[79804,72760,81240,86732,60860,63037,54127,109421,94740,71678,73639,72263,89315,33000,62598],\"per_reads_kept\":[0.934,0.939,0.935,0.934,0.929,0.932,0.933,0.935,0.935,0.936,0.935,0.937,0.937,0.746,0.928]},\"columns\":[{\"accessor\":\"Sample_ID\",\"name\":\"Sample ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"header\":\"Sample ID\",\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"Total reads\",\"minWidth\":150,\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"reads_in\",\"name\":\"reads_in\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"85402\",\"77470\",\"86878\",\"92851\",\"65498\",\"67617\",\"58006\",\"117015\",\"101363\",\"76583\",\"78724\",\"77133\",\"95310\",\"44250\",\"67432\"],\"header\":\"reads in\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"1191532\"},{\"accessor\":\"reads_out\",\"name\":\"reads_out\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"79804\",\"72760\",\"81240\",\"86732\",\"60860\",\"63037\",\"54127\",\"109421\",\"94740\",\"71678\",\"73639\",\"72263\",\"89315\",\"33000\",\"62598\"],\"header\":\"reads out\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"1105214\"},{\"accessor\":\"per_reads_kept\",\"name\":\"per_reads_kept\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.934\",\"0.939\",\"0.935\",\"0.934\",\"0.929\",\"0.932\",\"0.933\",\"0.935\",\"0.935\",\"0.936\",\"0.935\",\"0.937\",\"0.937\",\"0.746\",\"0.928\"],\"header\":\"per reads kept\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,15],\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"nowrap\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"4ce7cbb181333ed4728cdf7cbfc942b7\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\n5. Learn Error Rates\nNow it is time to assess the error rate of the data. The DADA2 algorithm uses a parametric error model. Every amplicon data set has a different set of error rates and the learnErrors method learns this error model from the data. It does this by alternating estimation of the error rates and inference of sample composition until they converge on a jointly consistent solution. The algorithm begins with an initial guess, for which the maximum possible error rates in the data are used.\nForward Reads\n\nerrF <- learnErrors(filtFs, multithread = FALSE)\n\n103002523 total bases in 443994 reads from 6 samples will be used for learning the error rates.\n\nplotErrors(errF, nominalQ=TRUE)\n\n\n\n\n(16S rRNA) Figure 3 | Forward reads: Observed frequency of each transition (e.g., T -> G) as a function of the associated quality score.\nThe error rates for each possible transition (A to C, A to G, etc.) are shown. Points are the observed error rates for each consensus quality score. The black line shows the estimated error rates after convergence of the machine-learning algorithm. The red line shows the error rates expected under the nominal definition of the Q-score. Here the estimated error rates (black line) are a good fit to the observed rates (points), and the error rates drop with increased quality as expected.\n6. Dereplicate Reads\nNow we can use derepFastq to identify the unique sequences in the forward and reverse fastq files.\nForward Reads\n\n\n\n\nderepFs <- derepFastq(filtFs)\nnames(derepFs) <- sample.names\n\n\nDetailed results of derep forward reads\n\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P1_R1.fastq.gz\nEncountered 39950 unique sequences from 79804 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P1-8C_R1.fastq.gz\nEncountered 31163 unique sequences from 72760 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P10_R1.fastq.gz\nEncountered 35274 unique sequences from 62598 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P2_R1.fastq.gz\nEncountered 42119 unique sequences from 81240 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P3_R1.fastq.gz\nEncountered 40336 unique sequences from 86732 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P3-8C_R1.fastq.gz\nEncountered 31104 unique sequences from 60860 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P4_R1.fastq.gz\nEncountered 35169 unique sequences from 63037 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P5_R1.fastq.gz\nEncountered 27752 unique sequences from 54127 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P5-8C_R1.fastq.gz\nEncountered 49045 unique sequences from 109421 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P6_R1.fastq.gz\nEncountered 46853 unique sequences from 94740 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P7_R1.fastq.gz\nEncountered 35363 unique sequences from 71678 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P7-8C_R1.fastq.gz\nEncountered 35567 unique sequences from 73639 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P8_R1.fastq.gz\nEncountered 38518 unique sequences from 72263 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P9_R1.fastq.gz\nEncountered 43426 unique sequences from 89315 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P9-8C_R1.fastq.gz\nEncountered 13673 unique sequences from 33000 total sequences read.\n\n\n7. DADA2 & ASV Inference\nAt this point we are ready to apply the core sample inference algorithm (dada) to the filtered and trimmed sequence data. DADA2 offers three options for whether and how to pool samples for ASV inference.\nIf pool = TRUE, the algorithm will pool together all samples prior to sample inference.\nIf pool = FALSE, sample inference is performed on each sample individually.\nIf pool = \"pseudo\", the algorithm will perform pseudo-pooling between individually processed samples.\nWe tested all three methods through the full pipeline. Click the + to see the results of the test. For our final analysis, we chose pool = FALSE for this data set.\n\nShow/hide Results of dada pooling options\n\nHere are summary tables of results from the tests. Values are from the final sequence table produced by each option.\n\n\n\n(16S rRNA) Table 4 | Total number of reads, total number of ASVs, minimum and maximum ASVs, followed by the number of singletons, doubletons, etc. for pooling options.\n\n\n Download data as csv file\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\".rownames\":[\"no_reads\",\"no_asvs\",\"min_asv\",\"max_asv\",\"n_samp_1\",\"n_samp_2\",\"n_samp_3\",\"n_samp_4\",\"n_samp_5\",\"n_samp_6\",\"n_samp_7\",\"n_samp_8\",\"n_samp_9\",\"n_samp_10\",\"n_samp_11\",\"n_samp_12\",\"n_samp_13\",\"n_samp_14\",\"n_samp_15\"],\"unpooled\":[937761,20332,816,3082,17122,1270,586,357,215,161,130,84,102,63,55,60,36,42,49],\"psuedo\":[942031,21269,1248,4155,17948,309,265,238,250,245,253,275,229,235,210,213,225,205,169],\"pooled\":[906077,13206,2207,7522,2430,1283,890,797,752,694,711,705,717,733,715,726,750,730,573]},\"columns\":[{\"accessor\":\".rownames\",\"name\":\"\",\"type\":\"character\",\"sortable\":false,\"resizable\":true,\"filterable\":false,\"cell\":[\"no_reads\",\"no_asvs\",\"min_asv\",\"max_asv\",\"n_samp_1\",\"n_samp_2\",\"n_samp_3\",\"n_samp_4\",\"n_samp_5\",\"n_samp_6\",\"n_samp_7\",\"n_samp_8\",\"n_samp_9\",\"n_samp_10\",\"n_samp_11\",\"n_samp_12\",\"n_samp_13\",\"n_samp_14\",\"n_samp_15\"],\"header\":\"\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"isRowHeader\":true},{\"accessor\":\"unpooled\",\"name\":\"unpooled\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"937761\",\"20332\",\"816\",\"3082\",\"17122\",\"1270\",\"586\",\"357\",\"215\",\"161\",\"130\",\"84\",\"102\",\"63\",\"55\",\"60\",\"36\",\"42\",\"49\"],\"header\":\"unpooled\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"psuedo\",\"name\":\"psuedo\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"942031\",\"21269\",\"1248\",\"4155\",\"17948\",\"309\",\"265\",\"238\",\"250\",\"245\",\"253\",\"275\",\"229\",\"235\",\"210\",\"213\",\"225\",\"205\",\"169\"],\"header\":\"psuedo\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"pooled\",\"name\":\"pooled\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"906077\",\"13206\",\"2207\",\"7522\",\"2430\",\"1283\",\"890\",\"797\",\"752\",\"694\",\"711\",\"705\",\"717\",\"733\",\"715\",\"726\",\"750\",\"730\",\"573\"],\"header\":\"pooled\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,19],\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"nowrap\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"008a02fe9c066d4f2a48dee88f90e8bc\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\n\n\n\n(16S rRNA) Table 5 | Total number of reads and ASVs by sample for pooling options.\n\n\n Download data as csv file\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Sample_ID\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"unpooled_reads\":[68037,60535,70436,75183,53437,53813,47070,86841,81219,61742,62202,62171,76299,25151,53625],\"psuedo_reads\":[68529,60699,70436,75470,53134,54115,47328,87418,81416,62091,61917,62527,76671,26453,53827],\"pooled_reads\":[65521,57636,67208,71954,51893,52133,45012,85245,78759,58740,58300,60245,72833,28566,52032],\"unpooled_asv\":[2383,1618,2278,2368,1593,2052,1672,2156,3082,2025,2167,2453,2402,816,2070],\"psuedo_asv\":[3385,2434,3309,3277,2246,3086,2565,2946,4155,3049,2998,3446,3412,1248,3055],\"pooled_asv\":[6542,4927,6809,6324,4658,6669,5275,5608,7522,6256,5592,6791,6779,2207,6361]},\"columns\":[{\"accessor\":\"Sample_ID\",\"name\":\"Sample ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"header\":\"Sample ID\",\"minWidth\":150,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"unpooled_reads\",\"name\":\"unpooled_reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"68037\",\"60535\",\"70436\",\"75183\",\"53437\",\"53813\",\"47070\",\"86841\",\"81219\",\"61742\",\"62202\",\"62171\",\"76299\",\"25151\",\"53625\"],\"header\":\"unpooled reads\",\"minWidth\":150,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"psuedo_reads\",\"name\":\"psuedo_reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"68529\",\"60699\",\"70436\",\"75470\",\"53134\",\"54115\",\"47328\",\"87418\",\"81416\",\"62091\",\"61917\",\"62527\",\"76671\",\"26453\",\"53827\"],\"header\":\"psuedo reads\",\"minWidth\":150,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"pooled_reads\",\"name\":\"pooled_reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"65521\",\"57636\",\"67208\",\"71954\",\"51893\",\"52133\",\"45012\",\"85245\",\"78759\",\"58740\",\"58300\",\"60245\",\"72833\",\"28566\",\"52032\"],\"header\":\"pooled reads\",\"minWidth\":150,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"unpooled_asv\",\"name\":\"unpooled_asv\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"2383\",\"1618\",\"2278\",\"2368\",\"1593\",\"2052\",\"1672\",\"2156\",\"3082\",\"2025\",\"2167\",\"2453\",\"2402\",\"816\",\"2070\"],\"header\":\"unpooled asv\",\"minWidth\":150,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"psuedo_asv\",\"name\":\"psuedo_asv\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"3385\",\"2434\",\"3309\",\"3277\",\"2246\",\"3086\",\"2565\",\"2946\",\"4155\",\"3049\",\"2998\",\"3446\",\"3412\",\"1248\",\"3055\"],\"header\":\"psuedo asv\",\"minWidth\":150,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"pooled_asv\",\"name\":\"pooled_asv\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"6542\",\"4927\",\"6809\",\"6324\",\"4658\",\"6669\",\"5275\",\"5608\",\"7522\",\"6256\",\"5592\",\"6791\",\"6779\",\"2207\",\"6361\"],\"header\":\"pooled asv\",\"minWidth\":150,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,15],\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"nowrap\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"d9032bb36d5f991e71c433729341e8e8\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\n\ndadaFs <- dada(derepFs, err = errF, multithread = TRUE, pool = FALSE)\n\n\nDetailed results of dada on forward reads\n\nSample 1 - 79804 reads in 39950 unique sequences.\nSample 2 - 72760 reads in 31163 unique sequences.\nSample 3 - 62598 reads in 35274 unique sequences.\nSample 4 - 81240 reads in 42119 unique sequences.\nSample 5 - 86732 reads in 40336 unique sequences.\nSample 6 - 60860 reads in 31104 unique sequences.\nSample 7 - 63037 reads in 35169 unique sequences.\nSample 8 - 54127 reads in 27752 unique sequences.\nSample 9 - 109421 reads in 49045 unique sequences.\nSample 10 - 94740 reads in 46853 unique sequences.\nSample 11 - 71678 reads in 35363 unique sequences.\nSample 12 - 73639 reads in 35567 unique sequences.\nSample 13 - 72263 reads in 38518 unique sequences.\nSample 14 - 89315 reads in 43426 unique sequences.\nSample 15 - 33000 reads in 13673 unique sequences.\n\nAs an example, we can inspect the returned dada-class object for the forward and reverse reads from the sample #2:\n\ndadaFs[[sampnum]]\n\ndada-class: object describing DADA2 denoising results\n1759 sequence variants were inferred from 31163 input unique sequences.\nKey parameters: OMEGA_A = 1e-40, OMEGA_C = 1e-40, BAND_SIZE = 16\nThis output tells us how many true sequence variants the DADA2 algorithm inferred from the unique sequences, in this case the sample 2.\n8. Construct Sequence Table\nNow we construct an amplicon sequence variant (ASV) table.\n\nseqtab <- makeSequenceTable(dadaFs)\ndim(seqtab)\n\n\n[1]    15 21685\n\n\ntable(nchar(getSequences(seqtab)))\n\n   22    23    24    25    27    41    66    73   120   149   185   190   193 \n    2     1     1     2     1     1     1     1     1     1     1     9     1 \n  198   200   201   202   208   209   211   215   217   220   221   222   223 \n    1     1     1     1     1     1     1     1     2     4    14    21     8 \n  224   225   227   228   229   230   231   232   233   234   238   251 \n    3     4     6     4     5     9    20 21342   190    12     2     8 \nThe sequence table is a matrix with rows corresponding to (and named by) the samples, and columns corresponding to (and named by) the sequence variants. We have 21685 sequence variants but also a range of sequence lengths. Since many of these sequence variants are singletons or doubletons, we can just select a range that corresponds to the expected amplicon length and eliminate the spurious reads.\n\n\n\n\n\n\n(16S rRNA) Figure 4 | Distribution of read length by total ASVs before removing extreme length variants.\n\nseqtab.2 <- seqtab[,nchar(colnames(seqtab)) %in% seq(230,235)]\ndim(seqtab.2)\n\n\nThe values you select should be based on the sequence table generated above.\n\n[1]    15 21573\n\n\ntable(nchar(getSequences(seqtab.2)))\n\n  230   231   232   233   234 \n    9    20 21342   190    12 \nAfter removing the extreme length variants, we have 21573, a reduction of 112 sequence variants.\n\n\n\n9. Remove Chimeras\nEven though the dada method corrects substitution and indel errors, chimeric sequences remain. According to the DADA2 documentation, the accuracy of sequence variants after denoising makes identifying chimeric ASVs simpler than when dealing with fuzzy OTUs. Chimeric sequences are identified if they can be exactly reconstructed by combining a left-segment and a right-segment from two more abundant parent sequences.\n\nseqtab.nochim <- removeBimeraDenovo(seqtab.2,\n                                    method = \"consensus\",\n                                    multithread = 20,\n                                    verbose = TRUE)\ndim(seqtab.nochim)\n\nIdentified 1241 bimeras out of 21573 input sequences.\n\n[1]    15 20332\n\n\nsum(seqtab.nochim)/sum(seqtab.2)\n\n\n[1] 0.9596595\n\nChimera checking removed an additional 1241 sequence variants however, when we account for the abundances of each variant, we see chimeras accounts for about 4.03405% of the merged sequence reads. Not bad.\nThe last thing we want to do is write the sequence table to an RDS file.\n\nsaveRDS(seqtab.nochim, \"ssu18_seqtab.nochim.rds\")\n\n10. Track Reads through Workflow\nAt this point we can look at the number of reads that made it through each step of the workflow for every sample.\n\ngetN <- function(x) sum(getUniques(x))\ntrack <- cbind(out,\n               sapply(dadaFs, getN),\n               rowSums(seqtab.nochim))\ncolnames(track) <- c(\"input\", \"filtered\", \"denoisedF\", \"nonchim\")\nrownames(track) <- sample.names\n\n\n\n\n(16S rRNA) Table 6 | Tracking reads changes at each step of the DADA2 workflow.\n\n\n Download data as csv file\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Sample_ID\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"raw\":[85489,77645,87091,93065,66401,67810,58266,120892,101599,76781,79032,77599,95566,95182,67583],\"pre_filt\":[85482,77642,87085,93053,66367,67800,58259,120842,101592,76776,79022,77591,95564,94457,67579],\"cut\":[85402,77470,86878,92851,65498,67617,58006,117015,101363,76583,78724,77133,95310,44250,67432],\"filtered\":[79804,72760,81240,86732,60860,63037,54127,109421,94740,71678,73639,72263,89315,33000,62598],\"denoisedF\":[70434,65950,71961,78067,54822,54678,47868,100026,83190,64031,65125,63248,79799,31620,54075],\"nonchim\":[68037,60535,70436,75183,53437,53813,47070,86841,81219,61742,62202,62171,76299,25151,53625]},\"columns\":[{\"accessor\":\"Sample_ID\",\"name\":\"Sample ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"header\":\"Sample ID\",\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"Total reads\",\"minWidth\":150,\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"raw\",\"name\":\"raw\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"85489\",\"77645\",\"87091\",\"93065\",\"66401\",\"67810\",\"58266\",\"120892\",\"101599\",\"76781\",\"79032\",\"77599\",\"95566\",\"95182\",\"67583\"],\"header\":\"raw\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"1250001\"},{\"accessor\":\"pre_filt\",\"name\":\"pre_filt\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"85482\",\"77642\",\"87085\",\"93053\",\"66367\",\"67800\",\"58259\",\"120842\",\"101592\",\"76776\",\"79022\",\"77591\",\"95564\",\"94457\",\"67579\"],\"header\":\"pre filt\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"1249111\"},{\"accessor\":\"cut\",\"name\":\"cut\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"85402\",\"77470\",\"86878\",\"92851\",\"65498\",\"67617\",\"58006\",\"117015\",\"101363\",\"76583\",\"78724\",\"77133\",\"95310\",\"44250\",\"67432\"],\"header\":\"cut\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"1191532\"},{\"accessor\":\"filtered\",\"name\":\"filtered\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"79804\",\"72760\",\"81240\",\"86732\",\"60860\",\"63037\",\"54127\",\"109421\",\"94740\",\"71678\",\"73639\",\"72263\",\"89315\",\"33000\",\"62598\"],\"header\":\"filtered\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"1105214\"},{\"accessor\":\"denoisedF\",\"name\":\"denoisedF\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"70434\",\"65950\",\"71961\",\"78067\",\"54822\",\"54678\",\"47868\",\"100026\",\"83190\",\"64031\",\"65125\",\"63248\",\"79799\",\"31620\",\"54075\"],\"header\":\"denoisedF\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"984894\"},{\"accessor\":\"nonchim\",\"name\":\"nonchim\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"68037\",\"60535\",\"70436\",\"75183\",\"53437\",\"53813\",\"47070\",\"86841\",\"81219\",\"61742\",\"62202\",\"62171\",\"76299\",\"25151\",\"53625\"],\"header\":\"nonchim\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"937761\"}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,15],\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"nowrap\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"1acd74285d20b349eeba325d60426cec\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nAnd we can save a copy of the table for later use.\n\nwrite.table(track, \"ssu18_read_changes.txt\",\n            sep = \"\\t\", quote = FALSE, col.names=NA)\n\n\n\n\n11. Assign Taxonomy\nThe assignTaxonomy command implements the naive Bayesian classifier, so for reproducible results you need to set a random number seed (see issue #538). We did this at the beginning of the workflow. For taxonomic assignment, we are using the Silva version 138 (Quast et al. 2012). The developers of DADA2 maintain a formatted version of the database.\nWe will read in the RDS file containing the sequence table saved above. We also need to run remove(list = ls()) command, otherwise the final image we save will be huge. This way, the image only contains the sample data, seqtab, and taxtab after running removeBimeraDenovo.\n\nremove(list = ls())\nseqtab <- readRDS(\"ssu18_seqtab.nochim.rds\")\n\nAnd then native Bayesian (Wang et al. 2007) classifier against the Silva database.\n\ntax_silva <- assignTaxonomy(\n  seqtab, \"silva_nr_v138_train_set.fa.gz\", multithread = TRUE)\n\n12. Save Image\nAnd finally, we save an image for use in the analytic part of the workflow. This R data file will be needed as the input for the phyloseq portion of the workflow. See the Data Availability page for complete details on where to get this file.\n\nsave.image(\"ssu18_dada2_wf.rdata\")\n\n\n\n\nR Session Information & Code\nThis workflow was run on the Smithsonian High Performance Cluster (SI/HPC), Smithsonian Institution. Below are the specific packages and versions used in this workflow using both sessionInfo() and devtools::session_info(). Click the arrow to see the details.\n\nShow/hide R Session Info\nsessionInfo()\nR version 4.0.0 (2020-04-24)\nPlatform: x86_64-conda_cos6-linux-gnu (64-bit)\nRunning under: CentOS Linux 7 (Core)\n\nMatrix products: default\nBLAS/LAPACK: /home/scottjj/miniconda3/envs/R-4/lib/libopenblasp-r0.3.9.so\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C\n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8\n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8\n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C\n [9] LC_ADDRESS=C               LC_TELEPHONE=C\n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C\n\nattached base packages:\n [1] grid      stats4    parallel  stats     graphics  grDevices utils\n [8] datasets  methods   base\n\nother attached packages:\n [1] gridExtra_2.3               ggplot2_3.3.0\n [3] ShortRead_1.46.0            GenomicAlignments_1.24.0\n [5] SummarizedExperiment_1.18.1 DelayedArray_0.14.0\n [7] matrixStats_0.56.0          Biobase_2.48.0\n [9] Rsamtools_2.4.0             GenomicRanges_1.40.0\n[11] GenomeInfoDb_1.24.0         Biostrings_2.56.0\n[13] XVector_0.28.0              IRanges_2.22.1\n[15] S4Vectors_0.26.0            BiocParallel_1.22.0\n[17] BiocGenerics_0.34.0         dada2_1.16.0\n[19] Rcpp_1.0.4.6\n\nloaded via a namespace (and not attached):\n [1] plyr_1.8.6             RColorBrewer_1.1-2     pillar_1.4.4\n [4] compiler_4.0.0         bitops_1.0-6           tools_4.0.0\n [7] zlibbioc_1.34.0        lifecycle_0.2.0        tibble_3.0.1\n[10] gtable_0.3.0           lattice_0.20-41        png_0.1-7\n[13] pkgconfig_2.0.3        rlang_0.4.6            Matrix_1.2-18\n[16] GenomeInfoDbData_1.2.3 withr_2.2.0            stringr_1.4.0\n[19] hwriter_1.3.2          vctrs_0.3.0            glue_1.4.1\n[22] R6_2.4.1               jpeg_0.1-8.1           latticeExtra_0.6-29\n[25] reshape2_1.4.4         magrittr_1.5           scales_1.1.1\n[28] ellipsis_0.3.1         colorspace_1.4-1       stringi_1.4.6\n[31] RCurl_1.98-1.2         RcppParallel_5.0.1     munsell_0.5.0\n[34] crayon_1.3.4\n\ndevtools::session_info()\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.0.0 (2020-04-24)\n os       CentOS Linux 7 (Core)\n system   x86_64, linux-gnu\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       America/New_York\n date     2020-06-17\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package              * version  date       lib source\n assertthat             0.2.1    2019-03-21 [1] CRAN (R 4.0.0)\n backports              1.1.7    2020-05-13 [1] CRAN (R 4.0.0)\n Biobase              * 2.48.0   2020-04-27 [1] Bioconductor\n BiocGenerics         * 0.34.0   2020-04-27 [1] Bioconductor\n BiocParallel         * 1.22.0   2020-04-27 [1] Bioconductor\n Biostrings           * 2.56.0   2020-04-27 [1] Bioconductor\n bitops                 1.0-6    2013-08-17 [1] CRAN (R 4.0.0)\n callr                  3.4.3    2020-03-28 [1] CRAN (R 4.0.0)\n cli                    2.0.2    2020-02-28 [1] CRAN (R 4.0.0)\n colorspace             1.4-1    2019-03-18 [1] CRAN (R 4.0.0)\n crayon                 1.3.4    2017-09-16 [1] CRAN (R 4.0.0)\n dada2                * 1.16.0   2020-04-27 [1] Bioconductor\n DelayedArray         * 0.14.0   2020-04-27 [1] Bioconductor\n desc                   1.2.0    2018-05-01 [1] CRAN (R 4.0.0)\n devtools               2.3.0    2020-04-10 [1] CRAN (R 4.0.0)\n digest                 0.6.25   2020-02-23 [1] CRAN (R 4.0.0)\n ellipsis               0.3.1    2020-05-15 [1] CRAN (R 4.0.0)\n fansi                  0.4.1    2020-01-08 [1] CRAN (R 4.0.0)\n fs                     1.4.1    2020-04-04 [1] CRAN (R 4.0.0)\n GenomeInfoDb         * 1.24.0   2020-04-27 [1] Bioconductor\n GenomeInfoDbData       1.2.3    2020-05-22 [1] Bioconductor\n GenomicAlignments    * 1.24.0   2020-04-27 [1] Bioconductor\n GenomicRanges        * 1.40.0   2020-04-27 [1] Bioconductor\n ggplot2              * 3.3.0    2020-03-05 [1] CRAN (R 4.0.0)\n glue                   1.4.1    2020-05-13 [1] CRAN (R 4.0.0)\n gridExtra            * 2.3      2017-09-09 [1] CRAN (R 4.0.0)\n gtable                 0.3.0    2019-03-25 [1] CRAN (R 4.0.0)\n hwriter                1.3.2    2014-09-10 [1] CRAN (R 4.0.0)\n IRanges              * 2.22.1   2020-04-28 [1] Bioconductor\n jpeg                   0.1-8.1  2019-10-24 [1] CRAN (R 4.0.0)\n lattice                0.20-41  2020-04-02 [1] CRAN (R 4.0.0)\n latticeExtra           0.6-29   2019-12-19 [1] CRAN (R 4.0.0)\n lifecycle              0.2.0    2020-03-06 [1] CRAN (R 4.0.0)\n magrittr               1.5      2014-11-22 [1] CRAN (R 4.0.0)\n Matrix                 1.2-18   2019-11-27 [1] CRAN (R 4.0.0)\n matrixStats          * 0.56.0   2020-03-13 [1] CRAN (R 4.0.0)\n memoise                1.1.0    2017-04-21 [1] CRAN (R 4.0.0)\n munsell                0.5.0    2018-06-12 [1] CRAN (R 4.0.0)\n pillar                 1.4.4    2020-05-05 [1] CRAN (R 4.0.0)\n pkgbuild               1.0.8    2020-05-07 [1] CRAN (R 4.0.0)\n pkgconfig              2.0.3    2019-09-22 [1] CRAN (R 4.0.0)\n pkgload                1.0.2    2018-10-29 [1] CRAN (R 4.0.0)\n plyr                   1.8.6    2020-03-03 [1] CRAN (R 4.0.0)\n png                    0.1-7    2013-12-03 [1] CRAN (R 4.0.0)\n prettyunits            1.1.1    2020-01-24 [1] CRAN (R 4.0.0)\n processx               3.4.2    2020-02-09 [1] CRAN (R 4.0.0)\n ps                     1.3.3    2020-05-08 [1] CRAN (R 4.0.0)\n R6                     2.4.1    2019-11-12 [1] CRAN (R 4.0.0)\n RColorBrewer           1.1-2    2014-12-07 [1] CRAN (R 4.0.0)\n Rcpp                 * 1.0.4.6  2020-04-09 [1] CRAN (R 4.0.0)\n RcppParallel           5.0.1    2020-05-06 [1] CRAN (R 4.0.0)\n RCurl                  1.98-1.2 2020-04-18 [1] CRAN (R 4.0.0)\n remotes                2.1.1    2020-02-15 [1] CRAN (R 4.0.0)\n reshape2               1.4.4    2020-04-09 [1] CRAN (R 4.0.0)\n rlang                  0.4.6    2020-05-02 [1] CRAN (R 4.0.0)\n rprojroot              1.3-2    2018-01-03 [1] CRAN (R 4.0.0)\n Rsamtools            * 2.4.0    2020-04-27 [1] Bioconductor\n S4Vectors            * 0.26.0   2020-04-27 [1] Bioconductor\n scales                 1.1.1    2020-05-11 [1] CRAN (R 4.0.0)\n sessioninfo            1.1.1    2018-11-05 [1] CRAN (R 4.0.0)\n ShortRead            * 1.46.0   2020-04-27 [1] Bioconductor\n stringi                1.4.6    2020-02-17 [1] CRAN (R 4.0.0)\n stringr                1.4.0    2019-02-10 [1] CRAN (R 4.0.0)\n SummarizedExperiment * 1.18.1   2020-04-30 [1] Bioconductor\n testthat               2.3.2    2020-03-02 [1] CRAN (R 4.0.0)\n tibble                 3.0.1    2020-04-20 [1] CRAN (R 4.0.0)\n usethis                1.6.1    2020-04-29 [1] CRAN (R 4.0.0)\n vctrs                  0.3.0    2020-05-11 [1] CRAN (R 4.0.0)\n withr                  2.2.0    2020-04-20 [1] CRAN (R 4.0.0)\n XVector              * 0.28.0   2020-04-27 [1] Bioconductor\n zlibbioc               1.34.0   2020-04-27 [1] Bioconductor\n\nITS Data\n\n\n\n\n\n\n\n\n\n\nOverview\nSequence Files & Samples\nWe sequenced a total of 15 samples collected from 10 different plots at a single depth in each plot.\n\n\n\n(ITS) Table 1 | Sample data & associated sequencing information.\n\n\n Download data as csv file\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Sample_ID\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"Plot\":[\"P01\",\"P01\",\"P02\",\"P03\",\"P03\",\"P04\",\"P05\",\"P05\",\"P06\",\"P07\",\"P07\",\"P08\",\"P09\",\"P09\",\"P10\"],\"Treatment\":[\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\",\"Control\"],\"Temp\":[3,8,0,3,8,0,3,8,0,3,8,0,3,8,0],\"Depth\":[\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\"],\"Pair\":[\"A\",\"A\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"C\",\"D\",\"D\",\"D\",\"E\",\"E\",\"E\"],\"raw_reads\":[50894,70734,74581,60006,31174,88732,809,81908,67419,70123,15435,60799,55927,1418,96531],\"Fastq_ID_Forward\":[\"P1_S8_L001_R1_001_ITS.fastq.gz\",\"P1-8C_S14_L001_R1_001_ITS.fastq.gz\",\"P2_S9_L001_R1_001_ITS.fastq.gz\",\"P3_S6_L001_R1_001_ITS.fastq.gz\",\"P3-8C_S11_L001_R1_001_ITS.fastq.gz\",\"P4_S7_L001_R1_001_ITS.fastq.gz\",\"P5_S1_L001_R1_001_ITS.fastq.gz\",\"P5-8C_S26_L001_R1_001_ITS.fastq.gz\",\"P6_S2_L001_R1_001_ITS.fastq.gz\",\"P7_S3_L001_R1_001_ITS.fastq.gz\",\"P7-8C_S64_L001_R1_001_ITS.fastq.gz\",\"P8_S4_L001_R1_001_ITS.fastq.gz\",\"P9_S5_L001_R1_001_ITS.fastq.gz\",\"P9-8C_S10_L001_R1_001_ITS.fastq.gz\",\"P10_S15_L001_R1_001_ITS.fastq.gz\"],\"Fastq_ID_Reverse\":[\"P1_S8_L001_R2_001_ITS.fastq.gz\",\"P1-8C_S14_L001_R2_001_ITS.fastq.gz\",\"P2_S9_L001_R2_001_ITS.fastq.gz\",\"P3_S6_L001_R2_001_ITS.fastq.gz\",\"P3-8C_S11_L001_R2_001_ITS.fastq.gz\",\"P4_S7_L001_R2_001_ITS.fastq.gz\",\"P5_S1_L001_R2_001_ITS.fastq.gz\",\"P5-8C_S26_L001_R2_001_ITS.fastq.gz\",\"P6_S2_L001_R2_001_ITS.fastq.gz\",\"P7_S3_L001_R2_001_ITS.fastq.gz\",\"P7-8C_S64_L001_R2_001_ITS.fastq.gz\",\"P8_S4_L001_R2_001_ITS.fastq.gz\",\"P9_S5_L001_R2_001_ITS.fastq.gz\",\"P9-8C_S10_L001_R2_001_ITS.fastq.gz\",\"P10_S15_L001_R2_001_ITS.fastq.gz\"],\"I7_Index_ID\":[\"SC701R\",\"SC702R\",\"SC702R\",\"SC701R\",\"SC702R\",\"SC701R\",\"SC701R\",\"SC704R\",\"SC701R\",\"SC701R\",\"SC708R\",\"SC701R\",\"SC701R\",\"SC702R\",\"SC702R\"],\"index\":[\"cagtaggt\",\"atagcgct\",\"atagcgct\",\"cagtaggt\",\"atagcgct\",\"cagtaggt\",\"cagtaggt\",\"tcctcatg\",\"cagtaggt\",\"cagtaggt\",\"agcatacc\",\"cagtaggt\",\"cagtaggt\",\"atagcgct\",\"atagcgct\"],\"I5_Index_ID\":[\"SC508\",\"SC506\",\"SC501\",\"SC506\",\"SC503\",\"SC507\",\"SC501\",\"SC502\",\"SC502\",\"SC503\",\"SC508\",\"SC504\",\"SC505\",\"SC502\",\"SC507\"],\"index2\":[\"TAGTGTAG\",\"GACACTGA\",\"ACGACGTG\",\"GACACTGA\",\"CGTCGCTA\",\"TGCGTACG\",\"ACGACGTG\",\"ATATACAC\",\"ATATACAC\",\"CGTCGCTA\",\"TAGTGTAG\",\"CTAGAGCT\",\"GCTCTAGT\",\"ATATACAC\",\"TGCGTACG\"]},\"columns\":[{\"accessor\":\"Sample_ID\",\"name\":\"Sample ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"header\":\"Sample ID\",\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"Total reads\",\"minWidth\":150,\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"Plot\",\"name\":\"Plot\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01\",\"P01\",\"P02\",\"P03\",\"P03\",\"P04\",\"P05\",\"P05\",\"P06\",\"P07\",\"P07\",\"P08\",\"P09\",\"P09\",\"P10\"],\"header\":\"Plot\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Treatment\",\"name\":\"Treatment\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\",\"Control\"],\"header\":\"Treatment\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Temp\",\"name\":\"Temp\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\"],\"header\":\"Temp\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Depth\",\"name\":\"Depth\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\"],\"header\":\"Depth\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Pair\",\"name\":\"Pair\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"A\",\"A\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"C\",\"D\",\"D\",\"D\",\"E\",\"E\",\"E\"],\"header\":\"Pair\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"raw_reads\",\"name\":\"raw_reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"50894\",\"70734\",\"74581\",\"60006\",\"31174\",\"88732\",\"809\",\"81908\",\"67419\",\"70123\",\"15435\",\"60799\",\"55927\",\"1418\",\"96531\"],\"header\":\"raw reads\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"826490\"},{\"accessor\":\"Fastq_ID_Forward\",\"name\":\"Fastq_ID_Forward\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P1_S8_L001_R1_001_ITS.fastq.gz\",\"P1-8C_S14_L001_R1_001_ITS.fastq.gz\",\"P2_S9_L001_R1_001_ITS.fastq.gz\",\"P3_S6_L001_R1_001_ITS.fastq.gz\",\"P3-8C_S11_L001_R1_001_ITS.fastq.gz\",\"P4_S7_L001_R1_001_ITS.fastq.gz\",\"P5_S1_L001_R1_001_ITS.fastq.gz\",\"P5-8C_S26_L001_R1_001_ITS.fastq.gz\",\"P6_S2_L001_R1_001_ITS.fastq.gz\",\"P7_S3_L001_R1_001_ITS.fastq.gz\",\"P7-8C_S64_L001_R1_001_ITS.fastq.gz\",\"P8_S4_L001_R1_001_ITS.fastq.gz\",\"P9_S5_L001_R1_001_ITS.fastq.gz\",\"P9-8C_S10_L001_R1_001_ITS.fastq.gz\",\"P10_S15_L001_R1_001_ITS.fastq.gz\"],\"header\":\"Fastq ID Forward\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Fastq_ID_Reverse\",\"name\":\"Fastq_ID_Reverse\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P1_S8_L001_R2_001_ITS.fastq.gz\",\"P1-8C_S14_L001_R2_001_ITS.fastq.gz\",\"P2_S9_L001_R2_001_ITS.fastq.gz\",\"P3_S6_L001_R2_001_ITS.fastq.gz\",\"P3-8C_S11_L001_R2_001_ITS.fastq.gz\",\"P4_S7_L001_R2_001_ITS.fastq.gz\",\"P5_S1_L001_R2_001_ITS.fastq.gz\",\"P5-8C_S26_L001_R2_001_ITS.fastq.gz\",\"P6_S2_L001_R2_001_ITS.fastq.gz\",\"P7_S3_L001_R2_001_ITS.fastq.gz\",\"P7-8C_S64_L001_R2_001_ITS.fastq.gz\",\"P8_S4_L001_R2_001_ITS.fastq.gz\",\"P9_S5_L001_R2_001_ITS.fastq.gz\",\"P9-8C_S10_L001_R2_001_ITS.fastq.gz\",\"P10_S15_L001_R2_001_ITS.fastq.gz\"],\"header\":\"Fastq ID Reverse\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"I7_Index_ID\",\"name\":\"I7_Index_ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"SC701R\",\"SC702R\",\"SC702R\",\"SC701R\",\"SC702R\",\"SC701R\",\"SC701R\",\"SC704R\",\"SC701R\",\"SC701R\",\"SC708R\",\"SC701R\",\"SC701R\",\"SC702R\",\"SC702R\"],\"header\":\"I7 Index ID\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"index\",\"name\":\"index\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"cagtaggt\",\"atagcgct\",\"atagcgct\",\"cagtaggt\",\"atagcgct\",\"cagtaggt\",\"cagtaggt\",\"tcctcatg\",\"cagtaggt\",\"cagtaggt\",\"agcatacc\",\"cagtaggt\",\"cagtaggt\",\"atagcgct\",\"atagcgct\"],\"header\":\"index\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"I5_Index_ID\",\"name\":\"I5_Index_ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"SC508\",\"SC506\",\"SC501\",\"SC506\",\"SC503\",\"SC507\",\"SC501\",\"SC502\",\"SC502\",\"SC503\",\"SC508\",\"SC504\",\"SC505\",\"SC502\",\"SC507\"],\"header\":\"I5 Index ID\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"index2\",\"name\":\"index2\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"TAGTGTAG\",\"GACACTGA\",\"ACGACGTG\",\"GACACTGA\",\"CGTCGCTA\",\"TGCGTACG\",\"ACGACGTG\",\"ATATACAC\",\"ATATACAC\",\"CGTCGCTA\",\"TAGTGTAG\",\"CTAGAGCT\",\"GCTCTAGT\",\"ATATACAC\",\"TGCGTACG\"],\"header\":\"index2\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,15],\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"nowrap\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"692464a2864e6551a524023856fa71f1\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nWorkflow\nOur workflow is pretty much ripped from the DADA2 ITS Workflow (1.8) on the DADA2 website. That webpage contains thorough explanations for each step so we will not repeat most of that here. For more details, check out the post. The workflow consists of the following steps:\nStep\nCommand\nWhat we’re doing\n1\nmultiple\nprepare input file names & paths\n2\nmultiple\nDefine primers (all orientations)\n3\ncutadapt\nRemove primers\n4\nfilterAndTrim()\nassess quality & filter reads\n5\nlearnErrors()\ngenerate an error model for the data\n6\nderepFastq\ndereplicate sequences\n7\ndada()\ninfer ASVs on both forward & reverse reads independently\n8\nmergePairs()\nmerge forward & reverse reads to further refine ASVs\n9\nmakeSequenceTable()\ngenerate a count table\n10\nremoveBimeraDenovo()\nscreen for & remove chimeras\n11\n\ntrack reads through workflow\n12\nassignTaxonomy()\nassign taxonomy & finish workflow\n13\nsave.image()\nsave an image of seqtab & taxtab for next part of workflow\n1. Set Working Environment\nNext, we need to setup the working environment by renaming the fastq files and defining a path for the working directory.\nRename samples\nTo make the parsing easier, we will eliminate the lane and well number from each sample. If you do not wish to do that you will need to adjust the code accordingly. I am positive there are more elegant ways of doing this.\n\nCAUTION. You should check that this code works on a few backup files before proceeding.\n\n\nsetwd(\"RAW\")\norig_fastq <- list.files(pattern = \"*.fastq.gz\")\nnewname_fastq <- gsub(\"_S.*_L001\", \"\", orig_fastq)\nnewname_fastq <- gsub(\"_001\", \"\", newname_fastq)\nfile.rename(orig_fastq, newname_fastq)\nsetwd(\"../\")\n\n\npath <- \"RAW\"\nhead(list.files(path))\n\n\n[1] \"P1_R1.fastq.gz\"    \"P1_R2.fastq.gz\"    \"P1-8C_R1.fastq.gz\"\n[4] \"P1-8C_R2.fastq.gz\" \"P10_R1.fastq.gz\"   \"P10_R2.fastq.gz\"  \n\nThen, we generate matched lists of the forward and reverse read files. We also parse out the sample name.\n\nfnFs <- sort(list.files(path, pattern = \"_R1.fastq.gz\", full.names = TRUE))\nfnRs <- sort(list.files(path, pattern = \"_R2.fastq.gz\", full.names = TRUE))\n\n2. Define Primers\nBefore we start the DADA2 workflow we need to run catadapt (Martin 2011) on all fastq.gz files to trim the primers. For this part of the study we used the primer pair ITS1f (CTTGGTCATTTAGAGGAAGTAA) (Gardes and Bruns 1993) and ITS2 (GCTGCGTTCTTCATCGATGC) (White et al. 1990) which should yield variable amplicon lengths between 100 to 400 bp. What we are looking for is potential read-through scenarios that are possible when sequencing the length variable ITS region as described in the DADA2 ITS Workflow (1.8). Please refer to this document for a complete explanation.\nFirst we define the primers.\n\nFWD <- \"CTTGGTCATTTAGAGGAAGTAA\"\nREV <- \"GCTGCGTTCTTCATCGATGC\"\n\nNext, we check the presence and orientation of these primers in the data. To do this we will create all orientations of the input primer sequences. In other words the Forward, Complement, Reverse, and Reverse Complement variations.\n\nallOrients <- function(primer) {\n    require(Biostrings)\n    dna <- DNAString(primer)\n    orients <- c(Forward = dna,\n                 Complement = complement(dna),\n                 Reverse = reverse(dna),\n                 RevComp = reverseComplement(dna))\n    return(sapply(orients, toString))\n}\nFWD.orients <- allOrients(FWD)\nREV.orients <- allOrients(REV)\nFWD.orients\nREV.orients\n\n                 Forward               Complement                  Reverse\n\"CTTGGTCATTTAGAGGAAGTAA\" \"GAACCAGTAAATCTCCTTCATT\" \"AATGAAGGAGATTTACTGGTTC\"\n                 RevComp\n\"TTACTTCCTCTAAATGACCAAG\"\n               Forward             Complement                Reverse\n\"GCTGCGTTCTTCATCGATGC\" \"CGACGCAAGAAGTAGCTACG\" \"CGTAGCTACTTCTTGCGTCG\"\n               RevComp\n\"GCATCGATGAAGAACGCAGC\"\nNow we do a little pre-filter step to eliminate ambiguous bases (Ns) because Ns make mapping of short primer sequences difficult. This step removes any reads with Ns. Again, set some files paths, this time for the filtered reads.\n\nfnFs.filtN <- file.path(path, \"filtN\", basename(fnFs))\nfnRs.filtN <- file.path(path, \"filtN\", basename(fnRs))\nfilterAndTrim(fnFs, fnFs.filtN, fnRs, fnRs.filtN,\n              maxN = 0, multithread = TRUE)\n\nSweet. Time to assess the number of times a primer (and all possible primer orientation) appear in the forward and reverse reads. According to the workflow, counting the primers on one set of paired end fastq files is sufficient to see if there is a problem. This assumes that all the files were created using the same library prep. Basically for both primers, we will search for all four orientations in both forward and reverse reads\n\nsampnum <- 1\nprimerHits <- function(primer, fn) {\n    # Counts number of reads in which the primer is found\n    nhits <- vcountPattern(primer, sread(readFastq(fn)), fixed = FALSE)\n    return(sum(nhits > 0))\n}\n\nForward primers\n\nrbind(FWD.ForwardReads = sapply(FWD.orients, primerHits,\n                                fn = fnFs.filtN[[sampnum]]),\n    FWD.ReverseReads = sapply(FWD.orients, primerHits,\n                              fn = fnRs.filtN[[sampnum]]))\n\n                 Forward Complement Reverse RevComp\nFWD.ForwardReads   48467          0       0       0\nFWD.ReverseReads       0          0       0    5078\nReverse primers\n\nrbind(REV.ForwardReads = sapply(REV.orients, primerHits,\n                                fn = fnFs.filtN[[sampnum]]),\n       REV.ReverseReads = sapply(REV.orients, primerHits,\n                                 fn = fnRs.filtN[[sampnum]]))\n\n                 Forward Complement Reverse RevComp\nREV.ForwardReads       0          0       0    6237\nREV.ReverseReads   43902          0       0       0\n\n\n\nWhat does this table mean? I wondered the same thing. Let’s break it down. Sample P1 had 50,894 sequences after the original filtering described earlier. The code searched the forward and reverse fastq files for all 8 primers. If we look at the two outputs, we see the forward primer is found in the forward reads in its forward orientation but also in some reverse reads in its reverse-complement orientation. The reverse primer is found in the reverse reads in its forward orientation but also in some forward reads in its reverse-complement orientation. This is due to read-through when the ITS region is short.\n3. Remove Primers\nNow we can run catadapt (Martin 2011) to remove the primers from the fastq sequences. A little setup first. If this command executes successfully it means R has found cutadapt.\n\ncutadapt <- \"/PATH/to/cutadapt\"\nsystem2(cutadapt, args = \"--version\") # Run shell commands from R\n\n2.8\nWe set paths and trim the forward primer and the reverse-complement of the reverse primer off of R1 (forward reads) and trim the reverse primer and the reverse-complement of the forward primer off of R2 (reverse reads).\n\npath.cut <- file.path(path, \"cutadapt\")\nif(!dir.exists(path.cut)) dir.create(path.cut)\nfnFs.cut <- file.path(path.cut, basename(fnFs))\nfnRs.cut <- file.path(path.cut, basename(fnRs))\n\nFWD.RC <- dada2:::rc(FWD)\nREV.RC <- dada2:::rc(REV)\n\nR1.flags <- paste(\"-g\", FWD, \"-a\", REV.RC)\nR2.flags <- paste(\"-G\", REV, \"-A\", FWD.RC)\n\nfor(i in seq_along(fnFs)) {system2(cutadapt,\n                                   args = c(R1.flags, R2.flags,\n                                            \"-m\", 20, \"-n\", 2,\n                                            \"-o\", fnFs.cut[i],\n                                            \"-p\", fnRs.cut[i],\n                                            fnFs.filtN[i], fnRs.filtN[i]))}\n\nThis is cutadapt 2.8 with Python 3.7.6\nCommand line parameters: -g CTTGGTCATTTAGAGGAAGTAA -a GCATCGATGAAGAACGCAGC \\\n                         -G GCTGCGTTCTTCATCGATGC -A TTACTTCCTCTAAATGACCAAG \\\n                         -m 20 -n 2 \\\n                         -o RAW/cutadapt/P1_R1.fastq.gz \\\n                         -p RAW/cutadapt/P1_R2.fastq.gz RAW/filtN/P1_R1.fastq.gz RAW/filtN/P1_R2.fastq.gz\nNote. If the code above removes all of the base pairs in a sequence, you will get downstream errors unless you set the -m flag. This flag sets the minimum length and reads shorter than this will be discarded. Without this flag, reads of length 0 will be kept and cause issues. Also, a lot of output will be written to the screen by cutadapt!\nWe can now count the number of primers in the sequences from the output of cutadapt.\n\nrbind(\n  FWD.ForwardReads = sapply(FWD.orients, primerHits, fn = fnFs.cut[[sampnum]]),\n  FWD.ReverseReads = sapply(FWD.orients, primerHits, fn = fnRs.cut[[sampnum]]),\n  REV.ForwardReads = sapply(REV.orients, primerHits, fn = fnFs.cut[[sampnum]]),\n  REV.ReverseReads = sapply(REV.orients, primerHits, fn = fnRs.cut[[sampnum]]))\n\n                 Forward Complement Reverse RevComp\nFWD.ForwardReads       0          0       0       0\nFWD.ReverseReads       0          0       0       0\nREV.ForwardReads       0          0       0       0\nREV.ReverseReads       0          0       0       0\nBasically, primers are no longer detected in the cutadapted reads. Now, for each sample, we can take a look at how the pre-filtering step and primer removal affected the total number of raw reads.\n\n\n\n\n\n\n(ITS) Table 2 | Total reads per sample after prefiltering and primer removal (using cutadapt).\n\n\n Download data as csv file\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Sample_ID\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"raw_reads\":[50894,70734,74581,60006,31174,88732,809,81908,67419,70123,15435,60799,55927,1418,96531],\"pre_filt_reads\":[50882,70649,74557,59953,31029,88694,797,81671,67399,70073,15417,60604,55764,1383,96492],\"cutadapt_reads\":[50419,68075,73994,58146,25782,87532,412,74669,66656,68474,14955,54534,51382,141,95256],\"per_reads_kept\":[0.991,0.962,0.992,0.969,0.827,0.986,0.509,0.912,0.989,0.976,0.969,0.897,0.919,0.099,0.987]},\"columns\":[{\"accessor\":\"Sample_ID\",\"name\":\"Sample ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"header\":\"Sample ID\",\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"Total reads\",\"minWidth\":150,\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"raw_reads\",\"name\":\"raw_reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"50894\",\"70734\",\"74581\",\"60006\",\"31174\",\"88732\",\"809\",\"81908\",\"67419\",\"70123\",\"15435\",\"60799\",\"55927\",\"1418\",\"96531\"],\"header\":\"raw reads\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"826490\"},{\"accessor\":\"pre_filt_reads\",\"name\":\"pre_filt_reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"50882\",\"70649\",\"74557\",\"59953\",\"31029\",\"88694\",\"797\",\"81671\",\"67399\",\"70073\",\"15417\",\"60604\",\"55764\",\"1383\",\"96492\"],\"header\":\"pre filt reads\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"825364\"},{\"accessor\":\"cutadapt_reads\",\"name\":\"cutadapt_reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"50419\",\"68075\",\"73994\",\"58146\",\"25782\",\"87532\",\"412\",\"74669\",\"66656\",\"68474\",\"14955\",\"54534\",\"51382\",\"141\",\"95256\"],\"header\":\"cutadapt reads\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"790427\"},{\"accessor\":\"per_reads_kept\",\"name\":\"per_reads_kept\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.991\",\"0.962\",\"0.992\",\"0.969\",\"0.827\",\"0.986\",\"0.509\",\"0.912\",\"0.989\",\"0.976\",\"0.969\",\"0.897\",\"0.919\",\"0.099\",\"0.987\"],\"header\":\"per reads kept\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,15],\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"nowrap\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"0da35be3575d2a3e53c55f657133b005\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\n4. Quality Assessment & Filtering\nWe need the forward and reverse fastq file names and the sample names.\n\ncutFs <- sort(list.files(path.cut, pattern = \"_R1.fastq.gz\",\n                         full.names = TRUE))\ncutRs <- sort(list.files(path.cut, pattern = \"_R2.fastq.gz\",\n                         full.names = TRUE))\n\nget.sample.name <- function(fname) strsplit(basename(fname), \"_\")[[1]][1]\nsample.names <- unname(sapply(cutFs, get.sample.name))\nhead(sample.names)\n\n\n[1] \"P1\"    \"P1-8C\" \"P10\"   \"P2\"    \"P3\"    \"P3-8C\"\n\nQuality plots\nThen we inspect read quality.\n\np1 <- plotQualityProfile(cutFs[1:15], aggregate = TRUE)\np2 <- plotQualityProfile(cutRs[1:15], aggregate = TRUE)\n\np3 <- grid.arrange(p1, p2, nrow = 1)\nggsave(\"plot_qscores_2018.png\", p3, width = 7, height = 3)\n\n\n\n\n(ITS) Figure 1 | Aggregated quality score plots for forward (left) & reverse (right) reads before filtering.\nFiltering\n\nfiltFs <- file.path(path.cut, \"filtered\", basename(cutFs))\nfiltRs <- file.path(path.cut, \"filtered\", basename(cutRs))\n\nWe use a minLen value to get rid of very short length sequences.\n\nout <- filterAndTrim(cutFs, filtFs, cutRs, filtRs,\n                     maxN = 0, maxEE = c(2, 2), truncQ = 2,\n                     minLen = 50, rm.phix = TRUE,\n                     compress = TRUE, multithread = TRUE)\nout\n\n\nThese parameters should be set based on the anticipated length of the amplicon and the read quality.\nAnd here is a table of how the filtering step affected the number of reads in each sample.\n\n\n\n(ITS) Table 3 | Total reads per sample after filtering.\n\n\n Download data as csv file\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Sample_ID\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"reads_in\":[50419,68075,73994,58146,25782,87532,412,74669,66656,68474,14955,54534,51382,141,95256],\"reads_out\":[35999,48230,58956,42563,17548,68259,308,48518,51055,43471,9488,41563,35722,85,80877],\"per_reads_kept\":[0.714,0.708,0.797,0.732,0.681,0.78,0.748,0.65,0.766,0.635,0.634,0.762,0.695,0.603,0.849]},\"columns\":[{\"accessor\":\"Sample_ID\",\"name\":\"Sample ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"header\":\"Sample ID\",\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"Total reads\",\"minWidth\":150,\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"reads_in\",\"name\":\"reads_in\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"50419\",\"68075\",\"73994\",\"58146\",\"25782\",\"87532\",\"412\",\"74669\",\"66656\",\"68474\",\"14955\",\"54534\",\"51382\",\"141\",\"95256\"],\"header\":\"reads in\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"790427\"},{\"accessor\":\"reads_out\",\"name\":\"reads_out\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"35999\",\"48230\",\"58956\",\"42563\",\"17548\",\"68259\",\"308\",\"48518\",\"51055\",\"43471\",\"9488\",\"41563\",\"35722\",\"85\",\"80877\"],\"header\":\"reads out\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"582642\"},{\"accessor\":\"per_reads_kept\",\"name\":\"per_reads_kept\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.714\",\"0.708\",\"0.797\",\"0.732\",\"0.681\",\"0.78\",\"0.748\",\"0.65\",\"0.766\",\"0.635\",\"0.634\",\"0.762\",\"0.695\",\"0.603\",\"0.849\"],\"header\":\"per reads kept\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,15],\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"nowrap\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"2f16225aef9ee575b20e864ad14abadb\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\n5. Learn Error Rates\nTime to assess the error rate of the data. The rest of the workflow is very similar to the 16S workflows presented previously. So I will basically stop talking.\nForward Reads\n\nerrF <- learnErrors(filtFs, multithread = TRUE)\n\n108788735 total bases in 495784 reads from 11 samples will be used for learning the error rates.\n109358094 total bases in 495784 reads from 11 samples will be used for learning the error rates.\n\nplotErrors(errF, nominalQ = TRUE)\n\n\n\n\n\n\n\n(ITS) Figure 3 | Forward reads: Observed frequency of each transition (e.g., T -> G) as a function of the associated quality score.\nReverse Reads\n\nerrR <- learnErrors(filtRs, multithread = TRUE)\n\n109358094 total bases in 495784 reads from 11 samples will be used for learning the error rates.\n\nplotErrors(errR, nominalQ = TRUE)\n\n\n\n\n\n\n\n(ITS) Figure 4 | Reverse reads: Observed frequency of each transition (e.g., T -> G) as a function of the associated quality score.\n6. Dereplicate Reads\nForward Reads\n\nderepFs <- derepFastq(filtFs, verbose = TRUE)\nnames(derepFs) <- sample.names\n\n\n\nDetailed results of derep forward reads\n\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P1_R1.fastq.gz\nEncountered 7277 unique sequences from 35999 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P1-8C_R1.fastq.gz\nEncountered 11366 unique sequences from 48230 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P10_R1.fastq.gz\nEncountered 11714 unique sequences from 80877 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P2_R1.fastq.gz\nEncountered 13088 unique sequences from 58956 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P3_R1.fastq.gz\nEncountered 10180 unique sequences from 42563 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P3-8C_R1.fastq.gz\nEncountered 4480 unique sequences from 17548 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P4_R1.fastq.gz\nEncountered 12259 unique sequences from 68259 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P5_R1.fastq.gz\nEncountered 160 unique sequences from 308 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P5-8C_R1.fastq.gz\nEncountered 10436 unique sequences from 48518 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P6_R1.fastq.gz\nEncountered 11230 unique sequences from 51055 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P7_R1.fastq.gz\nEncountered 10316 unique sequences from 43471 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P7-8C_R1.fastq.gz\nEncountered 2121 unique sequences from 9488 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P8_R1.fastq.gz\nEncountered 9236 unique sequences from 41563 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P9_R1.fastq.gz\nEncountered 9000 unique sequences from 35722 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P9-8C_R1.fastq.gz\nEncountered 42 unique sequences from 85 total sequences read.\n\n\nReverse Reads\n\nderepRs <- derepFastq(filtRs, verbose = TRUE)\nnames(derepRs) <- sample.names\n\n\n\nDetailed results of derep reverse reads\n\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P1_R2.fastq.gz\nEncountered 13081 unique sequences from 35999 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P1-8C_R2.fastq.gz\nEncountered 17965 unique sequences from 48230 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P10_R2.fastq.gz\nEncountered 18610 unique sequences from 80877 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P2_R2.fastq.gz\nEncountered 19600 unique sequences from 58956 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P3_R2.fastq.gz\nEncountered 16145 unique sequences from 42563 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P3-8C_R2.fastq.gz\nEncountered 7496 unique sequences from 17548 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P4_R2.fastq.gz\nEncountered 19933 unique sequences from 68259 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P5_R2.fastq.gz\nEncountered 199 unique sequences from 308 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P5-8C_R2.fastq.gz\nEncountered 18495 unique sequences from 48518 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P6_R2.fastq.gz\nEncountered 17216 unique sequences from 51055 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P7_R2.fastq.gz\nEncountered 17111 unique sequences from 43471 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P7-8C_R2.fastq.gz\nEncountered 3809 unique sequences from 9488 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P8_R2.fastq.gz\nEncountered 14140 unique sequences from 41563 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P9_R2.fastq.gz\nEncountered 14856 unique sequences from 35722 total sequences read.\nDereplicating sequence entries in Fastq file: RAW/cutadapt/filtered/P9-8C_R2.fastq.gz\nEncountered 45 unique sequences from 85 total sequences read.\n\n\n7. DADA2 & ASV Inference\nAt this point we are ready to apply the core sample inference algorithm (dada) to the filtered and trimmed sequence data. DADA2 offers three options for whether and how to pool samples for ASV inference.\nIf pool = TRUE, the algorithm will pool together all samples prior to sample inference.\nIf pool = FALSE, sample inference is performed on each sample individually.\nIf pool = \"pseudo\", the algorithm will perform pseudo-pooling between individually processed samples.\nWe tested all three methods through the full pipeline. Click the + to see the results of the test. For our final analysis, we chose pool = TRUE for this data set.\n\nShow/hide Results of dada pooling options\nHere are a few summary tables of results from the tests. Values are from the final sequence table prodcuced by each option.\n\n\n\n(ITS) Table 4 | Total number of reads, total number of ASVs, minimum and maximum ASVs, followed by the number of singletons, doubletons, etc. for pooling options.\n\n\n Download data as csv file\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\".rownames\":[\"no_reads\",\"no_asvs\",\"min_asv\",\"max_asv\",\"n_samp_1\",\"n_samp_2\",\"n_samp_3\",\"n_samp_4\",\"n_samp_5\",\"n_samp_6\",\"n_samp_7\",\"n_samp_8\",\"n_samp_9\",\"n_samp_10\",\"n_samp_11\",\"n_samp_12\",\"n_samp_13\",\"n_samp_14\",\"n_samp_15\"],\"unpooled\":[500415,4322,6,692,3186,598,239,123,48,45,23,22,16,3,4,7,4,3,1],\"psuedo\":[521309,4348,10,817,3176,401,250,172,118,82,42,32,26,11,11,15,7,3,2],\"pooled\":[491143,3357,14,1017,1247,711,443,289,204,123,102,86,49,32,24,15,23,7,2]},\"columns\":[{\"accessor\":\".rownames\",\"name\":\"\",\"type\":\"character\",\"sortable\":false,\"resizable\":true,\"filterable\":false,\"cell\":[\"no_reads\",\"no_asvs\",\"min_asv\",\"max_asv\",\"n_samp_1\",\"n_samp_2\",\"n_samp_3\",\"n_samp_4\",\"n_samp_5\",\"n_samp_6\",\"n_samp_7\",\"n_samp_8\",\"n_samp_9\",\"n_samp_10\",\"n_samp_11\",\"n_samp_12\",\"n_samp_13\",\"n_samp_14\",\"n_samp_15\"],\"header\":\"\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"isRowHeader\":true},{\"accessor\":\"unpooled\",\"name\":\"unpooled\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"500415\",\"4322\",\"6\",\"692\",\"3186\",\"598\",\"239\",\"123\",\"48\",\"45\",\"23\",\"22\",\"16\",\"3\",\"4\",\"7\",\"4\",\"3\",\"1\"],\"header\":\"unpooled\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"psuedo\",\"name\":\"psuedo\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"521309\",\"4348\",\"10\",\"817\",\"3176\",\"401\",\"250\",\"172\",\"118\",\"82\",\"42\",\"32\",\"26\",\"11\",\"11\",\"15\",\"7\",\"3\",\"2\"],\"header\":\"psuedo\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"pooled\",\"name\":\"pooled\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"491143\",\"3357\",\"14\",\"1017\",\"1247\",\"711\",\"443\",\"289\",\"204\",\"123\",\"102\",\"86\",\"49\",\"32\",\"24\",\"15\",\"23\",\"7\",\"2\"],\"header\":\"pooled\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,19],\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"nowrap\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"da5ca9b99308e0b8df8a1f926a6c9b57\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\n\n\n\n(ITS) Table 5 | Total number of reads and ASVs by sample for pooling options.\n\n\n Download data as csv file\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Sample_ID\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"unpooled_reads\":[29683,42959,51414,38437,14909,56662,226,41453,45755,37637,8953,38087,29184,75,64981],\"psuedo_reads\":[32793,43591,51894,38589,15045,57911,237,42395,45913,37946,8984,38297,29601,74,78039],\"pooled_reads\":[29794,41880,51144,38374,14188,56593,296,35600,45850,36063,9172,38371,29102,80,64636],\"unpooled_asv\":[439,607,692,538,282,641,29,535,650,615,119,546,589,6,561],\"psuedo_asv\":[575,655,817,624,307,771,49,548,745,708,145,607,653,10,642],\"pooled_asv\":[945,719,1011,765,349,1017,95,616,954,867,335,702,745,14,812]},\"columns\":[{\"accessor\":\"Sample_ID\",\"name\":\"Sample ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"header\":\"Sample ID\",\"minWidth\":150,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"unpooled_reads\",\"name\":\"unpooled_reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"29683\",\"42959\",\"51414\",\"38437\",\"14909\",\"56662\",\"226\",\"41453\",\"45755\",\"37637\",\"8953\",\"38087\",\"29184\",\"75\",\"64981\"],\"header\":\"unpooled reads\",\"minWidth\":150,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"psuedo_reads\",\"name\":\"psuedo_reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"32793\",\"43591\",\"51894\",\"38589\",\"15045\",\"57911\",\"237\",\"42395\",\"45913\",\"37946\",\"8984\",\"38297\",\"29601\",\"74\",\"78039\"],\"header\":\"psuedo reads\",\"minWidth\":150,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"pooled_reads\",\"name\":\"pooled_reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"29794\",\"41880\",\"51144\",\"38374\",\"14188\",\"56593\",\"296\",\"35600\",\"45850\",\"36063\",\"9172\",\"38371\",\"29102\",\"80\",\"64636\"],\"header\":\"pooled reads\",\"minWidth\":150,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"unpooled_asv\",\"name\":\"unpooled_asv\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"439\",\"607\",\"692\",\"538\",\"282\",\"641\",\"29\",\"535\",\"650\",\"615\",\"119\",\"546\",\"589\",\"6\",\"561\"],\"header\":\"unpooled asv\",\"minWidth\":150,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"psuedo_asv\",\"name\":\"psuedo_asv\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"575\",\"655\",\"817\",\"624\",\"307\",\"771\",\"49\",\"548\",\"745\",\"708\",\"145\",\"607\",\"653\",\"10\",\"642\"],\"header\":\"psuedo asv\",\"minWidth\":150,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"pooled_asv\",\"name\":\"pooled_asv\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"945\",\"719\",\"1011\",\"765\",\"349\",\"1017\",\"95\",\"616\",\"954\",\"867\",\"335\",\"702\",\"745\",\"14\",\"812\"],\"header\":\"pooled asv\",\"minWidth\":150,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,15],\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"nowrap\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"3070768176cc2b5b7639bf1a54040863\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nForward Reads\n\ndadaFs <- dada(derepFs, err = errF, pool = TRUE, multithread = TRUE)\n\n15 samples were pooled: 582642 reads in 102887 unique sequences.\n\ndadaFs[[sampnum]]\n\ndada-class: object describing DADA2 denoising results\n1175 sequence variants were inferred from 7277 input unique sequences.\nKey parameters: OMEGA_A = 1e-40, OMEGA_C = 1e-40, BAND_SIZE = 16\nReverse Reads\n\ndadaRs <- dada(derepRs, err = errR, pool = TRUE, multithread = TRUE)\n\n15 samples were pooled: 582642 reads in 174866 unique sequences.\n\ndadaRs[[sampnum]]\n\ndada-class: object describing DADA2 denoising results\n1116 sequence variants were inferred from 13081 input unique sequences.\nKey parameters: OMEGA_A = 1e-40, OMEGA_C = 1e-40, BAND_SIZE = 16\n\nsave.image(\"pre_merge_its_2018.rdata\")\n\n8. Merge Paired Reads\n\nmergers <- mergePairs(dadaFs, derepFs, dadaRs, derepRs, verbose=TRUE)\n\n\nDetailed results of merging reads\n\n29795 paired-reads (in 946 unique pairings) successfully merged out of 32193 (in 1177 pairings) input.\n41880 paired-reads (in 719 unique pairings) successfully merged out of 46715 (in 941 pairings) input.\n64805 paired-reads (in 815 unique pairings) successfully merged out of 66771 (in 1015 pairings) input.\nDuplicate sequences in merged output.\n51144 paired-reads (in 1011 unique pairings) successfully merged out of 57613 (in 1325 pairings) input.\n38442 paired-reads (in 767 unique pairings) successfully merged out of 41985 (in 994 pairings) input.\n14188 paired-reads (in 349 unique pairings) successfully merged out of 16981 (in 452 pairings) input.\n56594 paired-reads (in 1018 unique pairings) successfully merged out of 64411 (in 1306 pairings) input.\n296 paired-reads (in 95 unique pairings) successfully merged out of 301 (in 100 pairings) input.\n35713 paired-reads (in 619 unique pairings) successfully merged out of 41006 (in 786 pairings) input.\n45851 paired-reads (in 955 unique pairings) successfully merged out of 50174 (in 1240 pairings) input.\n36121 paired-reads (in 870 unique pairings) successfully merged out of 41541 (in 1135 pairings) input.\nDuplicate sequences in merged output.\n9172 paired-reads (in 335 unique pairings) successfully merged out of 9403 (in 402 pairings) input.\n38392 paired-reads (in 704 unique pairings) successfully merged out of 40897 (in 886 pairings) input.\n29155 paired-reads (in 748 unique pairings) successfully merged out of 34979 (in 990 pairings) input.\nDuplicate sequences in merged output.\n80 paired-reads (in 14 unique pairings) successfully merged out of 82 (in 16 pairings) input.\n\n\n\n\n\n9. Construct Sequence Table\n\nseqtabF <- makeSequenceTable(mergers)\ndim(seqtabF)\n\n\n[1]   15 3364\n\n\ntable(nchar(getSequences(seqtabF)))\n\n130 131 132 133 136 139 140 141 143 144 146 147 148 149 150 151 152 153 154 155 \n  2   2   1   1   1   1   1   3   2   1   3   5   5   4   5   5   3   2   5   4 \n156 159 160 161 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 \n  1   2   1   1   2   2   4   9   2   1   2   5   5   5   8   9   2   5  10  13 \n179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 \n 13  14  11  14  12  15  19  12  12  13   9  22  11  11  12  15  17  13  10  11 \n199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 \n 22  16  10  11  13  17  10   8  10  12  13   7  20  18  24  30  39  38  20  19 \n219 220 221 222 223 224 225 226 228 229 230 231 232 233 234 235 236 237 238 239 \n 12  18  21  23  23  29  32  32   6  48   4  73  20  27  29  19  31  33  30  29 \n240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 \n 35  21  36  16  16  18  17  25  22  29  17  27  28  22  20  18  28  19  28  25 \n260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 \n 23  11  15  13  16  18  23  17  12  12  16  15  32  17  22  21  21  18  16  17 \n280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 \n 13  22  13  18  12  13  13  18  17  15  14  18   8  11  13  17  12  11  13   9 \n300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 \n 16  10   9   3   8  12   8  13  20  15   8  13  16  11  10   8  18  10   8  12 \n320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 \n  8   5  12  17  13   9   8   8   9  12  16  13  14  11  12  13  18  10  11  10 \n340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 \n  9  11   8   8   5  15   8  16  11  15   4   9   7   9  12  14   5  12  11   5 \n360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 \n  2   4  11   5   2  14   6  12   7   5   6   4   3   9   5  10   8   9   4   6 \n380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 \n  5   3   7   7   4   2   3   4   3   5   5   1   3   4   3   6   5   4   3   2 \n400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 \n 11   5   3   3   3   3   2   1   2   3   3   1   3   3   1   2   2   1   2   2 \n422 423 424 427 430 431 432 434 436 437 439 440 441 442 443 446 447 448 \n  2   3   2   1   3   2   4   2   1   2   4   3   1   2   1   1   2   1 \n\n\n\n\n\n\n\n(ITS) Figure 5 | Distribution of read length by total ASVs before removing extreme length variants.\nAs expected, a wide range of length variability in the the amplified ITS region.\n\nseqtab <- seqtabF[,nchar(colnames(seqtabF)) %in% seq(100,450)]\ndim(seqtab)\n\n\n[1]   15 3364\n\nAfter removing the extreme length variants, we have 3364, a reduction of 0 sequence variants.\n\ntable(nchar(getSequences(seqtab)))\n\n\n\n\n10. Remove Chimeras\n\nseqtab.nochim <- removeBimeraDenovo(seqtab,\n                                    method = \"consensus\",\n                                    multithread = TRUE, verbose = TRUE)\ndim(seqtab.nochim)\n\nIdentified 7 bimeras out of 3364 input sequences.\n\n[1]   15 3357\n\n\nsum(seqtab.nochim)/sum(seqtab.2)\n\n\n[1] 0.9990135\n\nChimera checking removed an additional 7 sequence variants however, when we account for the abundances of each variant, we see chimeras accounts for about 0.09865% of the merged sequence reads. Curious.\n\ntable(colSums(seqtab.nochim>0))\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15\n1247  711  443  289  204  123  102   86   49   32   24   15   23    7    2\n\ntable(colSums(seqtab.nochim>0))\n\n  14   95  335  349  616  702  719  745  765  812  867  945  954 1011 1017\n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1\nThe last thing we want to do is write the sequence table to an RDS file.\n\nsaveRDS(seqtab.nochim, \"its18_seqtab.nochim.rds\")\n\n\n\n\n11. Track Reads through Workflow\n\n\n\n(ITS) Table 6 | Tracking reads changes at each step of the DADA2 workflow.\n\n\n Download data as csv file\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Sample_ID\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"raw\":[50894,70734,74581,60006,31174,88732,809,81908,67419,70123,15435,60799,55927,1418,96531],\"pre_filt\":[50882,70649,74557,59953,31029,88694,797,81671,67399,70073,15417,60604,55764,1383,96492],\"cut\":[50419,68075,73994,58146,25782,87532,412,74669,66656,68474,14955,54534,51382,141,95256],\"filtered\":[35999,48230,58956,42563,17548,68259,308,48518,51055,43471,9488,41563,35722,85,80877],\"denoisedF\":[32635,47150,58018,42253,17132,64797,302,41357,50634,42194,9426,41243,35410,84,68681],\"denoisedR\":[33389,47059,58130,42151,17210,67613,302,46321,50362,42074,9427,41077,35168,82,70013],\"merged\":[29795,41880,51144,38442,14188,56594,296,35713,45851,36121,9172,38392,29155,80,64805],\"nonchim\":[29794,41880,51144,38374,14188,56593,296,35600,45850,36063,9172,38371,29102,80,64636]},\"columns\":[{\"accessor\":\"Sample_ID\",\"name\":\"Sample ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"header\":\"Sample ID\",\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"Total reads\",\"minWidth\":150,\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"raw\",\"name\":\"raw\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"50894\",\"70734\",\"74581\",\"60006\",\"31174\",\"88732\",\"809\",\"81908\",\"67419\",\"70123\",\"15435\",\"60799\",\"55927\",\"1418\",\"96531\"],\"header\":\"raw\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"826490\"},{\"accessor\":\"pre_filt\",\"name\":\"pre_filt\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"50882\",\"70649\",\"74557\",\"59953\",\"31029\",\"88694\",\"797\",\"81671\",\"67399\",\"70073\",\"15417\",\"60604\",\"55764\",\"1383\",\"96492\"],\"header\":\"pre filt\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"825364\"},{\"accessor\":\"cut\",\"name\":\"cut\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"50419\",\"68075\",\"73994\",\"58146\",\"25782\",\"87532\",\"412\",\"74669\",\"66656\",\"68474\",\"14955\",\"54534\",\"51382\",\"141\",\"95256\"],\"header\":\"cut\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"790427\"},{\"accessor\":\"filtered\",\"name\":\"filtered\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"35999\",\"48230\",\"58956\",\"42563\",\"17548\",\"68259\",\"308\",\"48518\",\"51055\",\"43471\",\"9488\",\"41563\",\"35722\",\"85\",\"80877\"],\"header\":\"filtered\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"582642\"},{\"accessor\":\"denoisedF\",\"name\":\"denoisedF\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"32635\",\"47150\",\"58018\",\"42253\",\"17132\",\"64797\",\"302\",\"41357\",\"50634\",\"42194\",\"9426\",\"41243\",\"35410\",\"84\",\"68681\"],\"header\":\"denoisedF\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"551316\"},{\"accessor\":\"denoisedR\",\"name\":\"denoisedR\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"33389\",\"47059\",\"58130\",\"42151\",\"17210\",\"67613\",\"302\",\"46321\",\"50362\",\"42074\",\"9427\",\"41077\",\"35168\",\"82\",\"70013\"],\"header\":\"denoisedR\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"560378\"},{\"accessor\":\"merged\",\"name\":\"merged\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"29795\",\"41880\",\"51144\",\"38442\",\"14188\",\"56594\",\"296\",\"35713\",\"45851\",\"36121\",\"9172\",\"38392\",\"29155\",\"80\",\"64805\"],\"header\":\"merged\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"491628\"},{\"accessor\":\"nonchim\",\"name\":\"nonchim\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"29794\",\"41880\",\"51144\",\"38374\",\"14188\",\"56593\",\"296\",\"35600\",\"45850\",\"36063\",\"9172\",\"38371\",\"29102\",\"80\",\"64636\"],\"header\":\"nonchim\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"491143\"}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,15],\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"nowrap\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"37165b537a6de76186ee802667fbb823\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\n\n\n\n12. Assign Taxonomy\nFor taxonomic classification, we used the UNITE (Nilsson et al. 2019) database, specifically the UNITE general FASTA release for Fungi (v. 04.02.2020) (Abarenkov et al. 2020).\n\n\n\n\ntax <- assignTaxonomy(seqtab,\n                      \"sh_general_release_dynamic_s_04.02.2020_dev.fasta\",\n                      multithread = 20, tryRC = TRUE)\nsaveRDS(tax, \"its18_tax_its.rds\")\n\nUNITE fungal taxonomic reference detected.\n13. Save Image\n\nsave.image(\"its18_dada2_wf.rdata\")\n\nR Session Information & Code\nThis workflow was run on the Smithsonian High Performance Cluster (SI/HPC), Smithsonian Institution. Below are the specific packages and versions used in this workflow using both sessionInfo() and devtools::session_info(). Click the arrow to see the details.\n\nShow/hide R Session Info\nsessionInfo()\nR version 4.0.0 (2020-04-24)\nPlatform: x86_64-conda_cos6-linux-gnu (64-bit)\nRunning under: CentOS Linux 7 (Core)\n\nMatrix products: default\nBLAS/LAPACK: /home/scottjj/miniconda3/envs/R-4/lib/libopenblasp-r0.3.9.so\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C\n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8\n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8\n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C\n [9] LC_ADDRESS=C               LC_TELEPHONE=C\n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C\n\nattached base packages:\n [1] grid      stats4    parallel  stats     graphics  grDevices utils\n [8] datasets  methods   base\n\nother attached packages:\n [1] gridExtra_2.3               ggplot2_3.3.0\n [3] ShortRead_1.46.0            GenomicAlignments_1.24.0\n [5] SummarizedExperiment_1.18.1 DelayedArray_0.14.0\n [7] matrixStats_0.56.0          Biobase_2.48.0\n [9] Rsamtools_2.4.0             GenomicRanges_1.40.0\n[11] GenomeInfoDb_1.24.0         Biostrings_2.56.0\n[13] XVector_0.28.0              IRanges_2.22.1\n[15] S4Vectors_0.26.0            BiocParallel_1.22.0\n[17] BiocGenerics_0.34.0         dada2_1.16.0\n[19] Rcpp_1.0.4.6\n\nloaded via a namespace (and not attached):\n [1] plyr_1.8.6             RColorBrewer_1.1-2     pillar_1.4.4\n [4] compiler_4.0.0         bitops_1.0-6           tools_4.0.0\n [7] zlibbioc_1.34.0        lifecycle_0.2.0        tibble_3.0.1\n[10] gtable_0.3.0           lattice_0.20-41        png_0.1-7\n[13] pkgconfig_2.0.3        rlang_0.4.6            Matrix_1.2-18\n[16] GenomeInfoDbData_1.2.3 withr_2.2.0            stringr_1.4.0\n[19] hwriter_1.3.2          vctrs_0.3.0            glue_1.4.1\n[22] R6_2.4.1               jpeg_0.1-8.1           latticeExtra_0.6-29\n[25] reshape2_1.4.4         magrittr_1.5           scales_1.1.1\n[28] ellipsis_0.3.1         colorspace_1.4-1       stringi_1.4.6\n[31] RCurl_1.98-1.2         RcppParallel_5.0.1     munsell_0.5.0\n[34] crayon_1.3.4\n\ndevtools::session_info()\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.0.0 (2020-04-24)\n os       CentOS Linux 7 (Core)\n system   x86_64, linux-gnu\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       America/New_York\n date     2020-06-04\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package              * version  date       lib source\n assertthat             0.2.1    2019-03-21 [1] CRAN (R 4.0.0)\n backports              1.1.7    2020-05-13 [1] CRAN (R 4.0.0)\n Biobase              * 2.48.0   2020-04-27 [1] Bioconductor\n BiocGenerics         * 0.34.0   2020-04-27 [1] Bioconductor\n BiocParallel         * 1.22.0   2020-04-27 [1] Bioconductor\n Biostrings           * 2.56.0   2020-04-27 [1] Bioconductor\n bitops                 1.0-6    2013-08-17 [1] CRAN (R 4.0.0)\n callr                  3.4.3    2020-03-28 [1] CRAN (R 4.0.0)\n cli                    2.0.2    2020-02-28 [1] CRAN (R 4.0.0)\n colorspace             1.4-1    2019-03-18 [1] CRAN (R 4.0.0)\n crayon                 1.3.4    2017-09-16 [1] CRAN (R 4.0.0)\n dada2                * 1.16.0   2020-04-27 [1] Bioconductor\n DelayedArray         * 0.14.0   2020-04-27 [1] Bioconductor\n desc                   1.2.0    2018-05-01 [1] CRAN (R 4.0.0)\n devtools               2.3.0    2020-04-10 [1] CRAN (R 4.0.0)\n digest                 0.6.25   2020-02-23 [1] CRAN (R 4.0.0)\n ellipsis               0.3.1    2020-05-15 [1] CRAN (R 4.0.0)\n fansi                  0.4.1    2020-01-08 [1] CRAN (R 4.0.0)\n fs                     1.4.1    2020-04-04 [1] CRAN (R 4.0.0)\n GenomeInfoDb         * 1.24.0   2020-04-27 [1] Bioconductor\n GenomeInfoDbData       1.2.3    2020-05-22 [1] Bioconductor\n GenomicAlignments    * 1.24.0   2020-04-27 [1] Bioconductor\n GenomicRanges        * 1.40.0   2020-04-27 [1] Bioconductor\n ggplot2              * 3.3.0    2020-03-05 [1] CRAN (R 4.0.0)\n glue                   1.4.1    2020-05-13 [1] CRAN (R 4.0.0)\n gridExtra            * 2.3      2017-09-09 [1] CRAN (R 4.0.0)\n gtable                 0.3.0    2019-03-25 [1] CRAN (R 4.0.0)\n hwriter                1.3.2    2014-09-10 [1] CRAN (R 4.0.0)\n IRanges              * 2.22.1   2020-04-28 [1] Bioconductor\n jpeg                   0.1-8.1  2019-10-24 [1] CRAN (R 4.0.0)\n lattice                0.20-41  2020-04-02 [1] CRAN (R 4.0.0)\n latticeExtra           0.6-29   2019-12-19 [1] CRAN (R 4.0.0)\n lifecycle              0.2.0    2020-03-06 [1] CRAN (R 4.0.0)\n magrittr               1.5      2014-11-22 [1] CRAN (R 4.0.0)\n Matrix                 1.2-18   2019-11-27 [1] CRAN (R 4.0.0)\n matrixStats          * 0.56.0   2020-03-13 [1] CRAN (R 4.0.0)\n memoise                1.1.0    2017-04-21 [1] CRAN (R 4.0.0)\n munsell                0.5.0    2018-06-12 [1] CRAN (R 4.0.0)\n pillar                 1.4.4    2020-05-05 [1] CRAN (R 4.0.0)\n pkgbuild               1.0.8    2020-05-07 [1] CRAN (R 4.0.0)\n pkgconfig              2.0.3    2019-09-22 [1] CRAN (R 4.0.0)\n pkgload                1.0.2    2018-10-29 [1] CRAN (R 4.0.0)\n plyr                   1.8.6    2020-03-03 [1] CRAN (R 4.0.0)\n png                    0.1-7    2013-12-03 [1] CRAN (R 4.0.0)\n prettyunits            1.1.1    2020-01-24 [1] CRAN (R 4.0.0)\n processx               3.4.2    2020-02-09 [1] CRAN (R 4.0.0)\n ps                     1.3.3    2020-05-08 [1] CRAN (R 4.0.0)\n R6                     2.4.1    2019-11-12 [1] CRAN (R 4.0.0)\n RColorBrewer           1.1-2    2014-12-07 [1] CRAN (R 4.0.0)\n Rcpp                 * 1.0.4.6  2020-04-09 [1] CRAN (R 4.0.0)\n RcppParallel           5.0.1    2020-05-06 [1] CRAN (R 4.0.0)\n RCurl                  1.98-1.2 2020-04-18 [1] CRAN (R 4.0.0)\n remotes                2.1.1    2020-02-15 [1] CRAN (R 4.0.0)\n reshape2               1.4.4    2020-04-09 [1] CRAN (R 4.0.0)\n rlang                  0.4.6    2020-05-02 [1] CRAN (R 4.0.0)\n rprojroot              1.3-2    2018-01-03 [1] CRAN (R 4.0.0)\n Rsamtools            * 2.4.0    2020-04-27 [1] Bioconductor\n S4Vectors            * 0.26.0   2020-04-27 [1] Bioconductor\n scales                 1.1.1    2020-05-11 [1] CRAN (R 4.0.0)\n sessioninfo            1.1.1    2018-11-05 [1] CRAN (R 4.0.0)\n ShortRead            * 1.46.0   2020-04-27 [1] Bioconductor\n stringi                1.4.6    2020-02-17 [1] CRAN (R 4.0.0)\n stringr                1.4.0    2019-02-10 [1] CRAN (R 4.0.0)\n SummarizedExperiment * 1.18.1   2020-04-30 [1] Bioconductor\n testthat               2.3.2    2020-03-02 [1] CRAN (R 4.0.0)\n tibble                 3.0.1    2020-04-20 [1] CRAN (R 4.0.0)\n usethis                1.6.1    2020-04-29 [1] CRAN (R 4.0.0)\n vctrs                  0.3.0    2020-05-11 [1] CRAN (R 4.0.0)\n withr                  2.2.0    2020-04-20 [1] CRAN (R 4.0.0)\n XVector              * 0.28.0   2020-04-27 [1] Bioconductor\n zlibbioc               1.34.0   2020-04-27 [1] Bioconductor\n\nThe end!\nSource Code\nThe source code for this page can be accessed on GitHub by clicking this link. Please note, that in order to process the data and build the website, we needed to run the workflow and get the results. Then hard code the results and turn off the individual commands. So the raw file for this page is a bit messy—you have been warned.\nData Availability\nRaw fastq files available on figshare at XXXXXXXX. Trimmed fastq files (primers removed) available through the ENA under project accession number PRJEB45074 (ERP129199). Output files from this workflow available on figshare XXXXXXXX..\n\n\nAbarenkov, Kessy, Allan Zirk, Timo Piirmann, Raivo Pöhönen, Filipp Ivanov, R. Henrik Nilsson, and Urmas Kõljalg. 2020. “UNITE General FASTA Release for Fungi.” https://dx.doi.org/10.15156/BIO/786368.\n\n\nCallahan, Benjamin J, Paul J McMurdie, Michael J Rosen, Andrew W Han, Amy Jo A Johnson, and Susan P Holmes. 2016. “Dada2: High-Resolution Sample Inference from Illumina Amplicon Data.” Nature Methods 13 (7): 581. https://doi.org/10.1038/nmeth.3869.\n\n\nCaporaso, J Gregory, Christian L Lauber, William A Walters, Donna Berg-Lyons, Catherine A Lozupone, Peter J Turnbaugh, Noah Fierer, and Rob Knight. 2011. “Global Patterns of 16s rRNA Diversity at a Depth of Millions of Sequences Per Sample.” Proceedings of the National Academy of Sciences 108: 4516–22. https://doi.org/https://doi.org/10.1073/pnas.1000080107.\n\n\nGardes, Monique, and Thomas D Bruns. 1993. “ITS Primers with Enhanced Specificity for Basidiomycetes-Application to the Identification of Mycorrhizae and Rusts.” Molecular Ecology 2 (2): 113–18. https://doi.org/10.1111/j.1365-294X.1993.tb00005.x.\n\n\nMartin, Marcel. 2011. “Cutadapt Removes Adapter Sequences from High-Throughput Sequencing Reads.” EMBnet. Journal 17 (1): 10–12. https://doi.org/10.14806/ej.17.1.200.\n\n\nNilsson, Rolf Henrik, Karl-Henrik Larsson, Andy F S Taylor, Johan Bengtsson-Palme, Thomas S Jeppesen, Dmitry Schigel, Peter Kennedy, et al. 2019. “The UNITE Database for Molecular Identification of Fungi: Handling Dark Taxa and Parallel Taxonomic Classifications.” Nucleic Acids Research 47 (D1): D259–64. https://doi.org/10.1093/nar/gky1022.\n\n\nQuast, Christian, Elmar Pruesse, Pelin Yilmaz, Jan Gerken, Timmy Schweer, Pablo Yarza, Jörg Peplies, and Frank Oliver Glöckner. 2012. “The SILVA Ribosomal RNA Gene Database Project: Improved Data Processing and Web-Based Tools.” Nucleic Acids Research 41 (D1): D590–96. https://doi.org/10.1093/nar/gks1219.\n\n\nWang, Qiong, George M Garrity, James M Tiedje, and James R Cole. 2007. “Naive Bayesian Classifier for Rapid Assignment of rRNA Sequences into the New Bacterial Taxonomy.” Applied and Environmental Microbiology 73 (16): 5261–67. https://doi.org/10.1128/AEM.00062-07.\n\n\nWhite, Thomas J, Thomas Bruns, SJWT Lee, John Taylor, and others. 1990. “Amplification and Direct Sequencing of Fungal Ribosomal RNA Genes for Phylogenetics.” PCR Protocols: A Guide to Methods and Applications 18 (1): 315–22.\n\n\n\n\n",
      "last_modified": "2021-10-12T18:13:42-05:00"
    },
    {
      "path": "data-prep.html",
      "title": "2 Data Set Preparation",
      "description": "Workflow for preparation  of the **16S rRNA** and **ITS** data sets. These steps are needed before analyzing the data. In this workflow, sample groups are defined, and phyloseq objects are created and curated.\n",
      "author": [],
      "contents": "\n\nContents\n16s rRNA Data\nPrerequisites\nRead Counts Assessment\nDefining Groups\nCreate a Phyloseq Object\nRemove Contaminants & Unwanted Taxa\nRename NA taxonomic ranks\nAdd Phylogenetic Tree\nData Set Summary\nReview\nFinal Steps\n\nITS Data\nPrerequisites\nRead Counts Assessment\nDefining Groups\nCreate a Phyloseq Object\nRemove Low-Count Samples\nRename NA taxonomic ranks\nData Set Summary\nReview\nFinal Steps\nSource Code\nData Availability\n\n\n\nClick here for setup information.\n\nknitr::opts_chunk$set(echo = TRUE, eval = FALSE)\nset.seed(119)\n#library(conflicted)\n#pacman::p_depends(ape, local = TRUE)  \n#pacman::p_depends_reverse(ape, local = TRUE)  \nlibrary(phyloseq); packageVersion(\"phyloseq\")\n[1] '1.36.0'\nlibrary(Biostrings); packageVersion(\"Biostrings\")\n[1] '2.60.2'\npacman::p_load(tidyverse, DT, microbiome, taxa, formatR,\n               captioner, reactable, downloadthis,\n               metacoder, ampvis2, ape, statnet.common, \n               install = FALSE, update = FALSE)\n\noptions(scipen=999)\nknitr::opts_current$get(c(\n  \"cache\",\n  \"cache.path\",\n  \"cache.rebuild\",\n  \"dependson\",\n  \"autodep\"\n))\n$cache\n[1] 0\n\n$cache.path\n[1] \"data-prep_cache/html5/\"\n\n$cache.rebuild\n[1] FALSE\n\n$dependson\nNULL\n\n$autodep\n[1] FALSE\n\nThese workflows share many common variable names so you must split the workflow into a script for each data set OR run the command remove(list = ls()) before beginning the next workflow.\n16s rRNA Data\n\n\n\n\n\n\n\n\n\nPrerequisites\nIn order to run this workflow, you either need to run the corresponding DADA2 Workflow for 16S rRNA or begin with the output from that workflow, data_prep_ssu18_wf.rdata. See the Data Availability page for complete details.\nUnless otherwise noted, we primarily use phyloseq (McMurdie and Holmes 2013) in this section of the workflow to prepare the 2018 16S rRNA data set for community analyses. We prepare the data set by curating samples, removing contaminants, and creating phyloseq objects.\nRead Counts Assessment\nBefore we begin, let’s create a summary table containing some basic sample metadata and the read count data from the DADA2 workflow. We need to inspect how total reads changed through the workflow. While we are at it, let’s create more intuitive Sample IDs. For more details on how reads changed at each step of the workflow, see the summary table at the end of the DADA2 section. Table headers are as follows:\nHeader\nDescription\nSample ID\nthe new sample ID based on Plot number, Depth, Treatment, Temperature, & Pair\nPlot\nthe experimental plot number\nDepth\nthe depth where the sample was collected\nTreatment\nwarm or control\nTemp\ntemperature of soil heating (0C, +4C, or +8C)\nPair\ncontrol/treatment coupling\ninput\nnumber of raw reads\nnochim\nfinal read count after removing chimeras\nRemain\npercent of reads remaining from input to nonchim\nFastqID\nbase name of the fastq file\n\n\n\n\n(16S rRNA) Table 1 | Sample summary table including read changes at start and end of DADA2 workflow.\n\n\n Download data as csv file\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Sample_ID\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P10_D00_010_C0E\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\"],\"root name\":[\"P1\",\"P1-8C\",\"P10\",\"P2\",\"P3\",\"P3-8C\",\"P4\",\"P5\",\"P5-8C\",\"P6\",\"P7\",\"P7-8C\",\"P8\",\"P9\",\"P9-8C\"],\"Plot\":[\"P01\",\"P01\",\"P10\",\"P02\",\"P03\",\"P03\",\"P04\",\"P05\",\"P05\",\"P06\",\"P07\",\"P07\",\"P08\",\"P09\",\"P09\"],\"Treatment\":[\"Warm\",\"Warm\",\"Control\",\"Control\",\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\"],\"Temp\":[3,8,0,0,3,8,0,3,8,0,3,8,0,3,8],\"Depth\":[\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\"],\"Pair\":[\"A\",\"A\",\"E\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"C\",\"D\",\"D\",\"D\",\"E\",\"E\"],\"input reads\":[85489,77645,67583,87091,93065,66401,67810,58266,120892,101599,76781,79032,77599,95566,95182],\"final reads\":[68037,60535,53625,70436,75183,53437,53813,47070,86841,81219,61742,62202,62171,76299,25151],\"no. ASVs\":[2383,1618,2070,2278,2368,1593,2052,1672,2156,3082,2025,2167,2453,2402,816],\"per. reads remain\":[0.796,0.78,0.793,0.809,0.808,0.805,0.794,0.808,0.718,0.799,0.804,0.787,0.801,0.798,0.264]},\"columns\":[{\"accessor\":\"Sample_ID\",\"name\":\"Sample ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P10_D00_010_C0E\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\"],\"header\":\"Sample ID\",\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"Total reads\",\"minWidth\":150,\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"root name\",\"name\":\"root name\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P1\",\"P1-8C\",\"P10\",\"P2\",\"P3\",\"P3-8C\",\"P4\",\"P5\",\"P5-8C\",\"P6\",\"P7\",\"P7-8C\",\"P8\",\"P9\",\"P9-8C\"],\"header\":\"root name\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Plot\",\"name\":\"Plot\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01\",\"P01\",\"P10\",\"P02\",\"P03\",\"P03\",\"P04\",\"P05\",\"P05\",\"P06\",\"P07\",\"P07\",\"P08\",\"P09\",\"P09\"],\"header\":\"Plot\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Treatment\",\"name\":\"Treatment\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"Warm\",\"Warm\",\"Control\",\"Control\",\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\"],\"header\":\"Treatment\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Temp\",\"name\":\"Temp\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"3\",\"8\",\"0\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\"],\"header\":\"Temp\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Depth\",\"name\":\"Depth\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\"],\"header\":\"Depth\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Pair\",\"name\":\"Pair\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"A\",\"A\",\"E\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"C\",\"D\",\"D\",\"D\",\"E\",\"E\"],\"header\":\"Pair\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"input reads\",\"name\":\"input reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"85489\",\"77645\",\"67583\",\"87091\",\"93065\",\"66401\",\"67810\",\"58266\",\"120892\",\"101599\",\"76781\",\"79032\",\"77599\",\"95566\",\"95182\"],\"header\":\"input reads\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"final reads\",\"name\":\"final reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"68037\",\"60535\",\"53625\",\"70436\",\"75183\",\"53437\",\"53813\",\"47070\",\"86841\",\"81219\",\"61742\",\"62202\",\"62171\",\"76299\",\"25151\"],\"header\":\"final reads\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"no. ASVs\",\"name\":\"no. ASVs\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"2383\",\"1618\",\"2070\",\"2278\",\"2368\",\"1593\",\"2052\",\"1672\",\"2156\",\"3082\",\"2025\",\"2167\",\"2453\",\"2402\",\"816\"],\"header\":\"no. ASVs\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"per. reads remain\",\"name\":\"per. reads remain\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"0.796\",\"0.78\",\"0.793\",\"0.809\",\"0.808\",\"0.805\",\"0.794\",\"0.808\",\"0.718\",\"0.799\",\"0.804\",\"0.787\",\"0.801\",\"0.798\",\"0.264\"],\"header\":\"per. reads remain\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,15],\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"nowrap\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"4336b1e377481b6e4af6b56079537876\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\n\n\n\nDefining Groups\nLoad the data packet produced in the final step of the DADA2 workflow. This packet (ssu18_dada2_wf.rdata) contains the ASV-by-sample table and the ASV taxonomy table.\nRename the samples so names have plot and Depth info.\nAfter we load the data packet, we next need to format sample names and define groups.\n\n\nShow code\nseq_table <- seq_table[order(seq_table$`root name`), ]\ntmp_names <- seq_table$`Sample_ID`\nload(\"files/dada2/rdata/ssu18_dada2_wf.rdata\")\nidentical(seq_table$`root name`, rownames(seqtab))\nrownames(seqtab) <- tmp_names\nsamples.out <- rownames(seqtab)\n\nsample_name <- substr(samples.out, 1, 999)\nplot <- substr(samples.out, 0, 3)\ndepth <- substr(samples.out, 6, 11)\ntreatment <- substr(samples.out, 13, 13)\ntemp <- substr(samples.out, 14, 14)\npair <- substr(samples.out, 15, 15)\n\nWe have a total of 15 samples, 5 sample pairs, from 10 plots (1 depth). There are 2 treatments corresponding to 3 different temperature regimes.\nAnd finally we define a sample data frame that holds the different groups we extracted from the sample names.\n\n\nShow code\n#define a sample data frame\nsamdf <- data.frame(SamName = sample_name,\n                    PLOT = plot,\n                    DEPTH = depth,\n                    TREAT = treatment,\n                    TEMP = temp,\n                    PAIR = pair)\nrownames(samdf) <- samples.out\n\n\n\n\nFor example, P07_D00_010_W3D is the sample heated at +3C from plot P07, collected from a depth of 00_010cm. This sample is in group D which consists of P07_D00_010_W3D, P07_D00_010_W8D, P08_D00_010_C0D.\nCreate a Phyloseq Object\nA. The first step is to rename the amplicon sequence variants (ASVs) so the designations are a bit more user friendly. By default, DADA2 names each ASV by its unique sequence so that data can be directly compared across studies (which is great). But this convention can get cumbersome downstream, so we rename the ASVs using a simpler convention—ASV1, ASV2, ASV3, and so on.\n\nA phyloseq object contains ASV table (taxa abundances), sample metadata, and taxonomy table (mapping between ASVs and higher-level taxonomic classifications).\n\n\nShow code\n# this create the phyloseq object\nps <- phyloseq(otu_table(seqtab, taxa_are_rows = FALSE),\n                   sample_data(samdf), tax_table(tax_silva))\ntax_table(ps) <- cbind(tax_table(ps),\n                           rownames(tax_table(ps)))\n\n# adding unique ASV names\ntaxa_names(ps) <- paste0(\"ASV\", seq(ntaxa(ps)))\ntax_table(ps) <- cbind(tax_table(ps),\n                           rownames(tax_table(ps)))\n\n\n[1] \"ASV1\" \"ASV2\" \"ASV3\" \"ASV4\" \"ASV5\" \"ASV6\"\n\nSo the complete data set contains 20332 ASVs. We can use the microbiome R package (Lahti, Sudarshan, and others 2017) to get some additional summary data from the phyloseq object.\n\n\n\nMetric\nResults\nMin. number of reads\n25151\nMax. number of reads\n86841\nTotal number of reads\n937761\nAverage number of reads\n62517\nMedian number of reads\n62171\nTotal ASVs\n20332\nSparsity\n0.898\nAny ASVs sum to 1 or less?\nFALSE\nNumber of singleton ASVs\nNA\nPercent of ASVs that are singletons\nNA\nNumber of sample variables are:\n6 (SamName, PLOT, DEPTH, TREAT, TEMP, PAIR)\nB. Add two final columns containing the ASV sequences and ASV IDs. This will be useful later when trying to export a fasta file. We can also take a look at the phyloseq object.\n\ncolnames(tax_table(ps)) <- c(\"Kingdom\", \"Phylum\", \"Class\", \"Order\",\n    \"Family\", \"Genus\", \"ASV_SEQ\", \"ASV_ID\")\nps\n\n\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 20332 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 20332 taxa by 8 taxonomic ranks ]\n\nC. Export sequence and taxonomy tables for the unadulterated phyloseq object for later use. We will use the prefix full to indicate that these are the raw outputs.\n\nwrite.table(tax_table(ps),\n            \"files/data-prep/tables/ssu18_full_tax_table.txt\",\n            sep = \"\\t\", quote = FALSE, col.names = NA)\nwrite.table(t(otu_table(ps)),\n            \"files/data-prep/tables/ssu18_full_seq_table.txt\",\n            sep = \"\\t\", quote = FALSE, col.names = NA)\n\nRemove Contaminants & Unwanted Taxa\nLet’s see if we have any potential contaminants. We can use some inline R code to see the taxonomy table for any taxa of interest.\n\nThe code (hidden by default) is written as `r \"Chloroplast\" %in% tax_table(ps)`.\nAre Mitochondria present? TRUE\nAre Chloroplast present? TRUE\nAre Eukaryota present? TRUE\nLet’s remove these taxa—Eukaryota because we used bacterial/archaeal primers, Mitochondria because those are likely from eukaryotes, and Chloroplast because those are likely from plants. We must do each of these in turn using phyloseq and it gets a little messy.\nWhy messy? The subset_taxa command removes anything that is NA for the specified taxonomic level or above. For example, lets say you run the subset_taxa command using Family != \"Mitochondria\". Seems like you should get a phyloseq object with everything except Mitochondria. But actually the command not only gets rid of Mitochondria but everything else that has NA for Family and above. In my experience this is not well documented and I had to dig through the files to figure out what was happening.\nAnyway, to remove the taxa we do the following:\nSubset the taxa and generate a ps object of just the taxa of interest,\nSelect the ASV column only, turn it into a factor, and use this to remove  from the ps object.\nRemove Mitochondria ASVs\nRemember the original data set contained 20332 ASVs. Here we generate a file with mitochondria ASVs only.\n\nMT1 <- subset_taxa(ps, Family == \"Mitochondria\")\nMT1 <-  as(tax_table(MT1), \"matrix\")\nMT1 <- MT1[, 8]\nMT1df <- as.factor(MT1)\ngoodTaxa <- setdiff(taxa_names(ps), MT1df)\nps_no_mito <- prune_taxa(goodTaxa, ps)\nps_no_mito\n\n\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 20291 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 20291 taxa by 8 taxonomic ranks ]\n\nLooks like this removed 41 Mitochondria ASVs. We will duplicate the code block to remove other groups.\nRemove Chloroplast ASVs\nAnd again with Chloroplast ASVs only.\n\nCH1 <- subset_taxa(ps_no_mito, Order == \"Chloroplast\")\nCH1 <-  as(tax_table(CH1), \"matrix\")\nCH1 <- CH1[, 8]\nCH1df <- as.factor(CH1)\ngoodTaxa <- setdiff(taxa_names(ps_no_mito), CH1df)\nps_no_chloro <- prune_taxa(goodTaxa, ps_no_mito)\nps_no_chloro\n\n\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 20274 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 20274 taxa by 8 taxonomic ranks ]\n\nThe code removed an additional 17 Chloroplast ASVs.\nRemove Eukaryota ASVs\nAnd again with Eukaryota ASVs only.\n\nEU1 <- subset_taxa(ps_no_chloro, Kingdom == \"Eukaryota\")\nEU1 <-  as(tax_table(EU1), \"matrix\")\nEU1 <- EU1[, 8]\nEU1df <- as.factor(EU1)\ngoodTaxa <- setdiff(taxa_names(ps_no_chloro), EU1df)\nps_no_euk <- prune_taxa(goodTaxa, ps_no_chloro)\nps_no_euk\n\n\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 20223 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 20223 taxa by 8 taxonomic ranks ]\n\nThe code removed an additional 51 Eukaryota ASVs from the ps object.\nRemove any Kingdom NAs\nHere we can just use the straight up subset_taxa command since we do not need to worry about any ranks above Kingdom also being removed.\n\nps_filt <- subset_taxa(ps_no_euk, !is.na(Kingdom))\n\n\nps_work_o <- ps_filt\n\nThe code eliminated an additional 50 Kingdom level NA ASVs from the phyloseq object.\nRename NA taxonomic ranks\nPhyloseq has an odd way of dealing with taxonomic ranks that have no value—in other words, NA in the tax table. The first thing we are going to do before moving forward is to change all of the NAs to have a value of the next highest classified rank. For example, ASV26 is not classified at the Genus level but is at Family level (Xanthobacteraceae). So we change the Genus name to Family_Xanthobacteraceae. The code for comes from these two posts on the phyloseq GitHub, both by MSMortensen: issue #850 and issue #990.\n\nOne thing this code does is reassign the functions class and order to taxonomic ranks. This can cause issues if you need these functions.\n\nSo you need to run something like this rm(class, order, phylum, kingdom) at the end of the code to remove these as variables. For now, I have not come up with a better solution.\n\n\nShow code\ntax.clean <- data.frame(tax_table(ps_filt))\nfor (i in 1:6){ tax.clean[,i] <- as.character(tax.clean[,i])}\ntax.clean[is.na(tax.clean)] <- \"\"\n\nfor (i in 1:nrow(tax.clean)){\n    if (tax.clean[i,2] == \"\"){\n        kingdom <- base::paste(\"k_\", tax.clean[i,1], sep = \"\")\n        tax.clean[i, 2:6] <- kingdom\n    } else if (tax.clean[i,3] == \"\"){\n        phylum <- base::paste(\"p_\", tax.clean[i,2], sep = \"\")\n        tax.clean[i, 3:6] <- phylum\n    } else if (tax.clean[i,4] == \"\"){\n        class <- base::paste(\"c_\", tax.clean[i,3], sep = \"\")\n        tax.clean[i, 4:6] <- class\n    } else if (tax.clean[i,5] == \"\"){\n        order <- base::paste(\"o_\", tax.clean[i,4], sep = \"\")\n        tax.clean[i, 5:6] <- order\n    } else if (tax.clean[i,6] == \"\"){\n        tax.clean$Genus[i] <- base::paste(\"f\",tax.clean$Family[i], sep = \"_\")\n        }\n}\ntax_table(ps_filt) <- as.matrix(tax.clean)\nrank_names(ps_filt)\nrm(class, order, phylum, kingdom)\n\nStill the same ranks. That’s good. What about the new groups? Let’s take a peak at some families.\n\nhead(get_taxa_unique(ps_filt, \"Family\"), 16)\n [1] \"Planococcaceae\"         \"Chthoniobacteraceae\"   \n [3] \"Nitrososphaeraceae\"     \"p_RCP2-54\"             \n [5] \"o_Rokubacteriales\"      \"Methyloligellaceae\"    \n [7] \"Nitrospiraceae\"         \"Xanthobacteraceae\"     \n [9] \"o_Vicinamibacterales\"   \"Vicinamibacteraceae\"   \n[11] \"c_Subgroup_5\"           \"Xiphinematobacteraceae\"\n[13] \"Entotheonellaceae\"      \"Chitinophagaceae\"      \n[15] \"Nitrosomonadaceae\"      \"o_Acidobacteriales\"    \n\nNice. Bye-bye NA\n\nNote. The original code mentioned above is written for data sets that have species-level designations.\n\nSince this data set does not contain species, I modified the code to stop at the genus level. If your data set has species, my modifications will not work for you.\nFinally, we rename the ps object. This is now our working data set.\n\nps_work <- ps_filt\n\nAdd Phylogenetic Tree\nOne final task is to add a phylogenetic tree to the phyloseq object.\n\nps_work_tree <- rtree(ntaxa(ps_work), rooted = TRUE,\n                      tip.label = taxa_names(ps_work))\nps_work <- merge_phyloseq(ps_work,\n                          sample_data,\n                          ps_work_tree)\nps_work_o_tree <- rtree(ntaxa(ps_work_o), rooted = TRUE,\n                      tip.label = taxa_names(ps_work_o))\nps_work_o <- merge_phyloseq(ps_work_o,\n                          sample_data,\n                          ps_work_o_tree)\n\nData Set Summary\nNow that we have removed the NC and sample with zero reads, we can summarize the data set. Let’s start with the in our working phyloseq object using the summarize_phyloseq from the microbiome R package (Lahti, Sudarshan, and others 2017) as we did above.\n\n\n\nMetric\nResults\nMin. number of reads\n25088\nMax. number of reads\n86600\nTotal number of reads\n936640\nAverage number of reads\n62443\nMedian number of reads\n62117\nTotal ASVs\n20173\nSparsity\n0.891\nAny ASVs sum to 1 or less?\nFALSE\nNumber of singleton ASVs\nNA\nPercent of ASVs that are singletons\nNA\nNumber of sample variables are:\n6 (SamName, PLOT, DEPTH, TREAT, TEMP, PAIR)\nWe can also generate a summary table of total reads & ASVs for each sample. You can sort the table, download a copy, or filter by search term. Here is the code to generate the data for the table. First, we create data frames that hold total reads and ASVs for each sample.\n\n\nShow code\ntotal_reads <- sample_sums(ps_work)\ntotal_reads <- as.data.frame(total_reads, make.names = TRUE)\ntotal_reads <- total_reads %>% rownames_to_column(\"Sample_ID\")\n\ntotal_asvs <- estimate_richness(ps_work,\n                                measures = \"Observed\")\ntotal_asvs <- total_asvs %>% rownames_to_column(\"Sample_ID\")\ntotal_asvs$Sample_ID <- gsub('\\\\.', '-', total_asvs$Sample_ID)\n\nAnd then we merge these two data frames with the sample data frame.\n\n\nShow code\nsam_details <- samdf\nrownames(sam_details) <- NULL\ncolnames(sam_details) <- c(\"Sample_ID\", \"Plot\", \"Depth\",\n                                  \"Treatment\", \"Temp\", \"Pair\")\ntmp_tab1 <- seq_table\ntmp_tab1[, c(2:7,11)] <- NULL\ntmp_tab2 <- dplyr::left_join(sam_details, total_reads) %>%\n                left_join(., total_asvs) %>%\n                left_join(., tmp_tab1)\n\nreads_lost <- tmp_tab2$`final reads` - tmp_tab2$total_reads \nasvs_lost <- tmp_tab2$`no. ASVs` - tmp_tab2$Observed \ntmp_tab2$reads_lost <- reads_lost\ntmp_tab2$asvs_lost <- asvs_lost\n\nseq_table2 <- tmp_tab2[, c(1:8,12,13)]\ncolnames(seq_table2) <- c(\"sample_id\", \"PLOT\", \"DEPTH\",\n                          \"TREAT\", \"TEMP\", \"PAIR\", \"total_reads\",\n                          \"total_ASVs\", \"reads_lost\", \"ASVs_lost\")\n\n(16S rRNA) Table 2 | Sample summary table showing the final number of reads and ASVs (per sample) as well as the number of reads/ASVs lost during curation.\n\n\n Download data as csv file\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"sample_id\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P10_D00_010_C0E\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\"],\"PLOT\":[\"P01\",\"P01\",\"P10\",\"P02\",\"P03\",\"P03\",\"P04\",\"P05\",\"P05\",\"P06\",\"P07\",\"P07\",\"P08\",\"P09\",\"P09\"],\"DEPTH\":[\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\"],\"TREAT\":[\"W\",\"W\",\"C\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\"],\"TEMP\":[\"3\",\"8\",\"0\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\"],\"PAIR\":[\"A\",\"A\",\"E\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"C\",\"D\",\"D\",\"D\",\"E\",\"E\"],\"total_reads\":[67902,60509,53600,70412,75123,53347,53770,47023,86600,81150,61632,62117,62136,76231,25088],\"total_ASVs\":[2371,1610,2066,2272,2356,1575,2040,1663,2124,3065,2010,2157,2441,2386,813],\"reads_lost\":[135,26,25,24,60,90,43,47,241,69,110,85,35,68,63],\"ASVs_lost\":[12,8,4,6,12,18,12,9,32,17,15,10,12,16,3]},\"columns\":[{\"accessor\":\"sample_id\",\"name\":\"sample_id\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P10_D00_010_C0E\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\"],\"header\":\"sample id\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"PLOT\",\"name\":\"PLOT\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01\",\"P01\",\"P10\",\"P02\",\"P03\",\"P03\",\"P04\",\"P05\",\"P05\",\"P06\",\"P07\",\"P07\",\"P08\",\"P09\",\"P09\"],\"header\":\"PLOT\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"DEPTH\",\"name\":\"DEPTH\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\"],\"header\":\"DEPTH\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"TREAT\",\"name\":\"TREAT\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"W\",\"W\",\"C\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\"],\"header\":\"TREAT\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"TEMP\",\"name\":\"TEMP\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"3\",\"8\",\"0\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\"],\"header\":\"TEMP\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"PAIR\",\"name\":\"PAIR\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"A\",\"A\",\"E\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"C\",\"D\",\"D\",\"D\",\"E\",\"E\"],\"header\":\"PAIR\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_reads\",\"name\":\"total_reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"67902\",\"60509\",\"53600\",\"70412\",\"75123\",\"53347\",\"53770\",\"47023\",\"86600\",\"81150\",\"61632\",\"62117\",\"62136\",\"76231\",\"25088\"],\"header\":\"total reads\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_ASVs\",\"name\":\"total_ASVs\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"2371\",\"1610\",\"2066\",\"2272\",\"2356\",\"1575\",\"2040\",\"1663\",\"2124\",\"3065\",\"2010\",\"2157\",\"2441\",\"2386\",\"813\"],\"header\":\"total ASVs\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"reads_lost\",\"name\":\"reads_lost\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"135\",\"26\",\"25\",\"24\",\"60\",\"90\",\"43\",\"47\",\"241\",\"69\",\"110\",\"85\",\"35\",\"68\",\"63\"],\"header\":\"reads lost\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"ASVs_lost\",\"name\":\"ASVs_lost\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"12\",\"8\",\"4\",\"6\",\"12\",\"18\",\"12\",\"9\",\"32\",\"17\",\"15\",\"10\",\"12\",\"16\",\"3\"],\"header\":\"ASVs lost\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,15],\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"nowrap\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"551a45caf403b7a1a1de2911a76de0c1\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nReview\nWe have a few different options to play with. At this point it is difficult to say which we will use or whether additional objects need to be created. Here is a summary of the objects we have.\nThe full phyloseq object before removing contaminants.\n\nps\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 20332 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 20332 taxa by 8 taxonomic ranks ]\nhead(get_taxa_unique(ps, \"Family\"), 16)\n [1] \"Planococcaceae\"         \"Chthoniobacteraceae\"   \n [3] \"Nitrososphaeraceae\"     NA                      \n [5] \"Methyloligellaceae\"     \"Nitrospiraceae\"        \n [7] \"Xanthobacteraceae\"      \"Vicinamibacteraceae\"   \n [9] \"Xiphinematobacteraceae\" \"Entotheonellaceae\"     \n[11] \"Chitinophagaceae\"       \"Nitrosomonadaceae\"     \n[13] \"B1-7BS\"                 \"WX65\"                  \n[15] \"Gaiellaceae\"            \"Steroidobacteraceae\"   \n\nThe phyloseq object before changing NA ranks.\n\nps_work_o\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 20173 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 20173 taxa by 8 taxonomic ranks ]\nphy_tree()    Phylogenetic Tree: [ 20173 tips and 20172 internal nodes ]\nhead(get_taxa_unique(ps_work_o, \"Family\"), 16)\n [1] \"A4b\"                            \"Burkholderiaceae\"              \n [3] \"Peptococcaceae\"                 NA                              \n [5] \"Polyangiaceae\"                  \"Pedosphaeraceae\"               \n [7] \"AKYH767\"                        \"Micromonosporaceae\"            \n [9] \"Acidobacteriaceae_(Subgroup_1)\" \"Pyrinomonadaceae\"              \n[11] \"Clostridiaceae\"                 \"Myxococcaceae\"                 \n[13] \"Hyphomonadaceae\"                \"Roseiflexaceae\"                \n[15] \"type_III\"                       \"Ktedonobacteraceae\"            \n\nThe phyloseq object after changing NA ranks.\n\nps_work\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 20173 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 20173 taxa by 8 taxonomic ranks ]\nphy_tree()    Phylogenetic Tree: [ 20173 tips and 20172 internal nodes ]\nhead(get_taxa_unique(ps_work, \"Family\"), 16)\n [1] \"c_Subgroup_22\"         \"c_OM190\"              \n [3] \"A4b\"                   \"Diplorickettsiaceae\"  \n [5] \"k_Bacteria\"            \"Gemmataceae\"          \n [7] \"c_Gammaproteobacteria\" \"Microscillaceae\"      \n [9] \"Entotheonellaceae\"     \"Syntrophaceae\"        \n[11] \"p_WS2\"                 \"Verrucomicrobiaceae\"  \n[13] \"Pyrinomonadaceae\"      \"Caulobacteraceae\"     \n[15] \"Parachlamydiaceae\"     \"c_Phycisphaerae\"      \nobjects()\n [1] \"asvs_lost\"              \"caption_fig\"           \n [3] \"caption_tab\"            \"CH1\"                   \n [5] \"CH1df\"                  \"depth\"                 \n [7] \"EU1\"                    \"EU1df\"                 \n [9] \"example_sam\"            \"goodTaxa\"              \n[11] \"i\"                      \"max_read_ps\"           \n[13] \"max_read_ps_work\"       \"mean_reads_ps\"         \n[15] \"mean_reads_ps_work\"     \"median_reads_ps\"       \n[17] \"median_reads_ps_work\"   \"min_read_ps\"           \n[19] \"min_read_ps_work\"       \"MT1\"                   \n[21] \"MT1df\"                  \"pair\"                  \n[23] \"plot\"                   \"ps\"                    \n[25] \"ps_filt\"                \"ps_no_chloro\"          \n[27] \"ps_no_euk\"              \"ps_no_mito\"            \n[29] \"ps_work\"                \"ps_work_o\"             \n[31] \"ps_work_o_tree\"         \"ps_work_tree\"          \n[33] \"qgroup\"                 \"qpair\"                 \n[35] \"reads_lost\"             \"ref\"                   \n[37] \"sam_details\"            \"samdf\"                 \n[39] \"sample_name\"            \"samples.out\"           \n[41] \"seq_table\"              \"seq_table2\"            \n[43] \"seqtab\"                 \"singleton_ps\"          \n[45] \"singleton_ps_perc\"      \"singleton_ps_work\"     \n[47] \"singleton_ps_work_perc\" \"sparsity_ps\"           \n[49] \"sparsity_ps_work\"       \"tax_silva\"             \n[51] \"tax.clean\"              \"temp\"                  \n[53] \"tmp_names\"              \"tmp_tab1\"              \n[55] \"tmp_tab2\"               \"total_asvs\"            \n[57] \"total_asvs_ps\"          \"total_asvs_ps_work\"    \n[59] \"total_reads\"            \"total_reads_ps\"        \n[61] \"total_reads_ps_work\"    \"treatment\"             \n[63] \"wong_pal\"              \n\nFinal Steps\nThe last thing tasks to complete are to a) save copies of the taxonomy and sequence tables and b) save an image of the workflow for the next section.\n\nwrite.table(tax_table(ps_work),\n            \"files/data-prep/tables/ssu18_work_tax_table.txt\",\n            sep = \"\\t\", quote = FALSE, col.names = NA)\nwrite.table(t(otu_table(ps_work)),\n            \"files/data-prep/tables/ssu18_work_seq_table.txt\",\n            sep = \"\\t\", quote = FALSE, col.names = NA)\n\n\n\n\n\n\n\nITS Data\n\n\n\n\n\n\n\n\n\nPrerequisites\nIn order to run this workflow, you either need to run the corresponding DADA2 Workflow for 2018 ITS or begin with the output from that workflow, data_prep_its18_wf.rdata. See the Data Availability page for complete details.\nUnless otherwise noted, we primarily use phyloseq (McMurdie and Holmes 2013) in this section of the workflow to prepare the 2018 ITS data set for community analyses. We prepare the data set by curating samples, removing contaminants, and creating phyloseq objects.\nRead Counts Assessment\nBefore we begin, let’s create a summary table containing some basic sample metadata and the read count data from the DADA2 workflow. We need to inspect how total reads changed from to beginning to the end of the workflow. While we are at it, let’s create more intuitive Sample IDs. For more details on how reads changed at each step of the workflow, see the summary table at the end of the DADA2 section.\nTable headers are as follows:\nHeader\nDescription\nSample ID\nthe new sample ID based on Plot number, Depth, Treatment, Temperature, & Pair\nPlot\nthe experimental plot number\nDepth\nthe depth where the sample was collected\nTreatment\nwarm or control\nTemp\ntemperature of soil heating (0C, +4C, or +8C)\nPair\ncontrol/treatment coupling\ninput\nnumber of raw reads\nnochim\nfinal read count after removing chimeras\nRemain\npercent of reads remaining from input to nonchim\nFastqID\nbase name of the fastq file\n\n\n\n(ITS) Table 1 | Sample summary table including read changes at start and end of DADA2 workflow.\n\n\n Download data as csv file\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Sample_ID\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P10_D00_010_C0E\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\"],\"root name\":[\"P1\",\"P1-8C\",\"P10\",\"P2\",\"P3\",\"P3-8C\",\"P4\",\"P5\",\"P5-8C\",\"P6\",\"P7\",\"P7-8C\",\"P8\",\"P9\",\"P9-8C\"],\"Plot\":[\"P01\",\"P01\",\"P10\",\"P02\",\"P03\",\"P03\",\"P04\",\"P05\",\"P05\",\"P06\",\"P07\",\"P07\",\"P08\",\"P09\",\"P09\"],\"Treatment\":[\"Warm\",\"Warm\",\"Control\",\"Control\",\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\"],\"Temp\":[3,8,0,0,3,8,0,3,8,0,3,8,0,3,8],\"Depth\":[\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\"],\"Pair\":[\"A\",\"A\",\"E\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"C\",\"D\",\"D\",\"D\",\"E\",\"E\"],\"input reads\":[50894,70734,96531,74581,60006,31174,88732,809,81908,67419,70123,15435,60799,55927,1418],\"final reads\":[29794,41880,64636,51144,38374,14188,56593,296,35600,45850,36063,9172,38371,29102,80],\"no. ASVs\":[945,719,812,1011,765,349,1017,95,616,954,867,335,702,745,14],\"per. reads remain\":[0.585,0.592,0.67,0.686,0.64,0.455,0.638,0.366,0.435,0.68,0.514,0.594,0.631,0.52,0.056]},\"columns\":[{\"accessor\":\"Sample_ID\",\"name\":\"Sample ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P10_D00_010_C0E\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\"],\"header\":\"Sample ID\",\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"footer\":\"Total reads\",\"minWidth\":150,\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"root name\",\"name\":\"root name\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P1\",\"P1-8C\",\"P10\",\"P2\",\"P3\",\"P3-8C\",\"P4\",\"P5\",\"P5-8C\",\"P6\",\"P7\",\"P7-8C\",\"P8\",\"P9\",\"P9-8C\"],\"header\":\"root name\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Plot\",\"name\":\"Plot\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01\",\"P01\",\"P10\",\"P02\",\"P03\",\"P03\",\"P04\",\"P05\",\"P05\",\"P06\",\"P07\",\"P07\",\"P08\",\"P09\",\"P09\"],\"header\":\"Plot\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Treatment\",\"name\":\"Treatment\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"Warm\",\"Warm\",\"Control\",\"Control\",\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\",\"Control\",\"Warm\",\"Warm\"],\"header\":\"Treatment\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Temp\",\"name\":\"Temp\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"3\",\"8\",\"0\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\"],\"header\":\"Temp\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Depth\",\"name\":\"Depth\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\"],\"header\":\"Depth\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Pair\",\"name\":\"Pair\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"A\",\"A\",\"E\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"C\",\"D\",\"D\",\"D\",\"E\",\"E\"],\"header\":\"Pair\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"input reads\",\"name\":\"input reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"50894\",\"70734\",\"96531\",\"74581\",\"60006\",\"31174\",\"88732\",\"809\",\"81908\",\"67419\",\"70123\",\"15435\",\"60799\",\"55927\",\"1418\"],\"header\":\"input reads\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"final reads\",\"name\":\"final reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"29794\",\"41880\",\"64636\",\"51144\",\"38374\",\"14188\",\"56593\",\"296\",\"35600\",\"45850\",\"36063\",\"9172\",\"38371\",\"29102\",\"80\"],\"header\":\"final reads\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"no. ASVs\",\"name\":\"no. ASVs\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"945\",\"719\",\"812\",\"1011\",\"765\",\"349\",\"1017\",\"95\",\"616\",\"954\",\"867\",\"335\",\"702\",\"745\",\"14\"],\"header\":\"no. ASVs\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"per. reads remain\",\"name\":\"per. reads remain\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"0.585\",\"0.592\",\"0.67\",\"0.686\",\"0.64\",\"0.455\",\"0.638\",\"0.366\",\"0.435\",\"0.68\",\"0.514\",\"0.594\",\"0.631\",\"0.52\",\"0.056\"],\"header\":\"per. reads remain\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,15],\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"nowrap\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"97e38721ca4829afb80720154cf9d5a7\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nThe following samples have fewer than 1000 reads at the end of the workflow: ****.\nWe can also plot the final read count by the temperature where the sample was collected.\n\n\n\nDefining Groups\nLoad the data packet produced in the final step of the DADA2 workflow. This packet (its18_dada2_wf.rdata) contains the ASV-by-sample table and the ASV taxonomy table.\nRename the samples so names have plot and Depth info. For convenience, we renamed any Negative Controls (NC) to P00_D00-000_NNN.\nAfter we load the data packet we next need to format sample names and define groups.\n\n\nShow code\nseq_table <- seq_table[order(seq_table$`root name`), ]\ntmp_names <- seq_table$`Sample_ID`\nload(\"files/dada2/rdata/its18_dada2_wf.rdata\")\nidentical(seq_table$`root name`, rownames(seqtab))\nrownames(seqtab) <- tmp_names\nsamples.out <- rownames(seqtab)\nsample_name <- substr(samples.out, 1, 999)\nplot <- substr(samples.out, 0, 3)\ndepth <- substr(samples.out, 6, 11)\ntreatment <- substr(samples.out, 13, 13)\ntemp <- substr(samples.out, 14, 14)\npair <- substr(samples.out, 15, 15)\n\nWe have a total of 15 samples, 5 sample pairs, from 10 plots (1 depth). There are 2 treatments corresponding to 3 different temperature regimes.\nAnd finally we define a sample data frame that holds the different groups we extracted from the sample names.\n\n\nShow code\nsamdf <- data.frame(SamName = sample_name,\n                    PLOT = plot,\n                    DEPTH = depth,\n                    TREAT = treatment,\n                    TEMP = temp,\n                    PAIR = pair)\nrownames(samdf) <- samples.out\n\n\n\n\nFor example, P08_D00_010_C0D is the sample heated at +0C from plot P08, collected from a depth of 00_010cm. This sample is in group D which consists of P07_D00_010_W3D, P07_D00_010_W8D, P08_D00_010_C0D.\nCreate a Phyloseq Object\nFix Taxon Names\nThe UNITE database we used for classification adds a little prefix to every rank call, like k__ for Kingdom, o__ for Order, etc. To keep in step with our other analyses, we will remove these tags. Of course, we also make a ps object with the original names just in case. At this point we will also remove the Species rank since it is essentially useless.\nI KNOW there is an easier way to do this.\n\ntax_mod_o <- data.frame(tax)\ntax_mod_o$Species <- NULL\ntax_mod_o <- as.matrix(tax_mod_o)\ntax_mod <- sub(\"k__\", \"\", tax_mod_o)\ntax_mod <- sub(\"p__\", \"\", tax_mod)\ntax_mod <- sub(\"c__\", \"\", tax_mod)\ntax_mod <- sub(\"o__\", \"\", tax_mod)\ntax_mod <- sub(\"f__\", \"\", tax_mod)\ntax_mod <- sub(\"g__\", \"\", tax_mod)\n\nA. The first step is to rename the amplicon sequence variants (ASVs) so the designations are a bit more user friendly. By default, DADA2 names each ASV by its unique sequence so that data can be directly compared across studies (which is great). But this convention can get cumbersome downstream, so we rename the ASVs using a simpler convention—ASV1, ASV2, ASV3, and so on.\n\nA phyloseq object contains ASV table (taxa abundances), sample metadata, and taxonomy table (mapping between ASVs and higher-level taxonomic classifications).\n\n\nShow code\n# this create the phyloseq object\nps <- phyloseq(otu_table(seqtab, taxa_are_rows = FALSE),\n                   sample_data(samdf), tax_table(tax_mod))\ntax_table(ps) <- cbind(tax_table(ps),\n                           rownames(tax_table(ps)))\n\n# adding unique ASV names\ntaxa_names(ps) <- paste0(\"ASV\", seq(ntaxa(ps)))\ntax_table(ps) <- cbind(tax_table(ps),\n                           rownames(tax_table(ps)))\nhead(taxa_names(ps))\n\n\n\n\n\n[1] \"ASV1\" \"ASV2\" \"ASV3\" \"ASV4\" \"ASV5\" \"ASV6\"\n\nSo the complete data set contains 3357 ASVs. We can also use the microbiome R package (Lahti, Sudarshan, and others 2017) to get some additional summary data from the phyloseq object.\n\n\n\nMetric\nResults\nMin. number of reads\n80\nMax. number of reads\n64636\nTotal number of reads\n491143\nAverage number of reads\n32743\nMedian number of reads\n36063\nTotal ASVs\n3357\nSparsity\n0.802\nAny ASVs sum to 1 or less?\nTRUE\nNumber of singleton ASVs\n3\nPercent of ASVs that are singletons\n0.089\nNumber of sample variables are:\n6 (SamName, PLOT, DEPTH, TREAT, TEMP, PAIR)\nB. Add two final columns containing the ASV sequences and ASV IDs. This will be useful later when trying to export a fasta file. We can also take a look at the phyloseq object.\n\ncolnames(tax_table(ps)) <- c(\"Kingdom\", \"Phylum\", \"Class\", \"Order\",\n    \"Family\", \"Genus\", \"ASV_SEQ\", \"ASV_ID\")\nrank_names(ps)\n\n\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 3357 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 3357 taxa by 8 taxonomic ranks ]\n\n\n\n\nC. Export sequence and taxonomy tables for the unadulterated phyloseq object for later use. We will use the prefix full to indicate that these are the raw outputs.\n\n\nShow code\nwrite.table(tax_table(ps),\n            \"files/data-prep/tables/its18_full_tax_table.txt\",\n            sep=\"\\t\", quote = FALSE, col.names=NA)\nwrite.table(t(otu_table(ps)),\n            \"files/data-prep/tables/its18_full_seq_table.txt\",\n            sep=\"\\t\", quote = FALSE, col.names=NA)\n\n\n\n\nAt this point we would normally remove unwanted taxa and/or negative controls. Since we do not have any of these for this dataset, we are going to save the phyloseq object with a new name. That way, if we do decide later on to remove some taxa it will be easier to plug in the code here and then continue with the rest of the workflow.\n\nps_filt <- ps\n\nRemove Low-Count Samples\nNext, we can remove samples with really low read counts, say less than 500 reads.\n\nps_filt_no_low <- prune_samples(sample_sums(ps_filt) > 500, ps_filt)\n\n\nps_filt_no_low\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 3357 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 3357 taxa by 8 taxonomic ranks ]\n\nWe lost 2 sample(s). After removing samples we need to check whether any ASVs ended up with no reads.\n\nno_reads <- taxa_sums(ps_filt_no_low) == 0\n\nAnd we lost 2 ASV(s). So now we must remove these from the ps object.\n\nps_filt_no_nc <- prune_taxa(taxa_sums(ps_filt_no_low) > 0, ps_filt_no_low)\n\n\nps_filt_no_nc\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 3355 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 3355 taxa by 8 taxonomic ranks ]\n\nRename NA taxonomic ranks\nPhyloseq has an odd way of dealing with taxonomic ranks that have no value—in other words, NA in the tax table. The first thing we are going to do before moving forward is to change all of the NAs to have a value of the next highest classified rank. For example, ASV4 is not classified at the Genus level but is at Family level (Nitrososphaeraceae). So we change the Genus name to Family_Nitrososphaeraceae. The code for comes from these two posts on the phyloseq GitHub, both by MSMortensen: issue #850 and issue #990.\n\nOne thing this code does is reassign the functions class and order to taxonomic ranks. This can cause issues if you need these functions.\n\nSo you need to run something like this rm(class, order, phylum, kingdom) at the end of the code to remove these as variables. For now, I have not come up with a better solution.\nBefore doing that, we will save a copy of the phyloseq object with the original taxa names.\n\nps_work_o <- ps_filt_no_nc\n\n\n\nShow code\ntax.clean <- data.frame(tax_table(ps_filt_no_nc))\nfor (i in 1:6){ tax.clean[,i] <- as.character(tax.clean[,i])}\ntax.clean[is.na(tax.clean)] <- \"\"\n\nfor (i in 1:nrow(tax.clean)){\n    if (tax.clean[i,2] == \"\"){\n        kingdom <- base::paste(\"k_\", tax.clean[i,1], sep = \"\")\n        tax.clean[i, 2:6] <- kingdom\n    } else if (tax.clean[i,3] == \"\"){\n        phylum <- base::paste(\"p_\", tax.clean[i,2], sep = \"\")\n        tax.clean[i, 3:6] <- phylum\n    } else if (tax.clean[i,4] == \"\"){\n        class <- base::paste(\"c_\", tax.clean[i,3], sep = \"\")\n        tax.clean[i, 4:6] <- class\n    } else if (tax.clean[i,5] == \"\"){\n        order <- base::paste(\"o_\", tax.clean[i,4], sep = \"\")\n        tax.clean[i, 5:6] <- order\n    } else if (tax.clean[i,6] == \"\"){\n        tax.clean$Genus[i] <- base::paste(\"f\",tax.clean$Family[i], sep = \"_\")\n        }\n}\ntax_table(ps_filt_no_nc) <- as.matrix(tax.clean)\nrank_names(ps_filt_no_nc)\nrm(class, order, phylum, kingdom)\n\nStill the same ranks. That’s good. What about the new groups? Let’s take a peak at some families.\n\nhead(get_taxa_unique(ps_filt_no_nc, \"Family\"), 16)\n [1] \"Hygrophoraceae\"         \"Mycosphaerellaceae\"    \n [3] \"p_Ascomycota\"           \"Trichosporonaceae\"     \n [5] \"c_Agaricomycetes\"       \"Archaeorhizomycetaceae\"\n [7] \"Chaetomellaceae\"        \"Geastraceae\"           \n [9] \"k_Fungi\"                \"Metschnikowiaceae\"     \n[11] \"Clavariaceae\"           \"o_Agaricales\"          \n[13] \"Ascobolaceae\"           \"Trichocomaceae\"        \n[15] \"Piptocephalidaceae\"     \"p_Chytridiomycota\"     \n\nNice. Adios NA.\n\nNote. The original code is written for data sets that have species-level designations.\n\nSince this data set does not contain species, I modified the code to stop at the genus level. If your data set has species, my modifications will not work for you.\nFinally, we rename the ps object. This is now our working data set.\n\nps_work <- ps_filt_no_nc\n\nData Set Summary\nNow that we have removed the NC and samples with low reads, we can summarize the data in our working phyloseq object. Let’s start with the data set as a whole using the summarize_phyloseq from the microbiome R package (Lahti, Sudarshan, and others 2017) as we did above.\n\n\n\nMetric\nResults\nMin. number of reads\n9172\nMax. number of reads\n64636\nTotal number of reads\n490767\nAverage number of reads\n37751\nMedian number of reads\n38371\nTotal ASVs\n3355\nSparsity\n0.671\nAny ASVs sum to 1 or less?\nTRUE\nNumber of singleton ASVs\n5\nPercent of ASVs that are singletons\n0.149\nNumber of sample variables are:\n6 (SamName, PLOT, DEPTH, TREAT, TEMP, PAIR)\nWe can also generate a summary table of total reads & ASVs for each sample. You can sort the table, download a copy, or filter by search term. Here is the code to generate the data for the table. First, we create data frames that hold total reads and ASVs for each sample.\n\n\nShow code\ntotal_reads <- sample_sums(ps_work)\ntotal_reads <- as.data.frame(total_reads, make.names = TRUE)\ntotal_reads <- total_reads %>% rownames_to_column(\"Sample_ID\")\n\ntotal_asvs <- estimate_richness(ps_work, measures = \"Observed\")\ntotal_asvs <- total_asvs %>% rownames_to_column(\"Sample_ID\")\ntotal_asvs$Sample_ID <- gsub('\\\\.', '-', total_asvs$Sample_ID)\n\nAnd then we merge these two data frames with the sample data frame.\n\n\nShow code\nrm(list = ls(pattern = \"tmp_\"))\n\nsam_details <- samdf\nrownames(sam_details) <- NULL\ncolnames(sam_details) <- c(\"Sample_ID\", \"Plot\", \"Depth\",\n                                  \"Treatment\", \"Temp\", \"Pair\")\ntmp_tab1 <- seq_table\ntmp_tab1[, c(2:7,11)] <- NULL\ntmp_tab2 <- dplyr::left_join(sam_details, total_reads) %>%\n                left_join(., total_asvs) %>%\n                left_join(., tmp_tab1)\n\nreads_lost <- tmp_tab2$`final reads` - tmp_tab2$total_reads \nasvs_lost <- tmp_tab2$`no. ASVs` - tmp_tab2$Observed \ntmp_tab2$reads_lost <- reads_lost\ntmp_tab2$asvs_lost <- asvs_lost\n\nseq_table2 <- tmp_tab2[, c(1:8,12,13)]\ncolnames(seq_table2) <- c(\"sample_id\", \"PLOT\", \"DEPTH\",\n                          \"TREAT\", \"TEMP\", \"PAIR\", \"total_reads\",\n                          \"total_ASVs\", \"reads_lost\", \"ASVs_lost\")\n\n(ITS) Table 2 | Sample summary table showing the final number of reads and ASVs (per sample) as well as the number of reads/ASVs lost during curation.\n\n\n Download data as csv file\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"sample_id\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P10_D00_010_C0E\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\"],\"PLOT\":[\"P01\",\"P01\",\"P10\",\"P02\",\"P03\",\"P03\",\"P04\",\"P05\",\"P05\",\"P06\",\"P07\",\"P07\",\"P08\",\"P09\",\"P09\"],\"DEPTH\":[\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\"],\"TREAT\":[\"W\",\"W\",\"C\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\"],\"TEMP\":[\"3\",\"8\",\"0\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\"],\"PAIR\":[\"A\",\"A\",\"E\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"C\",\"D\",\"D\",\"D\",\"E\",\"E\"],\"total_reads\":[29794,41880,64636,51144,38374,14188,56593,\"NA\",35600,45850,36063,9172,38371,29102,\"NA\"],\"total_ASVs\":[945,719,812,1011,765,349,1017,\"NA\",616,954,867,335,702,745,\"NA\"],\"reads_lost\":[0,0,0,0,0,0,0,\"NA\",0,0,0,0,0,0,\"NA\"],\"ASVs_lost\":[0,0,0,0,0,0,0,\"NA\",0,0,0,0,0,0,\"NA\"]},\"columns\":[{\"accessor\":\"sample_id\",\"name\":\"sample_id\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P10_D00_010_C0E\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\"],\"header\":\"sample id\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"PLOT\",\"name\":\"PLOT\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01\",\"P01\",\"P10\",\"P02\",\"P03\",\"P03\",\"P04\",\"P05\",\"P05\",\"P06\",\"P07\",\"P07\",\"P08\",\"P09\",\"P09\"],\"header\":\"PLOT\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"DEPTH\",\"name\":\"DEPTH\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\",\"00_010\"],\"header\":\"DEPTH\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"TREAT\",\"name\":\"TREAT\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"W\",\"W\",\"C\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\"],\"header\":\"TREAT\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"TEMP\",\"name\":\"TEMP\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"3\",\"8\",\"0\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\"],\"header\":\"TEMP\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"PAIR\",\"name\":\"PAIR\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"A\",\"A\",\"E\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"C\",\"D\",\"D\",\"D\",\"E\",\"E\"],\"header\":\"PAIR\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_reads\",\"name\":\"total_reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"29794\",\"41880\",\"64636\",\"51144\",\"38374\",\"14188\",\"56593\",\"NA\",\"35600\",\"45850\",\"36063\",\"9172\",\"38371\",\"29102\",\"NA\"],\"header\":\"total reads\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_ASVs\",\"name\":\"total_ASVs\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"945\",\"719\",\"812\",\"1011\",\"765\",\"349\",\"1017\",\"NA\",\"616\",\"954\",\"867\",\"335\",\"702\",\"745\",\"NA\"],\"header\":\"total ASVs\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"reads_lost\",\"name\":\"reads_lost\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"NA\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"NA\"],\"header\":\"reads lost\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"ASVs_lost\",\"name\":\"ASVs_lost\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"NA\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"NA\"],\"header\":\"ASVs lost\",\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,15],\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"nowrap\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"a2dd250c4eb4bd5fe9c909c2c8dd3f2f\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nReview\nWe have a few different options to play with. At this point it is difficult to say which we will use or whether additional objects need to be created. Here is a summary of the objects we have.\nThe full phyloseq object before removing contaminants.\n\nps\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 3357 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 3357 taxa by 8 taxonomic ranks ]\nhead(get_taxa_unique(ps, \"Family\"), 16)\n [1] \"Hygrophoraceae\"                 \n [2] \"Mycosphaerellaceae\"             \n [3] NA                               \n [4] \"Trichosporonaceae\"              \n [5] \"Archaeorhizomycetaceae\"         \n [6] \"Chaetomellaceae\"                \n [7] \"Geastraceae\"                    \n [8] \"Metschnikowiaceae\"              \n [9] \"Clavariaceae\"                   \n[10] \"Ascobolaceae\"                   \n[11] \"Trichocomaceae\"                 \n[12] \"Piptocephalidaceae\"             \n[13] \"Mortierellaceae\"                \n[14] \"Pleosporales_fam_Incertae_sedis\"\n[15] \"Glomeraceae\"                    \n[16] \"Ceratobasidiaceae\"              \n\nThe phyloseq object before removing the prefix of taxon ranks. This still has low coverage samples.\n\nps_o\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 3357 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 3357 taxa by 8 taxonomic ranks ]\nhead(get_taxa_unique(ps_o, \"Family\"), 16)\n [1] \"f__Hygrophoraceae\"                 \n [2] \"f__Mycosphaerellaceae\"             \n [3] NA                                  \n [4] \"f__Trichosporonaceae\"              \n [5] \"f__Archaeorhizomycetaceae\"         \n [6] \"f__Chaetomellaceae\"                \n [7] \"f__Geastraceae\"                    \n [8] \"f__Metschnikowiaceae\"              \n [9] \"f__Clavariaceae\"                   \n[10] \"f__Ascobolaceae\"                   \n[11] \"f__Trichocomaceae\"                 \n[12] \"f__Piptocephalidaceae\"             \n[13] \"f__Mortierellaceae\"                \n[14] \"f__Pleosporales_fam_Incertae_sedis\"\n[15] \"f__Glomeraceae\"                    \n[16] \"f__Ceratobasidiaceae\"              \n\nThe phyloseq object before changing NA ranks.\n\nps_work_o\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 3355 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 3355 taxa by 8 taxonomic ranks ]\nhead(get_taxa_unique(ps_work_o, \"Family\"), 16)\n [1] \"Hygrophoraceae\"                 \n [2] \"Mycosphaerellaceae\"             \n [3] NA                               \n [4] \"Trichosporonaceae\"              \n [5] \"Archaeorhizomycetaceae\"         \n [6] \"Chaetomellaceae\"                \n [7] \"Geastraceae\"                    \n [8] \"Metschnikowiaceae\"              \n [9] \"Clavariaceae\"                   \n[10] \"Ascobolaceae\"                   \n[11] \"Trichocomaceae\"                 \n[12] \"Piptocephalidaceae\"             \n[13] \"Mortierellaceae\"                \n[14] \"Pleosporales_fam_Incertae_sedis\"\n[15] \"Glomeraceae\"                    \n[16] \"Ceratobasidiaceae\"              \n\nThe phyloseq object after changing NA ranks.\n\nps_work\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 3355 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 3355 taxa by 8 taxonomic ranks ]\nhead(get_taxa_unique(ps_work, \"Family\"), 16)\n [1] \"Hygrophoraceae\"         \"Mycosphaerellaceae\"    \n [3] \"p_Ascomycota\"           \"Trichosporonaceae\"     \n [5] \"c_Agaricomycetes\"       \"Archaeorhizomycetaceae\"\n [7] \"Chaetomellaceae\"        \"Geastraceae\"           \n [9] \"k_Fungi\"                \"Metschnikowiaceae\"     \n[11] \"Clavariaceae\"           \"o_Agaricales\"          \n[13] \"Ascobolaceae\"           \"Trichocomaceae\"        \n[15] \"Piptocephalidaceae\"     \"p_Chytridiomycota\"     \n\nFinal Steps\nThe last thing tasks to complete are to a) save copies of the taxonomy and sequence tables and b) save an image of the workflow for the next part of the workflow.\n\n\nShow code\nwrite.table(tax_table(ps_work),\n            \"files/data-prep/tables/its18_work_tax_table.txt\",\n            sep=\"\\t\", quote = FALSE, col.names=NA)\nwrite.table(t(otu_table(ps_work)),\n            \"files/data-prep/tables/its18_work_seq_table.txt\",\n            sep=\"\\t\", quote = FALSE, col.names=NA)\n\n\n\n\n\n\n\nThat’s all for this part!\nSource Code\nYou can find the source code for this page by clicking this link.\nData Availability\nRaw fastq files available on figshare at XXXXXXXX. Trimmed fastq files (primers removed) available through the ENA under project accession number XXXXXXXX. Output files from this workflow available on figshare at XXXXXXXX..\n\n\nLahti, Leo, Shetty Sudarshan, and others. 2017. “Tools for Microbiome Analysis in r. Version 1.9.97.” https://github.com/microbiome/microbiome.\n\n\nMcMurdie, Paul J, and Susan Holmes. 2013. “Phyloseq: An r Package for Reproducible Interactive Analysis and Graphics of Microbiome Census Data.” PLoS One 8 (4): e61217. https://doi.org/10.1371/journal.pone.0061217.\n\n\n\n\n",
      "last_modified": "2021-10-12T18:14:18-05:00"
    },
    {
      "path": "filtering.html",
      "title": "2 Filtering",
      "description": "Reproducible workflow for Arbitrary, PERfect, & PIME filtering of community data.\n",
      "author": [],
      "contents": "\n\nContents\nFiltering Results\n16S rRNA\nITS\n\nA. Arbitrary Filtering\n16S rRNA\nITS\n\nB. PERfect Filtering\nSetup\nFilter\nSummary\n\nC. PIME Filtering\n16S rRNA\nSetup\nSplit by Predictor Variable\nCalculate Prevalence Intervals\nCalculate Best Prevalence\nBest Prevalence Summary\nEstimate Error in Prediction\nSave Phyloseq PIME objects\nSplit & save by predictor variable\nSummary\n\nITS\nSetup\nSplit by Predictor Variable\nCalculate Prevalence Intervals\nCalculate Best Prevalence\nBest Prevalence Summary\nEstimate Error in Prediction\nSave Phyloseq PIME objects\nSplit & save by predictor variable\nSummary\n\nSource Code\n\n\n\nClick here for setup information.\n\nknitr::opts_chunk$set(echo = TRUE, eval = FALSE)\nset.seed(119)\n\n#library(conflicted)\n#pacman::p_depends(PERFect, local = TRUE)  \n#pacman::p_depends_reverse(PERFect, local = TRUE)  \nlibrary(phyloseq); packageVersion(\"phyloseq\")\n[1] '1.36.0'\nlibrary(Biostrings); packageVersion(\"Biostrings\")\n[1] '2.60.2'\npacman::p_load(tidyverse, metacoder, hilldiv, patchwork, ampvis2, \n               agricolae, labdsv, naniar, PERFect, pime, ape, gdata,\n               pairwiseAdonis, microbiome, seqRFLP, DT, microbiomeMarker, \n               reactable, downloadthis, captioner, jamba, \n               install = FALSE, update = FALSE)\n\noptions(scipen=999)\nknitr::opts_current$get(c(\n  \"cache\",\n  \"cache.path\",\n  \"cache.rebuild\",\n  \"dependson\",\n  \"autodep\"\n))\n$cache\n[1] 0\n\n$cache.path\n[1] \"filtering_cache/html5/\"\n\n$cache.rebuild\n[1] FALSE\n\n$dependson\nNULL\n\n$autodep\n[1] FALSE\n\n\n\n\n\n\n\n\n\n\n\nIn Part A, we apply arbitrary filtering to the 16S rRNA and ITS data sets. In Part B we use PERFect (PERmutation Filtering test for microbiome data) (Smirnova, Huzurbazar, and Jafari 2019) to filter the data sets. And in Part C of this workflow, we use PIME (Prevalence Interval for Microbiome Evaluation) (Roesch et al. 2020) to filter the FULL 16S rRNA and ITS data sets.\n\n\n\nFiltering Results\nWe begin by summarizing the results of each filtering method on the 16S and ITS data sets. Below you can find the complete workflow for each filtering method.\n16S rRNA\n(16S rRNA) Table 1 | Summary of Arbitrary, PERfect, and PIME filtering.\n\n\n\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Metric\":[\"Total number of reads\",\"Min. number of reads\",\"Max. number of reads\",\"Average number of reads\",\"Median number of reads\",\"Total ASVs\",\"Min. number of ASVs\",\"Max. number of ASVs\",\"Average number of ASVs\",\"Median number of ASVs\"],\"Full data\":[936640,25088,86600,62443,62117,20173,813,3065,2063,2124],\"Arbitrary\":[729973,15921,63771,48665,50938,1822,376,1011,739,802],\"PERfect\":[731508,16697,71026,48767,50241,1659,332,857,645,671],\"PIME\":[232532,10585,18360,15502,15780,1058,170,664,458,502]},\"columns\":[{\"accessor\":\"Metric\",\"name\":\"Metric\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"Total number of reads\",\"Min. number of reads\",\"Max. number of reads\",\"Average number of reads\",\"Median number of reads\",\"Total ASVs\",\"Min. number of ASVs\",\"Max. number of ASVs\",\"Average number of ASVs\",\"Median number of ASVs\"],\"header\":\"Metric\",\"minWidth\":200,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"Full data\",\"name\":\"Full data\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"936640\",\"25088\",\"86600\",\"62443\",\"62117\",\"20173\",\"813\",\"3065\",\"2063\",\"2124\"],\"header\":\"Full data\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Arbitrary\",\"name\":\"Arbitrary\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"729973\",\"15921\",\"63771\",\"48665\",\"50938\",\"1822\",\"376\",\"1011\",\"739\",\"802\"],\"header\":\"Arbitrary\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"PERfect\",\"name\":\"PERfect\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"731508\",\"16697\",\"71026\",\"48767\",\"50241\",\"1659\",\"332\",\"857\",\"645\",\"671\"],\"header\":\"PERfect\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"PIME\",\"name\":\"PIME\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"232532\",\"10585\",\"18360\",\"15502\",\"15780\",\"1058\",\"170\",\"664\",\"458\",\"502\"],\"header\":\"PIME\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"defaultPageSize\":10,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,10],\"paginationType\":\"numbers\",\"showPagination\":false,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"0de2cfd5193efecdf42b8722bcf55252\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\n\n\n\n\n\n\n\n\n\n(16S rRNA) Table 2 | Sample summary showing the number of reads and ASVs after Arbitrary, PERfect, and PIME filtering.\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Sample_ID\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"total_reads.x\":[67902,60509,70412,75123,53347,53770,47023,86600,81150,61632,62117,62136,76231,25088,53600],\"total_reads.y\":[53824,52012,57603,61727,34135,43026,38857,63771,61393,50938,50180,46328,61203,15921,39055],\"total_reads.x.x\":[52980,52327,56619,60366,35604,41624,37877,71026,61277,49877,50241,45633,61033,16697,38327],\"total_reads.y.y\":[15636,16952,17190,17492,11737,17074,18360,14965,15426,16791,12722,15780,16697,10585,15125],\"total_asvs.x\":[2371,1610,2272,2356,1575,2040,1663,2124,3065,2010,2157,2441,2386,813,2066],\"total_asvs.y\":[831,620,884,922,422,802,680,572,1011,843,771,813,874,376,670],\"total_asvs.x.x\":[707,563,737,764,411,663,574,661,857,725,671,681,751,332,571],\"total_asvs.y.y\":[502,322,590,596,224,570,499,289,664,516,276,594,563,170,491]},\"columns\":[{\"accessor\":\"Sample_ID\",\"name\":\"Sample_ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"header\":\"Sample ID\",\"minWidth\":150,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"5px solid #eee\"},\"headerStyle\":{\"borderRight\":\"5px solid #eee\"}},{\"accessor\":\"total_reads.x\",\"name\":\"FULL\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"67902\",\"60509\",\"70412\",\"75123\",\"53347\",\"53770\",\"47023\",\"86600\",\"81150\",\"61632\",\"62117\",\"62136\",\"76231\",\"25088\",\"53600\"],\"header\":\"FULL\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_reads.y\",\"name\":\"Arbitrary\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"53824\",\"52012\",\"57603\",\"61727\",\"34135\",\"43026\",\"38857\",\"63771\",\"61393\",\"50938\",\"50180\",\"46328\",\"61203\",\"15921\",\"39055\"],\"header\":\"Arbitrary\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_reads.x.x\",\"name\":\"PERfect\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"52980\",\"52327\",\"56619\",\"60366\",\"35604\",\"41624\",\"37877\",\"71026\",\"61277\",\"49877\",\"50241\",\"45633\",\"61033\",\"16697\",\"38327\"],\"header\":\"PERfect\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_reads.y.y\",\"name\":\"PIME\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"15636\",\"16952\",\"17190\",\"17492\",\"11737\",\"17074\",\"18360\",\"14965\",\"15426\",\"16791\",\"12722\",\"15780\",\"16697\",\"10585\",\"15125\"],\"header\":\"PIME\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"style\":{\"borderRight\":\"5px solid #eee\"},\"headerStyle\":{\"borderRight\":\"5px solid #eee\"}},{\"accessor\":\"total_asvs.x\",\"name\":\"FULL\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"2371\",\"1610\",\"2272\",\"2356\",\"1575\",\"2040\",\"1663\",\"2124\",\"3065\",\"2010\",\"2157\",\"2441\",\"2386\",\"813\",\"2066\"],\"header\":\"FULL\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_asvs.y\",\"name\":\"Arbitrary\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"831\",\"620\",\"884\",\"922\",\"422\",\"802\",\"680\",\"572\",\"1011\",\"843\",\"771\",\"813\",\"874\",\"376\",\"670\"],\"header\":\"Arbitrary\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_asvs.x.x\",\"name\":\"PERfect\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"707\",\"563\",\"737\",\"764\",\"411\",\"663\",\"574\",\"661\",\"857\",\"725\",\"671\",\"681\",\"751\",\"332\",\"571\"],\"header\":\"PERfect\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_asvs.y.y\",\"name\":\"PIME\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"502\",\"322\",\"590\",\"596\",\"224\",\"570\",\"499\",\"289\",\"664\",\"516\",\"276\",\"594\",\"563\",\"170\",\"491\"],\"header\":\"PIME\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"columnGroups\":[{\"name\":\"Total Reads\",\"headerStyle\":{\"borderRight\":\"5px solid #eee\",\"fontSize\":\"1.5em\"},\"columns\":[\"total_reads.x\",\"total_reads.y\",\"total_reads.x.x\",\"total_reads.y.y\"]},{\"name\":\"Total ASVs\",\"headerStyle\":{\"fontSize\":\"1.5em\"},\"columns\":[\"total_asvs.x\",\"total_asvs.y\",\"total_asvs.x.x\",\"total_asvs.y.y\"]}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,15],\"paginationType\":\"numbers\",\"showPagination\":true,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"a9a9f8d99d51d5bdec73e09013c50841\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nITS\n(ITS) Table 1 | Summary of Arbitrary, PERfect, and PIME filtering.\n\n\n\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Metric\":[\"Total number of reads\",\"Min. number of reads\",\"Max. number of reads\",\"Average number of reads\",\"Median number of reads\",\"Total ASVs\",\"Min. number of ASVs\",\"Max. number of ASVs\",\"Average number of ASVs\",\"Median number of ASVs\"],\"Full data\":[490767,9172,64636,37751,38371,3355,335,1017,757,765],\"Arbitrary\":[385643,8692,58360,29665,29052,816,204,499,390,404],\"PERfect\":[361399,7286,56772,27800,24313,306,64,161,122,136],\"PIME\":[67665,3442,6761,5205,4963,474,97,246,181,196]},\"columns\":[{\"accessor\":\"Metric\",\"name\":\"Metric\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"Total number of reads\",\"Min. number of reads\",\"Max. number of reads\",\"Average number of reads\",\"Median number of reads\",\"Total ASVs\",\"Min. number of ASVs\",\"Max. number of ASVs\",\"Average number of ASVs\",\"Median number of ASVs\"],\"header\":\"Metric\",\"minWidth\":200,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"Full data\",\"name\":\"Full data\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"490767\",\"9172\",\"64636\",\"37751\",\"38371\",\"3355\",\"335\",\"1017\",\"757\",\"765\"],\"header\":\"Full data\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Arbitrary\",\"name\":\"Arbitrary\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"385643\",\"8692\",\"58360\",\"29665\",\"29052\",\"816\",\"204\",\"499\",\"390\",\"404\"],\"header\":\"Arbitrary\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"PERfect\",\"name\":\"PERfect\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"361399\",\"7286\",\"56772\",\"27800\",\"24313\",\"306\",\"64\",\"161\",\"122\",\"136\"],\"header\":\"PERfect\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"PIME\",\"name\":\"PIME\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"67665\",\"3442\",\"6761\",\"5205\",\"4963\",\"474\",\"97\",\"246\",\"181\",\"196\"],\"header\":\"PIME\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"defaultPageSize\":10,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,10],\"paginationType\":\"numbers\",\"showPagination\":false,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"057c25d9197f535a95b5ea71ab25e909\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\n\n\n\n\n\n\n\n\n\n(ITS) Table 2 | Sample summary showing the number of reads and ASVs after Arbitrary, PERfect, and PIME filtering.\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Sample_ID\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P10_D00_010_C0E\"],\"total_reads.x\":[29794,41880,51144,38374,14188,56593,35600,45850,36063,9172,38371,29102,64636],\"total_reads.y\":[26302,27218,43127,29052,10376,38934,22198,36652,31184,8692,31867,21681,58360],\"total_reads.x.x\":[23737,23850,39689,28256,8138,47654,20831,35923,24313,7286,28420,16530,56772],\"total_reads.y.y\":[6586,3442,5819,4353,4991,4385,4181,6727,4963,4215,6761,4925,6317],\"total_asvs.x\":[945,719,1011,765,349,1017,616,954,867,335,702,745,812],\"total_asvs.y\":[499,344,494,423,204,471,296,486,492,223,345,390,404],\"total_asvs.x.x\":[148,98,147,136,64,161,90,157,147,76,105,118,143],\"total_asvs.y.y\":[181,123,238,196,109,229,131,246,205,97,198,196,203]},\"columns\":[{\"accessor\":\"Sample_ID\",\"name\":\"Sample_ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P10_D00_010_C0E\"],\"header\":\"Sample ID\",\"minWidth\":150,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"5px solid #eee\"},\"headerStyle\":{\"borderRight\":\"5px solid #eee\"}},{\"accessor\":\"total_reads.x\",\"name\":\"FULL\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"29794\",\"41880\",\"51144\",\"38374\",\"14188\",\"56593\",\"35600\",\"45850\",\"36063\",\"9172\",\"38371\",\"29102\",\"64636\"],\"header\":\"FULL\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_reads.y\",\"name\":\"Arbitrary\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"26302\",\"27218\",\"43127\",\"29052\",\"10376\",\"38934\",\"22198\",\"36652\",\"31184\",\"8692\",\"31867\",\"21681\",\"58360\"],\"header\":\"Arbitrary\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_reads.x.x\",\"name\":\"PERfect\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"23737\",\"23850\",\"39689\",\"28256\",\"8138\",\"47654\",\"20831\",\"35923\",\"24313\",\"7286\",\"28420\",\"16530\",\"56772\"],\"header\":\"PERfect\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_reads.y.y\",\"name\":\"PIME\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"6586\",\"3442\",\"5819\",\"4353\",\"4991\",\"4385\",\"4181\",\"6727\",\"4963\",\"4215\",\"6761\",\"4925\",\"6317\"],\"header\":\"PIME\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"style\":{\"borderRight\":\"5px solid #eee\"},\"headerStyle\":{\"borderRight\":\"5px solid #eee\"}},{\"accessor\":\"total_asvs.x\",\"name\":\"FULL\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"945\",\"719\",\"1011\",\"765\",\"349\",\"1017\",\"616\",\"954\",\"867\",\"335\",\"702\",\"745\",\"812\"],\"header\":\"FULL\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_asvs.y\",\"name\":\"Arbitrary\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"499\",\"344\",\"494\",\"423\",\"204\",\"471\",\"296\",\"486\",\"492\",\"223\",\"345\",\"390\",\"404\"],\"header\":\"Arbitrary\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_asvs.x.x\",\"name\":\"PERfect\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"148\",\"98\",\"147\",\"136\",\"64\",\"161\",\"90\",\"157\",\"147\",\"76\",\"105\",\"118\",\"143\"],\"header\":\"PERfect\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_asvs.y.y\",\"name\":\"PIME\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"181\",\"123\",\"238\",\"196\",\"109\",\"229\",\"131\",\"246\",\"205\",\"97\",\"198\",\"196\",\"203\"],\"header\":\"PIME\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"columnGroups\":[{\"name\":\"Total Reads\",\"headerStyle\":{\"borderRight\":\"5px solid #eee\",\"fontSize\":\"1.5em\"},\"columns\":[\"total_reads.x\",\"total_reads.y\",\"total_reads.x.x\",\"total_reads.y.y\"]},{\"name\":\"Total ASVs\",\"headerStyle\":{\"fontSize\":\"1.5em\"},\"columns\":[\"total_asvs.x\",\"total_asvs.y\",\"total_asvs.x.x\",\"total_asvs.y.y\"]}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,13],\"paginationType\":\"numbers\",\"showPagination\":true,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"b81425449bc2121cd0243108417812dc\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nA. Arbitrary Filtering\nFor low-count arbitrary filtering, we set the minimum read count to 5 and the prevalence to 20%. Then we apply another filter to remove ASVs with a low variance (0.2).\n16S rRNA\n\n\nShow code\ntmp_low_count <- phyloseq::genefilter_sample(\n                                         ssu18_ps_work, \n                                         filterfun_sample(function(x) x >= 5), \n                                         A = 0.2 * nsamples(ssu18_ps_work))\ntmp_low_count <- phyloseq::prune_taxa(tmp_low_count, ssu18_ps_work)\ntmp_low_var <- phyloseq::filter_taxa(tmp_low_count, \n                                     function(x) var(x) > 0.2, prune = TRUE)\nssu18_ps_filt <- tmp_low_var\nssu18_ps_filt@phy_tree <- NULL\ntmp_tree <- rtree(ntaxa(ssu18_ps_filt), rooted = TRUE,\n                      tip.label = taxa_names(ssu18_ps_filt))\nssu18_ps_filt <- merge_phyloseq(ssu18_ps_filt,\n                          sample_data,\n                          tmp_tree)\n\nrm(list = ls(pattern = \"tmp_\"))\nssu18_ps_filt\n\nHere is the filtered 16S rRNA phyloseq object.\n\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 1822 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 1822 taxa by 8 taxonomic ranks ]\nphy_tree()    Phylogenetic Tree: [ 1822 tips and 1821 internal nodes ]\n\n\n\n\n(16S rRNA) Table 3 | Summary of arbitrary filtering where ASVs represented by fewer than 5 reads, present in less than 20% of samples, and/or a variance less than 0.2, were removed.\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Metric\":[\"Total number of reads\",\"Min. number of reads\",\"Max. number of reads\",\"Average number of reads\",\"Median number of reads\",\"Total ASVs\",\"Min. number of ASVs\",\"Max. number of ASVs\",\"Average number of ASVs\",\"Median number of ASVs\"],\"Full data\":[936640,25088,86600,62443,62117,20173,813,3065,2063,2124],\"Arbitrary filter\":[729973,15921,63771,48665,50938,1822,376,1011,739,802]},\"columns\":[{\"accessor\":\"Metric\",\"name\":\"Metric\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"Total number of reads\",\"Min. number of reads\",\"Max. number of reads\",\"Average number of reads\",\"Median number of reads\",\"Total ASVs\",\"Min. number of ASVs\",\"Max. number of ASVs\",\"Average number of ASVs\",\"Median number of ASVs\"],\"header\":\"Metric\",\"minWidth\":200,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"Full data\",\"name\":\"Full data\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"936640\",\"25088\",\"86600\",\"62443\",\"62117\",\"20173\",\"813\",\"3065\",\"2063\",\"2124\"],\"header\":\"Full data\",\"minWidth\":150,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Arbitrary filter\",\"name\":\"Arbitrary filter\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"729973\",\"15921\",\"63771\",\"48665\",\"50938\",\"1822\",\"376\",\"1011\",\"739\",\"802\"],\"header\":\"Arbitrary filter\",\"minWidth\":150,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"defaultPageSize\":10,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,10],\"paginationType\":\"numbers\",\"showPagination\":false,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"5a35e7ec6003b0c038897ef2eec7b3d5\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nWe can look at how filtering affected total reads and ASVs for each sample.\n\n\n\n(16S rRNA) Table 4 | Sample summary showing the number of reads and ASVs after Arbitrary filtering.\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Sample_ID\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"PLOT\":[\"P01\",\"P01\",\"P02\",\"P03\",\"P03\",\"P04\",\"P05\",\"P05\",\"P06\",\"P07\",\"P07\",\"P08\",\"P09\",\"P09\",\"P10\"],\"TREAT\":[\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\"],\"TEMP\":[\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\"],\"PAIR\":[\"A\",\"A\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"C\",\"D\",\"D\",\"D\",\"E\",\"E\",\"E\"],\"total_reads\":[53824,52012,57603,61727,34135,43026,38857,63771,61393,50938,50180,46328,61203,15921,39055],\"total_asvs\":[831,620,884,922,422,802,680,572,1011,843,771,813,874,376,670]},\"columns\":[{\"accessor\":\"Sample_ID\",\"name\":\"Sample_ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"header\":\"Sample ID\",\"minWidth\":150,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"PLOT\",\"name\":\"PLOT\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01\",\"P01\",\"P02\",\"P03\",\"P03\",\"P04\",\"P05\",\"P05\",\"P06\",\"P07\",\"P07\",\"P08\",\"P09\",\"P09\",\"P10\"],\"header\":\"PLOT\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"TREAT\",\"name\":\"TREAT\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\"],\"header\":\"TREAT\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"TEMP\",\"name\":\"TEMP\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\"],\"header\":\"TEMP\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"PAIR\",\"name\":\"PAIR\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"A\",\"A\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"C\",\"D\",\"D\",\"D\",\"E\",\"E\",\"E\"],\"header\":\"PAIR\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_reads\",\"name\":\"total_reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"53824\",\"52012\",\"57603\",\"61727\",\"34135\",\"43026\",\"38857\",\"63771\",\"61393\",\"50938\",\"50180\",\"46328\",\"61203\",\"15921\",\"39055\"],\"header\":\"total reads\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_asvs\",\"name\":\"total_asvs\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"831\",\"620\",\"884\",\"922\",\"422\",\"802\",\"680\",\"572\",\"1011\",\"843\",\"771\",\"813\",\"874\",\"376\",\"670\"],\"header\":\"total asvs\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,15],\"paginationType\":\"numbers\",\"showPagination\":true,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"showSortable\":true,\"inline\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"e795895e74a3f3f4f82bc2132f17cb32\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nITS\n\n\nShow code\ntmp_low_count <- phyloseq::genefilter_sample(\n                                         its18_ps_work, \n                                         filterfun_sample(function(x) x >= 5), \n                                         A = 0.2 * nsamples(its18_ps_work))\ntmp_low_count <- phyloseq::prune_taxa(tmp_low_count, its18_ps_work)\ntmp_low_var <- phyloseq::filter_taxa(tmp_low_count, \n                                     function(x) var(x) > 0.2, prune = TRUE)\nits18_ps_filt <- tmp_low_var\nrm(list = ls(pattern = \"tmp_\"))\nits18_ps_filt\n\nAnd the filtered ITS phyloseq object.\n\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 816 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 816 taxa by 8 taxonomic ranks ]\n\n\n\n\n(ITS) Table 3 | Summary of arbitrary filtering where ASVs represented by fewer than 5 reads, present in less than 20% of samples, and/or a variance less than 0.2, were removed.\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Metric\":[\"Total number of reads\",\"Min. number of reads\",\"Max. number of reads\",\"Average number of reads\",\"Median number of reads\",\"Total ASVs\",\"Min. number of ASVs\",\"Max. number of ASVs\",\"Average number of ASVs\",\"Median number of ASVs\"],\"Full data\":[490767,9172,64636,37751,38371,3355,335,1017,757,765],\"Arbitrary filter\":[385643,8692,58360,29665,29052,816,204,499,390,404]},\"columns\":[{\"accessor\":\"Metric\",\"name\":\"Metric\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"Total number of reads\",\"Min. number of reads\",\"Max. number of reads\",\"Average number of reads\",\"Median number of reads\",\"Total ASVs\",\"Min. number of ASVs\",\"Max. number of ASVs\",\"Average number of ASVs\",\"Median number of ASVs\"],\"header\":\"Metric\",\"minWidth\":200,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"Full data\",\"name\":\"Full data\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"490767\",\"9172\",\"64636\",\"37751\",\"38371\",\"3355\",\"335\",\"1017\",\"757\",\"765\"],\"header\":\"Full data\",\"minWidth\":150,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Arbitrary filter\",\"name\":\"Arbitrary filter\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"385643\",\"8692\",\"58360\",\"29665\",\"29052\",\"816\",\"204\",\"499\",\"390\",\"404\"],\"header\":\"Arbitrary filter\",\"minWidth\":150,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"defaultPageSize\":10,\"paginationType\":\"numbers\",\"showPagination\":false,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"596e9fc8afc47e13020a7bb961052303\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nAnd again, let’s look how filtering affected total reads and ASVs for each sample.\n\n\n\n(ITS) Table 4 | Sample summary showing the number of reads and ASVs after Arbitrary filtering.\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Sample_ID\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P10_D00_010_C0E\"],\"PLOT\":[\"P01\",\"P01\",\"P02\",\"P03\",\"P03\",\"P04\",\"P05\",\"P06\",\"P07\",\"P07\",\"P08\",\"P09\",\"P10\"],\"TREAT\":[\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"C\"],\"TEMP\":[\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"0\"],\"PAIR\":[\"A\",\"A\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"D\",\"D\",\"D\",\"E\",\"E\"],\"total_reads\":[26302,27218,43127,29052,10376,38934,22198,36652,31184,8692,31867,21681,58360],\"total_asvs\":[499,344,494,423,204,471,296,486,492,223,345,390,404]},\"columns\":[{\"accessor\":\"Sample_ID\",\"name\":\"Sample_ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P10_D00_010_C0E\"],\"header\":\"Sample ID\",\"minWidth\":150,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"PLOT\",\"name\":\"PLOT\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01\",\"P01\",\"P02\",\"P03\",\"P03\",\"P04\",\"P05\",\"P06\",\"P07\",\"P07\",\"P08\",\"P09\",\"P10\"],\"header\":\"PLOT\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"TREAT\",\"name\":\"TREAT\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"C\"],\"header\":\"TREAT\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"TEMP\",\"name\":\"TEMP\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"0\"],\"header\":\"TEMP\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"PAIR\",\"name\":\"PAIR\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"A\",\"A\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"D\",\"D\",\"D\",\"E\",\"E\"],\"header\":\"PAIR\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_reads\",\"name\":\"total_reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"26302\",\"27218\",\"43127\",\"29052\",\"10376\",\"38934\",\"22198\",\"36652\",\"31184\",\"8692\",\"31867\",\"21681\",\"58360\"],\"header\":\"total reads\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_asvs\",\"name\":\"total_asvs\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"499\",\"344\",\"494\",\"423\",\"204\",\"471\",\"296\",\"486\",\"492\",\"223\",\"345\",\"390\",\"404\"],\"header\":\"total asvs\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,13],\"paginationType\":\"numbers\",\"showPagination\":true,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"showSortable\":true,\"inline\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"b51c2388019161509bc8ecaa8ed2bb73\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nAnd that’s it for Arbitrary filtering. Moving on.\nB. PERfect Filtering\nTo run PERFect, we need the ASV tables in data frame format with samples as rows and ASVs as columns. PERFect is sensitive to the order of ASVs, so here we test a) the default order in the phyloseq object and b) ASVs ordered by decreasing abundance.\nSetup\n\n\nShow code\nsamp_ps_filt <- c(\"ssu18_ps_work\", \"its18_ps_work\")\nfor (i in samp_ps_filt) {\n  tmp_get <- get(i)\n  tmp_get_tab <- data.frame(t(otu_table(tmp_get)))\n  tmp_get_tab <- tmp_get_tab %>% tibble::rownames_to_column(\"ID\")\n  tmp_get_tab <- jamba::mixedSortDF(tmp_get_tab, decreasing = FALSE, \n                                        useRownames = FALSE, byCols = 1)\n  tmp_get_tab <- tmp_get_tab %>% tibble::remove_rownames() \n  tmp_get_tab <- tmp_get_tab %>% tibble::column_to_rownames(\"ID\")\n  tmp_get_tab <- data.frame(t(tmp_get_tab))\n\n  tmp_get_tab_ord <- data.frame(t(otu_table(tmp_get)))\n  tmp_get_tab_ord <- tmp_get_tab_ord %>% tibble::rownames_to_column(\"ID\")\n  tmp_get_tab_ord <- jamba::mixedSortDF(tmp_get_tab_ord, decreasing = TRUE, \n                                        useRownames = FALSE, byCols = 1)\n  tmp_get_tab_ord <- tmp_get_tab_ord %>% tibble::remove_rownames() \n  tmp_get_tab_ord <- tmp_get_tab_ord %>% tibble::column_to_rownames(\"ID\")\n  tmp_get_tab_ord <- data.frame(t(tmp_get_tab_ord))\n\n  tmp_tab_name <- purrr::map_chr(i, ~ paste0(., \"_perfect\"))\n  assign(tmp_tab_name, tmp_get_tab)\n  \n  tmp_tab_ord_name <- purrr::map_chr(i, ~ paste0(., \"_ord_perfect\"))\n  assign(tmp_tab_ord_name, tmp_get_tab_ord)\n  \n  rm(list = ls(pattern = \"tmp_\"))\n}\nobjects()\n\nFilter\nNext we run the filtering analysis using PERFect_sim. The other option is PERFect_perm however I could not get PERFect_perm to work as of this writing. The process never finished :/\nWe need to set an initial p-value cutoff. For 16S rRNA, we use 0.05 and for ITS we use 0.1.\n\n# Set a pvalue cutoff\nssu_per_pval <- 0.05\nits_per_pval <- 0.10\n\n\n\nShow code\nfor (i in samp_ps_filt) {\n  tmp_get <- get(purrr::map_chr(i, ~ paste0(., \"_perfect\")))\n  tmp_pval <- gsub(\"18.*\", \"_per_pval\", i)\n  tmp_get_ord <- get(purrr::map_chr(i, ~ paste0(., \"_ord_perfect\")))\n  tmp_sim <- PERFect_sim(X = tmp_get, alpha = get(tmp_pval), Order = \"NP\", center = FALSE)\n  dim(tmp_sim$filtX)\n  tmp_sim_ord <- PERFect_sim(X = tmp_get_ord, alpha = get(tmp_pval), Order = \"NP\", center = FALSE)\n  dim(tmp_sim_ord$filtX)\n  \n  tmp_sim_name <- purrr::map_chr(i, ~ paste0(., \"_perfect_sim\"))\n  assign(tmp_sim_name, tmp_sim)\n\n  tmp_sim_ord_name <- purrr::map_chr(i, ~ paste0(., \"_ord_perfect_sim\"))\n  assign(tmp_sim_ord_name, tmp_sim_ord)\n  \n  tmp_path <- file.path(\"files/filtering/perfect/rdata/\")\n  saveRDS(tmp_sim, paste(tmp_path, tmp_sim_name, \".rds\", sep = \"\"))\n  saveRDS(tmp_sim_ord, paste(tmp_path, tmp_sim_ord_name, \".rds\", sep = \"\"))\n\n  rm(list = ls(pattern = \"tmp_\"))\n  \n}\nobjects(pattern = \"_sim\")\n\n\n\n\n\n\n\n\n\n\nHow many ASVs were retained after filtering?\nFirst the 16S rRNA data set. Default ordering resulted in 20172 ASVs and reordering the data resulted in 4466 ASVs.\nAnd then the ITS data set. Default ordering resulted in 3354 ASVs and reordering the data resulted in 2133 ASVs.\nFor some reason, the package does not remove based on the p value cutoff that we set earlier (0.05). So we need to filter out the ASVs that have a higher p-value than the cutoff.\n\nTotal 16S rRNA ASVs with p-value less than 0.05 \n[1] default order: ASVs before checking p value was 20172 and after was 1679\n[1] decreasing order: ASVs before checking p value was 4466 and after was 1659\n[1] --------------------------------------\nTotal ITS ASVs with p-value less than 0.1 \n[1] default order: ASVs before checking p-value was 3354 and after was 306\n[1] decreasing order: ASVs before checking p-value was 2133 and after was 264\n\nNow we can make phyloseq objects. Manual inspection of the results from PERFect_sim for the 16S rRNA data indicated that using the decreasing order and filtering p-values less than 0.05 yielded in the best results. Manual inspection of the results from PERFect_sim for the ITS data indicated that using the default order and filtering p-values less than 0.1 yielded in the best results. These approaches limited the number of ASVs found in only 1 or 2 samples. So first we filter out ASVs with p-values lower than the defined cutoff and then make the objects.\n\n# pvalue cutoffs set earlier\nssu_per_pval <- 0.05\nits_per_pval <- 0.10\n# Choose method\nssu_select <- \"_ord_perfect\"\nits_select <- \"_perfect\"\n\n\n\nShow code\nfor (i in samp_ps_filt) {\n  ## select pval cutoff and method\n    tmp_pval <- gsub(\"18.*\", \"_per_pval\", i)\n    tmp_select <- gsub(\"18.*\", \"_select\", i)\n    \n    tmp_get <- get(purrr::map_chr(i, ~ paste0(., get(tmp_select))))\n    tmp_get_sim <- get(purrr::map_chr(i, ~ paste0(., get(tmp_select), \"_sim\")))\n    tmp_filt <- data.frame(t(tmp_get_sim$filtX))\n    tmp_filt <- tmp_filt %>% tibble::rownames_to_column(\"ID\")\n    tmp_tab <- data.frame(t(tmp_get))\n    tmp_tab <- tmp_tab %>% tibble::rownames_to_column(\"ID\")\n    tmp_pvals <- data.frame(tmp_get_sim$pvals)\n    tmp_pvals <- tmp_pvals %>% tibble::rownames_to_column(\"ID\") %>% \n              dplyr::rename(\"pval\" = 2)\n    tmp_pvals <- tmp_pvals %>% filter(pval <= get(tmp_pval))\n    tmp_merge <- dplyr::left_join(tmp_pvals, tmp_tab, by = \"ID\")\n    tmp_merge[, 2] <- NULL\n    tmp_merge <- tmp_merge %>% tibble::column_to_rownames(\"ID\")\n    tmp_tax <- data.frame(tax_table(get(i))) %>% tibble::rownames_to_column(\"ID\")\n    tmp_tax <- dplyr::left_join(tmp_pvals, tmp_tax, by = \"ID\")\n    tmp_tax[, 2] <- NULL\n    tmp_tax <- tmp_tax %>% tibble::column_to_rownames(\"ID\")\n# Build PS object\n    tmp_samp <- data.frame(sample_data(get(i)))\n    identical(row.names(tmp_tax), row.names(tmp_merge))\n    tmp_merge <- data.frame(t(tmp_merge))\n    tmp_merge <- as.matrix(tmp_merge)\n    tmp_tax <- as.matrix(tmp_tax)\n    tmp_ps <- phyloseq(otu_table(tmp_merge, taxa_are_rows = FALSE),\n                     tax_table(tmp_tax),\n                     sample_data(tmp_samp))\n    \n    tmp_tree <- rtree(ntaxa(tmp_ps), rooted = TRUE,\n                           tip.label = taxa_names(tmp_ps))\n    tmp_ps <- merge_phyloseq(tmp_ps,\n                               sample_data,\n                               tmp_tree)\n    tmp_ps_name <- purrr::map_chr(i, ~ paste0(., \"_perf_filt\"))\n    assign(tmp_ps_name, tmp_ps)\n    rm(list = ls(pattern = \"tmp_\"))\n}  \n\nssu18_ps_perfect <- ssu18_ps_work_perf_filt\nits18_ps_perfect <- its18_ps_work_perf_filt\nrm(list = ls(pattern = \"_perf_filt\"))\n\n\n[1] 16S rRNA phyloseq object\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 1659 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 1659 taxa by 8 taxonomic ranks ]\nphy_tree()    Phylogenetic Tree: [ 1659 tips and 1658 internal nodes ]\n[1] ITS phyloseq object\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 306 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 306 taxa by 8 taxonomic ranks ]\nphy_tree()    Phylogenetic Tree: [ 306 tips and 305 internal nodes ]\n\nSummary\nHow many reads and ASVs were removed following PERfect filtering?\n16S rRNA\n\n\n\n(16S rRNA) Table 5 | Summary of PERfect filtering using the decreased order and filtering p-values < 0.05.\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Metric\":[\"Total number of reads\",\"Min. number of reads\",\"Max. number of reads\",\"Average number of reads\",\"Median number of reads\",\"Total ASVs\",\"Min. number of ASVs\",\"Max. number of ASVs\",\"Average number of ASVs\",\"Median number of ASVs\"],\"Full data\":[936640,25088,86600,62443,62117,20173,813,3065,2063,2124],\"PERfect filter\":[731508,16697,71026,48767,50241,1659,332,857,645,671]},\"columns\":[{\"accessor\":\"Metric\",\"name\":\"Metric\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"Total number of reads\",\"Min. number of reads\",\"Max. number of reads\",\"Average number of reads\",\"Median number of reads\",\"Total ASVs\",\"Min. number of ASVs\",\"Max. number of ASVs\",\"Average number of ASVs\",\"Median number of ASVs\"],\"header\":\"Metric\",\"minWidth\":200,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"Full data\",\"name\":\"Full data\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"936640\",\"25088\",\"86600\",\"62443\",\"62117\",\"20173\",\"813\",\"3065\",\"2063\",\"2124\"],\"header\":\"Full data\",\"minWidth\":150,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"PERfect filter\",\"name\":\"PERfect filter\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"731508\",\"16697\",\"71026\",\"48767\",\"50241\",\"1659\",\"332\",\"857\",\"645\",\"671\"],\"header\":\"PERfect filter\",\"minWidth\":150,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"defaultPageSize\":10,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,10],\"paginationType\":\"numbers\",\"showPagination\":false,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"ce1119ec77494a0b33acd2611fc86c2a\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nITS\n\n\n\n(ITS) Table 5 | Summary of PERfect filtering using the defualt order and filtering p-values < 0.10.\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Metric\":[\"Total number of reads\",\"Min. number of reads\",\"Max. number of reads\",\"Average number of reads\",\"Median number of reads\",\"Total ASVs\",\"Min. number of ASVs\",\"Max. number of ASVs\",\"Average number of ASVs\",\"Median number of ASVs\"],\"Full data\":[490767,9172,64636,37751,38371,3355,335,1017,757,765],\"PERfect filter\":[361399,7286,56772,27800,24313,306,64,161,122,136]},\"columns\":[{\"accessor\":\"Metric\",\"name\":\"Metric\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"Total number of reads\",\"Min. number of reads\",\"Max. number of reads\",\"Average number of reads\",\"Median number of reads\",\"Total ASVs\",\"Min. number of ASVs\",\"Max. number of ASVs\",\"Average number of ASVs\",\"Median number of ASVs\"],\"header\":\"Metric\",\"minWidth\":200,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"Full data\",\"name\":\"Full data\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"490767\",\"9172\",\"64636\",\"37751\",\"38371\",\"3355\",\"335\",\"1017\",\"757\",\"765\"],\"header\":\"Full data\",\"minWidth\":150,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"PERfect filter\",\"name\":\"PERfect filter\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"361399\",\"7286\",\"56772\",\"27800\",\"24313\",\"306\",\"64\",\"161\",\"122\",\"136\"],\"header\":\"PERfect filter\",\"minWidth\":150,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"defaultPageSize\":10,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,10],\"paginationType\":\"numbers\",\"showPagination\":false,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"0db8f2eee8f31ed5f725ee80f25868d0\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nHere is a summary table of total reads and ASVs on a per sample basis after filtering.\n16S rRNA\n\n\n\n(16S rRNA) Table 6 | Sample summary showing the number of reads and ASVs after PERfect filtering.\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Sample_ID\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"PLOT\":[\"P01\",\"P01\",\"P02\",\"P03\",\"P03\",\"P04\",\"P05\",\"P05\",\"P06\",\"P07\",\"P07\",\"P08\",\"P09\",\"P09\",\"P10\"],\"TREAT\":[\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\"],\"TEMP\":[\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\"],\"PAIR\":[\"A\",\"A\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"C\",\"D\",\"D\",\"D\",\"E\",\"E\",\"E\"],\"total_reads\":[52980,52327,56619,60366,35604,41624,37877,71026,61277,49877,50241,45633,61033,16697,38327],\"total_asvs\":[707,563,737,764,411,663,574,661,857,725,671,681,751,332,571]},\"columns\":[{\"accessor\":\"Sample_ID\",\"name\":\"Sample_ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"header\":\"Sample ID\",\"minWidth\":150,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"PLOT\",\"name\":\"PLOT\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01\",\"P01\",\"P02\",\"P03\",\"P03\",\"P04\",\"P05\",\"P05\",\"P06\",\"P07\",\"P07\",\"P08\",\"P09\",\"P09\",\"P10\"],\"header\":\"PLOT\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"TREAT\",\"name\":\"TREAT\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\"],\"header\":\"TREAT\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"TEMP\",\"name\":\"TEMP\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\"],\"header\":\"TEMP\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"PAIR\",\"name\":\"PAIR\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"A\",\"A\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"C\",\"D\",\"D\",\"D\",\"E\",\"E\",\"E\"],\"header\":\"PAIR\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_reads\",\"name\":\"total_reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"52980\",\"52327\",\"56619\",\"60366\",\"35604\",\"41624\",\"37877\",\"71026\",\"61277\",\"49877\",\"50241\",\"45633\",\"61033\",\"16697\",\"38327\"],\"header\":\"total reads\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_asvs\",\"name\":\"total_asvs\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"707\",\"563\",\"737\",\"764\",\"411\",\"663\",\"574\",\"661\",\"857\",\"725\",\"671\",\"681\",\"751\",\"332\",\"571\"],\"header\":\"total asvs\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,15],\"paginationType\":\"numbers\",\"showPagination\":true,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"showSortable\":true,\"inline\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"58e05dd3776fa79a2ec31f9c6f9c2c2e\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nITS\n\n\n\n(ITS) Table 6 | Sample summary showing the number of reads and ASVs after PERfect filtering.\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Sample_ID\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P10_D00_010_C0E\"],\"PLOT\":[\"P01\",\"P01\",\"P02\",\"P03\",\"P03\",\"P04\",\"P05\",\"P06\",\"P07\",\"P07\",\"P08\",\"P09\",\"P10\"],\"TREAT\":[\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"C\"],\"TEMP\":[\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"0\"],\"PAIR\":[\"A\",\"A\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"D\",\"D\",\"D\",\"E\",\"E\"],\"total_reads\":[23737,23850,39689,28256,8138,47654,20831,35923,24313,7286,28420,16530,56772],\"total_asvs\":[148,98,147,136,64,161,90,157,147,76,105,118,143]},\"columns\":[{\"accessor\":\"Sample_ID\",\"name\":\"Sample_ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P10_D00_010_C0E\"],\"header\":\"Sample ID\",\"minWidth\":150,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"PLOT\",\"name\":\"PLOT\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01\",\"P01\",\"P02\",\"P03\",\"P03\",\"P04\",\"P05\",\"P06\",\"P07\",\"P07\",\"P08\",\"P09\",\"P10\"],\"header\":\"PLOT\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"TREAT\",\"name\":\"TREAT\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"C\"],\"header\":\"TREAT\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"TEMP\",\"name\":\"TEMP\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"0\"],\"header\":\"TEMP\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"PAIR\",\"name\":\"PAIR\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"A\",\"A\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"D\",\"D\",\"D\",\"E\",\"E\"],\"header\":\"PAIR\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_reads\",\"name\":\"total_reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"23737\",\"23850\",\"39689\",\"28256\",\"8138\",\"47654\",\"20831\",\"35923\",\"24313\",\"7286\",\"28420\",\"16530\",\"56772\"],\"header\":\"total reads\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_asvs\",\"name\":\"total_asvs\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"148\",\"98\",\"147\",\"136\",\"64\",\"161\",\"90\",\"157\",\"147\",\"76\",\"105\",\"118\",\"143\"],\"header\":\"total asvs\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,13],\"paginationType\":\"numbers\",\"showPagination\":true,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"showSortable\":true,\"inline\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"598055a988435905141931e6fdfa26ea\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nAnd finally, save the PERfect filtered phyloseq objects.\n\n\nShow code\nsaveRDS(ssu18_ps_perfect, \"files/filtering/perfect/rdata/ssu18_ps_perfect.rds\")\nsaveRDS(its18_ps_perfect, \"files/filtering/perfect/rdata/its18_ps_perfect.rds\")\n\n\n\n\nC. PIME Filtering\nThe first step in the PIME process is to rarefy the data and then proceed with the filtering. Unlike the two previous workflows—which combined the analyses of the 16S rRNA and ITS data sets—here the two data sets will be analyzed separately because the PIME workflow is considerably more complicated.\n16S rRNA\nSetup\nFirst, choose a phyloseq object and a sample data frame\n\nssu18_pime_ds <- ssu18_ps_work\nssu18_which_pime <- \"ssu18_pime_ds\"\nssu18_pime_ds@phy_tree <- NULL\nssu18_pime_ds\n\n\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 20173 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 20173 taxa by 8 taxonomic ranks ]\n\n\nssu18_pime_sample_d <- data.frame(rowSums(otu_table(ssu18_pime_ds_full)))\nssu18_pime_sample_d <- ssu18_pime_sample_d %>% dplyr::rename(total_reads = 1)\n\nssu18_pime_ds <- rarefy_even_depth(ssu18_pime_ds_full,\n                               sample.size = min(ssu18_pime_sample_d$total_reads),\n                               trimOTUs = TRUE, replace = FALSE,\n                               rngseed = 119)\n\n2741 OTUs were removed because they are no longer \npresent in any sample after random subsampling\n\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 17432 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 17432 taxa by 8 taxonomic ranks ]\n\nThe first step in PIME is to define if the microbial community presents a high relative abundance of taxa with low prevalence, which is considered as noise in PIME analysis. This is calculated by random forests analysis and is the baseline noise detection.\n\nssu18_pime.oob.error <- pime.oob.error(ssu18_pime_ds, \"TEMP\")\n\n\n[1] 0.6666667\n\nSplit by Predictor Variable\n\ndata.frame(sample_data(ssu18_pime_ds))\nssu18_per_variable_obj <- pime.split.by.variable(ssu18_pime_ds, \"TEMP\")\nssu18_per_variable_obj\n\n\n$`0`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 7883 taxa and 5 samples ]\nsample_data() Sample Data:       [ 5 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 7883 taxa by 8 taxonomic ranks ]\n\n$`3`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 7173 taxa and 5 samples ]\nsample_data() Sample Data:       [ 5 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 7173 taxa by 8 taxonomic ranks ]\n\n$`8`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 6027 taxa and 5 samples ]\nsample_data() Sample Data:       [ 5 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 6027 taxa by 8 taxonomic ranks ]\n\nCalculate Prevalence Intervals\nUsing the output of pime.split.by.variable, we calculate the prevalence intervals with the function pime.prevalence. This function estimates the highest prevalence possible (no empty ASV table), calculates prevalence for taxa, starting at 5 maximum prevalence possible (no empty ASV table or dropping samples). After prevalence calculation, each prevalence interval are merged.\n\nssu18_prevalences <- pime.prevalence(ssu18_per_variable_obj)\nssu18_prevalences\n\n\nDetailed results for all prevalences intervals\n\n$`5`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 17432 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 17432 taxa by 8 taxonomic ranks ]\n\n$`10`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 17432 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 17432 taxa by 8 taxonomic ranks ]\n\n$`15`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 17432 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 17432 taxa by 8 taxonomic ranks ]\n\n$`20`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 2253 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 2253 taxa by 8 taxonomic ranks ]\n\n$`25`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 2253 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 2253 taxa by 8 taxonomic ranks ]\n\n$`30`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 2253 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 2253 taxa by 8 taxonomic ranks ]\n\n$`35`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 2253 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 2253 taxa by 8 taxonomic ranks ]\n\n$`40`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 1058 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 1058 taxa by 8 taxonomic ranks ]\n\n$`45`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 1058 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 1058 taxa by 8 taxonomic ranks ]\n\n$`50`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 1058 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 1058 taxa by 8 taxonomic ranks ]\n\n$`55`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 1058 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 1058 taxa by 8 taxonomic ranks ]\n\n$`60`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 585 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 585 taxa by 8 taxonomic ranks ]\n\n$`65`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 585 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 585 taxa by 8 taxonomic ranks ]\n\n$`70`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 585 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 585 taxa by 8 taxonomic ranks ]\n\n$`75`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 585 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 585 taxa by 8 taxonomic ranks ]\n\n$`80`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 294 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 294 taxa by 8 taxonomic ranks ]\n\n$`85`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 294 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 294 taxa by 8 taxonomic ranks ]\n\n$`90`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 294 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 294 taxa by 8 taxonomic ranks ]\n\n$`95`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 294 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 294 taxa by 8 taxonomic ranks ]\n\nCalculate Best Prevalence\nFinally, we use the function pime.best.prevalence to calculate the best prevalence. The function uses randomForest to build random forests trees for samples classification and variable importance computation. It performs classifications for each prevalence interval returned by pime.prevalence. Variable importance is calculated, returning the Mean Decrease Accuracy (MDA), Mean Decrease Impurity (MDI), overall and by sample group, and taxonomy for each ASV. PIME keeps the top 30 variables with highest MDA each prevalence level.\n\nset.seed(1911)\nssu18_best.prev <- pime.best.prevalence(ssu18_prevalences, \"TEMP\")\n\n\n         Interval OOB error rate (%)  OTUs  Nseqs\n1   Prevalence 5%              66.67 17432 376320\n2  Prevalence 10%              66.67 17432 376320\n3  Prevalence 15%                 60 17432 376320\n4  Prevalence 20%                 40  2253 282185\n5  Prevalence 25%              33.33  2253 282185\n6  Prevalence 30%              26.67  2253 282185\n7  Prevalence 35%              26.67  2253 282185\n8  Prevalence 40%               6.67  1058 232532\n9  Prevalence 45%               6.67  1058 232532\n10 Prevalence 50%                  0  1058 232532\n11 Prevalence 55%                  0  1058 232532\n12 Prevalence 60%                  0   585 192484\n13 Prevalence 65%                  0   585 192484\n14 Prevalence 70%                  0   585 192484\n15 Prevalence 75%                  0   585 192484\n16 Prevalence 80%                  0   294 149258\n17 Prevalence 85%                  0   294 149258\n18 Prevalence 90%                  0   294 149258\n19 Prevalence 95%                  0   294 149258\n\n\nssu18_what_is_best <- ssu18_best.prev$`OOB error`\nssu18_what_is_best[, c(2:4)] <- sapply(ssu18_what_is_best[, c(2:4)], as.numeric)\nssu18_what_is_best <- ssu18_what_is_best %>%\n  dplyr::rename(\"OOB_error_rate\" = \"OOB error rate (%)\")\nssu18_what_is_best$Interval <- str_replace_all(ssu18_what_is_best$Interval, \"%\", \"\")\nssu18_best <- with(ssu18_what_is_best, Interval[which.min(OOB_error_rate)])\nssu18_best <- paste(\"`\", ssu18_best, \"`\", sep = \"\")\nssu18_prev_choice <- paste(\"ssu18_best.prev$`Importance`$\", ssu18_best, sep = \"\")\nssu18_imp_best <- eval(parse(text = (ssu18_prev_choice)))\n\nLooks like the lowest OOB error rate (%) that retains the most ASVs is 0% from Prevalence 50. We will use this interval.\nBest Prevalence Summary\n\n\n\n(16S rRNA) Table 7 | Summary of top 30 ASVs from the chosen prevalence interval.\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"ASV_ID\":[\"ASV114\",\"ASV146\",\"ASV39\",\"ASV157\",\"ASV488\",\"ASV137\",\"ASV340\",\"ASV289\",\"ASV918\",\"ASV282\",\"ASV861\",\"ASV314\",\"ASV508\",\"ASV1035\",\"ASV1426\",\"ASV254\",\"ASV410\",\"ASV212\",\"ASV134\",\"ASV185\",\"ASV64\",\"ASV472\",\"ASV575\",\"ASV558\",\"ASV454\",\"ASV686\",\"ASV199\",\"ASV412\",\"ASV324\",\"ASV126\"],\"Control\":[0.0027,0.0063,0.0027,0.003,0.01,0.002,0.0103,0.0087,0.002,0.002,0.01,0.008,-0.0007,0,0.005,0.001,0.007,0.002,0.004,0.002,0.0007,0.0025,0.004,0,0.0027,0,0.006,0.007,0.0027,0.0053],\"Warm_3\":[0.0027,0.0013,0.003,0.006,0,0.0017,0.002,0.003,0.01,0.003,0.0025,0.002,0.003,0.0037,0.002,0.003,0.001,0.004,0,0.0007,0.004,0.001,0.005,0.006,0.001,0.001,0.001,0.0007,0.0037,-0.0017],\"Warm_8\":[0.0133,0.013,0.01,0.0117,0.0055,0.011,0.002,0.0027,0.002,0.0078,0.0017,0.0027,0.0093,0.006,0.0017,0.005,0.001,0.001,0.006,0.006,0.0037,0.006,0,0.003,0.0043,0.006,0.002,0.002,0,0.005],\"MeanDecreaseAccuracy\":[0.0068,0.0067,0.0059,0.0058,0.0051,0.0047,0.0043,0.0039,0.0038,0.0037,0.0036,0.0036,0.0035,0.0032,0.0032,0.0032,0.0031,0.0031,0.003,0.003,0.003,0.0029,0.0027,0.0027,0.0026,0.0026,0.0026,0.0026,0.0025,0.0025],\"MeanDecreaseGini\":[0.1096,0.1228,0.0898,0.0871,0.0677,0.0841,0.0612,0.0523,0.0779,0.0467,0.0898,0.0723,0.0666,0.0338,0.0542,0.0532,0.1024,0.0442,0.0714,0.0828,0.0344,0.0431,0.0204,0.0454,0.0309,0.0457,0.0459,0.0541,0.0568,0.0615],\"Kingdom\":[\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\"],\"Phylum\":[\"Proteobacteria\",\"Proteobacteria\",\"Acidobacteriota\",\"Verrucomicrobiota\",\"Planctomycetota\",\"Acidobacteriota\",\"Planctomycetota\",\"Verrucomicrobiota\",\"Proteobacteria\",\"Verrucomicrobiota\",\"Actinobacteriota\",\"Acidobacteriota\",\"Chloroflexi\",\"Chloroflexi\",\"Bacteroidota\",\"Proteobacteria\",\"Desulfobacterota\",\"Verrucomicrobiota\",\"Proteobacteria\",\"Proteobacteria\",\"Acidobacteriota\",\"k_Bacteria\",\"Verrucomicrobiota\",\"Acidobacteriota\",\"NB1-j\",\"Actinobacteriota\",\"Planctomycetota\",\"Proteobacteria\",\"Latescibacterota\",\"Acidobacteriota\"],\"Class\":[\"Alphaproteobacteria\",\"Gammaproteobacteria\",\"Vicinamibacteria\",\"Verrucomicrobiae\",\"OM190\",\"Subgroup_5\",\"OM190\",\"Verrucomicrobiae\",\"Alphaproteobacteria\",\"Verrucomicrobiae\",\"Actinobacteria\",\"Subgroup_22\",\"Anaerolineae\",\"Dehalococcoidia\",\"Bacteroidia\",\"Gammaproteobacteria\",\"p_Desulfobacterota\",\"Verrucomicrobiae\",\"Alphaproteobacteria\",\"Gammaproteobacteria\",\"Thermoanaerobaculia\",\"k_Bacteria\",\"Verrucomicrobiae\",\"Vicinamibacteria\",\"p_NB1-j\",\"Actinobacteria\",\"OM190\",\"Alphaproteobacteria\",\"p_Latescibacterota\",\"Subgroup_5\"],\"Order\":[\"Rhizobiales\",\"Burkholderiales\",\"Vicinamibacterales\",\"Chthoniobacterales\",\"c_OM190\",\"c_Subgroup_5\",\"c_OM190\",\"Chthoniobacterales\",\"Rhizobiales\",\"Pedosphaerales\",\"Corynebacteriales\",\"c_Subgroup_22\",\"Anaerolineales\",\"S085\",\"Chitinophagales\",\"Burkholderiales\",\"p_Desulfobacterota\",\"Pedosphaerales\",\"Rhizobiales\",\"Burkholderiales\",\"Thermoanaerobaculales\",\"k_Bacteria\",\"Pedosphaerales\",\"Vicinamibacterales\",\"p_NB1-j\",\"Frankiales\",\"c_OM190\",\"Caulobacterales\",\"p_Latescibacterota\",\"c_Subgroup_5\"],\"Family\":[\"Xanthobacteraceae\",\"Nitrosomonadaceae\",\"o_Vicinamibacterales\",\"Xiphinematobacteraceae\",\"c_OM190\",\"c_Subgroup_5\",\"c_OM190\",\"Xiphinematobacteraceae\",\"Rhizobiaceae\",\"Pedosphaeraceae\",\"Mycobacteriaceae\",\"c_Subgroup_22\",\"Anaerolineaceae\",\"o_S085\",\"Chitinophagaceae\",\"Sutterellaceae\",\"p_Desulfobacterota\",\"Pedosphaeraceae\",\"Xanthobacteraceae\",\"TRA3-20\",\"Thermoanaerobaculaceae\",\"k_Bacteria\",\"Pedosphaeraceae\",\"o_Vicinamibacterales\",\"p_NB1-j\",\"Acidothermaceae\",\"c_OM190\",\"Hyphomonadaceae\",\"p_Latescibacterota\",\"c_Subgroup_5\"],\"Genus\":[\"f_Xanthobacteraceae\",\"MND1\",\"o_Vicinamibacterales\",\"Candidatus_Xiphinematobacter\",\"c_OM190\",\"c_Subgroup_5\",\"c_OM190\",\"Candidatus_Xiphinematobacter\",\"Allorhizobium-Neorhizobium-Pararhizobium-Rhizobium\",\"f_Pedosphaeraceae\",\"Mycobacterium\",\"c_Subgroup_22\",\"f_Anaerolineaceae\",\"o_S085\",\"Edaphobaculum\",\"f_Sutterellaceae\",\"p_Desulfobacterota\",\"ADurb.Bin063-1\",\"f_Xanthobacteraceae\",\"f_TRA3-20\",\"Subgroup_10\",\"k_Bacteria\",\"f_Pedosphaeraceae\",\"o_Vicinamibacterales\",\"p_NB1-j\",\"Acidothermus\",\"c_OM190\",\"SWB02\",\"p_Latescibacterota\",\"c_Subgroup_5\"]},\"columns\":[{\"accessor\":\"ASV_ID\",\"name\":\"ASV ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"ASV114\",\"ASV146\",\"ASV39\",\"ASV157\",\"ASV488\",\"ASV137\",\"ASV340\",\"ASV289\",\"ASV918\",\"ASV282\",\"ASV861\",\"ASV314\",\"ASV508\",\"ASV1035\",\"ASV1426\",\"ASV254\",\"ASV410\",\"ASV212\",\"ASV134\",\"ASV185\",\"ASV64\",\"ASV472\",\"ASV575\",\"ASV558\",\"ASV454\",\"ASV686\",\"ASV199\",\"ASV412\",\"ASV324\",\"ASV126\"],\"header\":\"ASV ID\",\"minWidth\":100,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"Control\",\"name\":\"Control\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.0027\",\"0.0063\",\"0.0027\",\"0.0030\",\"0.0100\",\"0.0020\",\"0.0103\",\"0.0087\",\"0.0020\",\"0.0020\",\"0.0100\",\"0.0080\",\"-0.0007\",\"0.0000\",\"0.0050\",\"0.0010\",\"0.0070\",\"0.0020\",\"0.0040\",\"0.0020\",\"0.0007\",\"0.0025\",\"0.0040\",\"0.0000\",\"0.0027\",\"0.0000\",\"0.0060\",\"0.0070\",\"0.0027\",\"0.0053\"],\"header\":\"Control\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Warm_3\",\"name\":\"Warm_3\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.0027\",\"0.0013\",\"0.0030\",\"0.0060\",\"0.0000\",\"0.0017\",\"0.0020\",\"0.0030\",\"0.0100\",\"0.0030\",\"0.0025\",\"0.0020\",\"0.0030\",\"0.0037\",\"0.0020\",\"0.0030\",\"0.0010\",\"0.0040\",\"0.0000\",\"0.0007\",\"0.0040\",\"0.0010\",\"0.0050\",\"0.0060\",\"0.0010\",\"0.0010\",\"0.0010\",\"0.0007\",\"0.0037\",\"-0.0017\"],\"header\":\"Warm 3\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Warm_8\",\"name\":\"Warm_8\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.0133\",\"0.0130\",\"0.0100\",\"0.0117\",\"0.0055\",\"0.0110\",\"0.0020\",\"0.0027\",\"0.0020\",\"0.0078\",\"0.0017\",\"0.0027\",\"0.0093\",\"0.0060\",\"0.0017\",\"0.0050\",\"0.0010\",\"0.0010\",\"0.0060\",\"0.0060\",\"0.0037\",\"0.0060\",\"0.0000\",\"0.0030\",\"0.0043\",\"0.0060\",\"0.0020\",\"0.0020\",\"0.0000\",\"0.0050\"],\"header\":\"Warm 8\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"MeanDecreaseAccuracy\",\"name\":\"MeanDecreaseAccuracy\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.0068\",\"0.0067\",\"0.0059\",\"0.0058\",\"0.0051\",\"0.0047\",\"0.0043\",\"0.0039\",\"0.0038\",\"0.0037\",\"0.0036\",\"0.0036\",\"0.0035\",\"0.0032\",\"0.0032\",\"0.0032\",\"0.0031\",\"0.0031\",\"0.0030\",\"0.0030\",\"0.0030\",\"0.0029\",\"0.0027\",\"0.0027\",\"0.0026\",\"0.0026\",\"0.0026\",\"0.0026\",\"0.0025\",\"0.0025\"],\"header\":\"MeanDecreaseAccuracy\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"MeanDecreaseGini\",\"name\":\"MeanDecreaseGini\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.1096\",\"0.1228\",\"0.0898\",\"0.0871\",\"0.0677\",\"0.0841\",\"0.0612\",\"0.0523\",\"0.0779\",\"0.0467\",\"0.0898\",\"0.0723\",\"0.0666\",\"0.0338\",\"0.0542\",\"0.0532\",\"0.1024\",\"0.0442\",\"0.0714\",\"0.0828\",\"0.0344\",\"0.0431\",\"0.0204\",\"0.0454\",\"0.0309\",\"0.0457\",\"0.0459\",\"0.0541\",\"0.0568\",\"0.0615\"],\"header\":\"MeanDecreaseGini\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Kingdom\",\"name\":\"Kingdom\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\",\"Bacteria\"],\"header\":\"Kingdom\",\"minWidth\":100,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Phylum\",\"name\":\"Phylum\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"Proteobacteria\",\"Proteobacteria\",\"Acidobacteriota\",\"Verrucomicrobiota\",\"Planctomycetota\",\"Acidobacteriota\",\"Planctomycetota\",\"Verrucomicrobiota\",\"Proteobacteria\",\"Verrucomicrobiota\",\"Actinobacteriota\",\"Acidobacteriota\",\"Chloroflexi\",\"Chloroflexi\",\"Bacteroidota\",\"Proteobacteria\",\"Desulfobacterota\",\"Verrucomicrobiota\",\"Proteobacteria\",\"Proteobacteria\",\"Acidobacteriota\",\"k_Bacteria\",\"Verrucomicrobiota\",\"Acidobacteriota\",\"NB1-j\",\"Actinobacteriota\",\"Planctomycetota\",\"Proteobacteria\",\"Latescibacterota\",\"Acidobacteriota\"],\"header\":\"Phylum\",\"minWidth\":150,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Class\",\"name\":\"Class\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"Alphaproteobacteria\",\"Gammaproteobacteria\",\"Vicinamibacteria\",\"Verrucomicrobiae\",\"OM190\",\"Subgroup_5\",\"OM190\",\"Verrucomicrobiae\",\"Alphaproteobacteria\",\"Verrucomicrobiae\",\"Actinobacteria\",\"Subgroup_22\",\"Anaerolineae\",\"Dehalococcoidia\",\"Bacteroidia\",\"Gammaproteobacteria\",\"p_Desulfobacterota\",\"Verrucomicrobiae\",\"Alphaproteobacteria\",\"Gammaproteobacteria\",\"Thermoanaerobaculia\",\"k_Bacteria\",\"Verrucomicrobiae\",\"Vicinamibacteria\",\"p_NB1-j\",\"Actinobacteria\",\"OM190\",\"Alphaproteobacteria\",\"p_Latescibacterota\",\"Subgroup_5\"],\"header\":\"Class\",\"minWidth\":150,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Order\",\"name\":\"Order\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"Rhizobiales\",\"Burkholderiales\",\"Vicinamibacterales\",\"Chthoniobacterales\",\"c_OM190\",\"c_Subgroup_5\",\"c_OM190\",\"Chthoniobacterales\",\"Rhizobiales\",\"Pedosphaerales\",\"Corynebacteriales\",\"c_Subgroup_22\",\"Anaerolineales\",\"S085\",\"Chitinophagales\",\"Burkholderiales\",\"p_Desulfobacterota\",\"Pedosphaerales\",\"Rhizobiales\",\"Burkholderiales\",\"Thermoanaerobaculales\",\"k_Bacteria\",\"Pedosphaerales\",\"Vicinamibacterales\",\"p_NB1-j\",\"Frankiales\",\"c_OM190\",\"Caulobacterales\",\"p_Latescibacterota\",\"c_Subgroup_5\"],\"header\":\"Order\",\"minWidth\":150,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Family\",\"name\":\"Family\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"Xanthobacteraceae\",\"Nitrosomonadaceae\",\"o_Vicinamibacterales\",\"Xiphinematobacteraceae\",\"c_OM190\",\"c_Subgroup_5\",\"c_OM190\",\"Xiphinematobacteraceae\",\"Rhizobiaceae\",\"Pedosphaeraceae\",\"Mycobacteriaceae\",\"c_Subgroup_22\",\"Anaerolineaceae\",\"o_S085\",\"Chitinophagaceae\",\"Sutterellaceae\",\"p_Desulfobacterota\",\"Pedosphaeraceae\",\"Xanthobacteraceae\",\"TRA3-20\",\"Thermoanaerobaculaceae\",\"k_Bacteria\",\"Pedosphaeraceae\",\"o_Vicinamibacterales\",\"p_NB1-j\",\"Acidothermaceae\",\"c_OM190\",\"Hyphomonadaceae\",\"p_Latescibacterota\",\"c_Subgroup_5\"],\"header\":\"Family\",\"minWidth\":150,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Genus\",\"name\":\"Genus\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"f_Xanthobacteraceae\",\"MND1\",\"o_Vicinamibacterales\",\"Candidatus_Xiphinematobacter\",\"c_OM190\",\"c_Subgroup_5\",\"c_OM190\",\"Candidatus_Xiphinematobacter\",\"Allorhizobium-Neorhizobium-Pararhizobium-Rhizobium\",\"f_Pedosphaeraceae\",\"Mycobacterium\",\"c_Subgroup_22\",\"f_Anaerolineaceae\",\"o_S085\",\"Edaphobaculum\",\"f_Sutterellaceae\",\"p_Desulfobacterota\",\"ADurb.Bin063-1\",\"f_Xanthobacteraceae\",\"f_TRA3-20\",\"Subgroup_10\",\"k_Bacteria\",\"f_Pedosphaeraceae\",\"o_Vicinamibacterales\",\"p_NB1-j\",\"Acidothermus\",\"c_OM190\",\"SWB02\",\"p_Latescibacterota\",\"c_Subgroup_5\"],\"header\":\"Genus\",\"minWidth\":150,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,30],\"paginationType\":\"numbers\",\"showPagination\":true,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"b25b2792200a7084fe5f9480d9048713\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nHere is a list of the top 30 ASVs.\n\n [1] \"ASV114\"  \"ASV146\"  \"ASV39\"   \"ASV157\"  \"ASV488\"  \"ASV137\" \n [7] \"ASV340\"  \"ASV289\"  \"ASV918\"  \"ASV282\"  \"ASV861\"  \"ASV314\" \n[13] \"ASV508\"  \"ASV1035\" \"ASV1426\" \"ASV254\"  \"ASV410\"  \"ASV212\" \n[19] \"ASV134\"  \"ASV185\"  \"ASV64\"   \"ASV472\"  \"ASV575\"  \"ASV558\" \n[25] \"ASV454\"  \"ASV686\"  \"ASV199\"  \"ASV412\"  \"ASV324\"  \"ASV126\" \n\nNow we need to create a phyloseq object of ASVs at this cutoff (Prevalence 50).\n\nssu18_best_val <- str_replace_all(ssu18_best, \"Prevalence \", \"\")\nssu18_best_val <- paste(\"ssu18_prevalences$\", ssu18_best_val, sep = \"\")\nssu18_prevalence_best <- eval(parse(text = (ssu18_best_val)))\nsaveRDS(ssu18_prevalence_best, \"files/filtering/pime/rdata/ssu18_prevalence_best.rds\")\n\nAnd look at a summary of the phyloseq object.\n\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 1058 taxa and 15 samples ]\nsample_data() Sample Data:       [ 15 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 1058 taxa by 8 taxonomic ranks ]\n\n\n\n\n(16S rRNA) Table 5 | Summary of PERfect filtering using the decreased order and filtering p-values < 0.05.\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Metric\":[\"Total number of reads\",\"Min. number of reads\",\"Max. number of reads\",\"Average number of reads\",\"Median number of reads\",\"Total ASVs\",\"Min. number of ASVs\",\"Max. number of ASVs\",\"Average number of ASVs\",\"Median number of ASVs\"],\"Full data\":[936640,25088,86600,62443,62117,20173,813,3065,2063,2124],\"PIME filter\":[232532,10585,18360,15502,15780,1058,170,664,458,502]},\"columns\":[{\"accessor\":\"Metric\",\"name\":\"Metric\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"Total number of reads\",\"Min. number of reads\",\"Max. number of reads\",\"Average number of reads\",\"Median number of reads\",\"Total ASVs\",\"Min. number of ASVs\",\"Max. number of ASVs\",\"Average number of ASVs\",\"Median number of ASVs\"],\"header\":\"Metric\",\"minWidth\":200,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"Full data\",\"name\":\"Full data\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"936640\",\"25088\",\"86600\",\"62443\",\"62117\",\"20173\",\"813\",\"3065\",\"2063\",\"2124\"],\"header\":\"Full data\",\"minWidth\":150,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"PIME filter\",\"name\":\"PIME filter\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"232532\",\"10585\",\"18360\",\"15502\",\"15780\",\"1058\",\"170\",\"664\",\"458\",\"502\"],\"header\":\"PIME filter\",\"minWidth\":150,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"defaultPageSize\":10,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,10],\"paginationType\":\"numbers\",\"showPagination\":false,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"502ddb466715551cddc6c876044b5de0\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nEstimate Error in Prediction\nUsing the function pime.error.prediction we can estimate the error in prediction. For each prevalence interval, this function randomizes the samples labels into arbitrary groupings using n random permutations, defined by the bootstrap value. For each, randomized and prevalence filtered, data set the OOB error rate is calculated to estimate whether the original differences in groups of samples occur by chance. Results are in a list containing a table and a box plot summarizing the results.\n\nssu18_randomized <- pime.error.prediction(ssu18_pime_ds, \"TEMP\",\n                                          bootstrap = 100, parallel = TRUE,\n                                          max.prev = 95)\n\n\n\n\n(16S rRNA) Table 8 | Results of 100 random permutations for each prevalence interval based on a function that randomizes the samples labels into arbitrary groupings. using n random permutations. For each randomized and prevalence filtered data set, the OOB error rate is calculated to estimate whether the original differences in groups of samples occur by chance. \n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Prevalence5%\":[0.3333,0.6,0.7333,0.6,0.6667,0.8667,0.4667,0.8,0.6,0.7333,0.6,0.7333,0.4667,0.7333,0.5333,0.4,0.6667,0.5333,0.6,0.6,0.8667,0.8,0.8,0.8,0.8,1,0.6667,0.5333,0.5333,0.9333,0.8,1,0.6,0.6667,0.6,1,0.4667,0.9333,0.4667,0.7333,0.6667,0.5333,0.7333,0.4,0.8667,0.4,0.6,0.5333,0.5333,0.7333,0.4,0.6667,0.6,0.6,0.5333,0.5333,0.6,0.9333,0.7333,0.5333,0.8667,0.4667,0.8667,0.5333,0.4,0.6,0.4,0.4667,0.8,0.9333,0.6,0.4667,0.5333,0.4,0.6667,0.9333,0.8,0.7333,0.7333,0.8,0.9333,0.6667,0.8667,0.8667,0.6,0.9333,0.5333,0.8667,0.6,0.6,0.6,0.4667,0.6,0.6667,0.7333,0.8,0.8,0.4667,0.8,0.6667],\"Prevalence10%\":[0.9333,0.5333,0.6,0.4667,0.7333,0.9333,0.8,0.8,0.3333,0.4,0.5333,0.8,0.9333,0.8,0.4667,0.9333,0.7333,0.7333,0.5333,0.9333,0.7333,0.6,0.6,0.7333,0.7333,0.8667,1,0.4667,0.4667,0.5333,0.5333,0.4667,0.6,0.7333,0.6,0.4667,0.4667,0.4667,0.6,0.6667,0.5333,0.6667,0.6667,1,0.6,0.7333,0.7333,0.8,0.3333,0.8,0.8,0.8,0.4,0.4,0.5333,0.8,0.5333,0.4,0.8667,0.6,0.9333,0.4667,0.5333,0.6667,0.6667,0.5333,0.7333,0.6,1,1,0.8667,0.5333,0.8667,1,0.9333,0.4667,0.4667,0.4,0.6667,0.6,0.8,0.9333,0.7333,0.8,0.7333,0.8,0.5333,0.5333,0.6,0.7333,0.4667,0.6667,0.6667,0.4667,0.4667,0.4,0.6,0.6667,0.3333,0.8667],\"Prevalence15%\":[0.6,0.4667,0.8,0.4667,0.3333,0.4,0.8,0.6667,0.7333,0.3333,0.6667,0.8,0.6667,0.6667,0.6667,0.5333,0.7333,0.5333,0.6667,0.6667,0.6,0.6667,0.4,0.6667,0.6667,0.4,0.6,0.4,0.8,0.4,0.5333,0.9333,1,0.4667,0.4667,0.6,0.6,0.9333,0.6667,0.6667,0.6667,0.6,0.5333,0.7333,0.6667,0.6667,0.7333,0.5333,0.6667,0.9333,0.9333,0.6667,0.6667,0.6,1,0.4,0.6667,0.8667,0.5333,0.8,0.4667,0.6,0.4667,0.4667,0.9333,0.6,0.7333,0.4,0.7333,0.8,0.4667,0.4667,0.6667,0.6667,0.7333,0.4667,0.4667,0.4667,0.4667,0.6667,0.6,0.4,0.6667,0.4667,0.8,0.7333,0.4667,1,0.7333,0.4667,0.5333,0.7333,0.6667,0.8,0.8667,0.6667,0.8,0.9333,0.9333,0.7333],\"Prevalence20%\":[0.7333,0.4,0.9333,0.6667,0.8667,0.4,0.8667,0.8,0.3333,0.6,0.8,0.2667,0.4667,0.6667,0.6,0.7333,0.4667,1,0.4667,0.8667,0.6,0.5333,0.8,0.6667,0.7333,0.9333,0.4667,0.6,0.8667,0.4667,0.8667,0.8,0.6667,1,0.6667,0.4,1,0.8,0.6,0.6,0.8,0.6,0.6,0.6,0.6,0.6,0.6667,0.7333,1,0.9333,0.6667,0.4667,0.6,0.6667,0.7333,0.3333,1,1,0.6,0.6667,0.4667,0.8667,0.4,0.7333,0.9333,0.8667,0.4,0.5333,0.8,0.8667,0.4,0.4,0.9333,0.8667,0.6667,0.5333,0.6667,0.6,0.7333,0.8,0.9333,0.5333,0.6,0.9333,0.6667,0.5333,0.5333,0.4667,0.6667,0.5333,0.4667,0.8,0.7333,0.8667,0.8,0.6667,0.6,0.6,0.7333,0.4],\"Prevalence25%\":[0.5333,0.4667,0.7333,0.6667,0.4,0.4667,0.6,0.9333,1,0.6,0.9333,0.6,0.4667,0.8,0.6667,0.8,0.4,0.5333,0.4667,0.7333,0.6,0.5333,0.6667,0.6667,0.6667,1,0.4,0.6,0.8667,0.6,0.5333,0.8,0.5333,0.4667,0.3333,1,0.7333,0.9333,0.7333,0.6,0.6667,0.6667,0.4667,0.6,0.8667,0.6667,0.3333,0.5333,0.5333,0.7333,0.8667,0.9333,0.4667,0.6667,0.8667,0.8,0.4667,0.7333,0.7333,0.8667,0.6,0.4,0.6,0.8,0.9333,0.7333,0.5333,0.7333,0.8,0.8667,0.8,0.4,0.4667,0.8,0.5333,0.8667,0.8,0.4,0.5333,0.6667,0.6,0.4,0.6667,0.4667,0.6667,0.6,0.5333,0.8,0.4667,0.8,0.5333,0.5333,0.6667,0.4667,0.4667,0.6667,0.3333,0.6667,0.4,0.7333],\"Prevalence30%\":[0.6,0.7333,0.9333,0.6,0.3333,0.6667,0.8,0.8,0.4667,0.4667,0.7333,0.5333,0.6667,0.7333,0.6,0.7333,0.8,0.8667,0.5333,0.6667,0.5333,0.5333,0.6667,0.6,0.8,0.8,0.8667,0.6,0.5333,0.6,0.6667,0.7333,0.4667,0.8667,0.9333,1,0.7333,0.8667,0.6667,0.7333,0.5333,0.8,0.8,0.5333,0.5333,0.4667,0.3333,0.6667,0.3333,0.8,0.8,0.7333,0.6667,0.6,0.5333,0.5333,0.7333,0.7333,0.8667,1,0.6667,0.6,0.6,0.9333,0.8667,1,0.5333,0.8,0.9333,0.8667,0.4,0.8,0.4,1,1,0.5333,0.4,1,0.6667,0.7333,0.4,0.4667,0.4,0.5333,0.6,0.6,0.5333,0.8,0.7333,0.4,0.9333,0.4,0.8,0.5333,0.8,0.7333,0.8667,0.6,0.8667,0.5333],\"Prevalence35%\":[1,0.6667,0.8,0.9333,0.6667,0.6,0.4667,1,0.6667,0.5333,0.5333,0.6667,0.7333,0.9333,0.7333,0.4667,0.7333,0.8,1,0.8667,0.4,0.7333,0.9333,0.6667,0.6,0.9333,0.7333,0.6667,0.6667,1,0.4667,0.6,0.4667,0.7333,0.4,0.6667,0.4667,0.6667,0.6,0.2667,0.6667,0.8,0.8,0.7333,0.9333,0.5333,0.6667,0.6667,0.5333,0.4667,0.8667,0.8,0.8,0.4667,0.7333,0.6667,0.5333,0.8667,0.8667,0.6667,0.5333,0.6,0.6667,0.5333,0.3333,0.5333,0.6667,1,0.4,0.4667,0.8667,0.3333,0.8,0.7333,0.7333,0.5333,0.7333,0.3333,0.8,0.9333,0.8,0.4,0.8667,0.4667,0.4667,0.6,0.8,0.6,0.5333,0.9333,0.4,0.7333,0.7333,0.9333,0.9333,0.3333,0.6,0.4667,0.6667,0.9333],\"Prevalence40%\":[0.8667,0.8,0.6,0.6,0.8667,0.8667,0.5333,0.9333,0.9333,0.7333,0.9333,0.8,1,1,0.6667,0.7333,0.4667,0.8667,0.5333,0.6,0.8667,0.6,0.6667,0.7333,0.4,0.4,0.6667,0.5333,0.5333,0.5333,0.5333,0.6667,0.6,0.5333,0.4,0.7333,0.8667,0.5333,0.7333,0.6,0.5333,0.6,0.9333,0.8,0.8667,1,0.6,0.8667,0.4,0.2667,0.4667,0.7333,0.8667,0.4667,0.8667,0.8,0.3333,0.8,1,0.5333,0.4667,0.5333,0.6,0.9333,0.6,0.6667,0.6,0.8667,0.9333,0.8667,0.6,0.6667,0.4667,0.4667,0.6667,0.6667,0.4667,0.4,0.8667,0.8667,0.8667,0.6,0.3333,0.4667,0.8667,0.8,0.8,0.6667,0.4667,0.8,0.9333,0.8667,0.8667,0.5333,0.5333,1,0.6667,1,0.6667,0.6667],\"Prevalence45%\":[0.6667,0.7333,0.5333,0.8,0.6,0.7333,0.5333,0.5333,0.7333,0.7333,0.8,0.7333,0.4667,0.6667,0.5333,0.8667,0.5333,0.4667,0.3333,0.4667,0.8,0.7333,0.6,0.9333,0.5333,0.6,0.8667,0.8,0.5333,0.6,0.4,0.7333,0.4667,0.9333,0.8,0.6667,0.6667,0.7333,0.9333,0.6667,0.6,0.8,0.4667,0.4667,0.6667,0.9333,0.8,0.8667,1,0.7333,0.7333,0.5333,0.8,0.6,0.8667,0.5333,0.8,0.8667,1,0.8,0.9333,0.4,0.7333,0.6667,0.7333,0.2667,1,0.7333,0.4667,0.7333,0.4,0.6,0.4667,0.6667,0.6,1,0.8,0.8667,0.6,1,0.7333,0.8667,0.8,0.6667,0.4,0.3333,0.6667,0.6,0.7333,0.6,0.9333,0.4667,0.9333,0.9333,0.5333,0.7333,0.4667,0.6667,0.6667,0.8],\"Prevalence50%\":[0.5333,0.7333,0.8,0.6667,0.3333,0.5333,0.8,1,0.4667,0.6,0.4667,0.8,0.3333,0.6,0.6667,0.8,0.6,0.6,1,0.6,0.6667,0.6,0.6667,0.8667,0.4667,0.7333,0.8667,0.6,0.4667,0.6,0.6,0.5333,0.8,0.6,0.8667,0.7333,0.8,0.3333,0.7333,0.8667,0.4667,0.5333,0.8667,0.5333,0.4667,0.8667,0.4,0.4667,0.4,0.6,0.8667,0.5333,0.7333,0.4,0.5333,0.8,0.5333,0.6,0.5333,0.8667,0.7333,0.6667,0.8667,0.4667,0.6,0.4667,0.5333,0.4667,1,1,0.8,0.4667,0.5333,0.4667,0.5333,0.8,0.8,0.6667,0.8667,0.7333,0.4667,0.6,0.8,0.8,0.8667,0.7333,0.6,0.8667,0.3333,0.4667,0.4667,0.7333,0.4667,0.8,0.4667,0.3333,0.6,0.4667,0.6667,0.6667],\"Prevalence55%\":[1,0.5333,0.8,0.6,0.4667,1,0.8667,0.5333,0.8667,0.7333,0.4667,0.7333,0.4667,0.6667,0.5333,0.6667,0.5333,0.5333,0.9333,0.7333,0.8,0.7333,0.4667,0.8667,1,0.6,0.8,0.5333,0.7333,0.7333,0.9333,0.8,0.7333,0.6667,0.4,0.4667,0.5333,1,0.6,0.6,0.4667,0.5333,0.8667,0.6,0.6667,0.5333,0.8,0.3333,0.5333,0.5333,0.5333,0.9333,0.5333,0.8667,0.8667,0.6667,0.4667,0.5333,1,0.6,0.6667,0.4667,0.6667,0.4667,0.6667,0.6667,0.6,0.7333,0.4,0.5333,0.6,0.8,0.8667,0.4667,0.5333,0.5333,0.6667,0.4667,0.8667,0.5333,0.7333,0.7333,0.8,0.7333,0.8667,0.8,0.7333,0.6667,0.4667,0.4667,0.4,0.8,0.6667,0.9333,0.9333,0.6,0.8667,0.4667,0.7333,0.6667],\"Prevalence60%\":[0.6667,0.4667,0.6,0.6667,0.6,0.8667,0.5333,0.4,0.9333,0.5333,0.6667,0.4667,0.6667,0.4,0.4667,0.6,0.5333,0.5333,0.6,0.8,0.4667,0.9333,0.5333,0.8,0.5333,0.6,0.2667,0.5333,0.7333,0.4667,0.6,0.8667,0.5333,0.9333,0.8,0.8,0.7333,0.7333,0.6667,0.4667,0.8667,0.8667,0.8,0.5333,0.6667,0.6,0.5333,0.5333,0.5333,0.4667,0.8,0.5333,0.5333,0.4667,0.8667,0.8667,0.8667,0.7333,0.6667,0.6667,0.4667,0.8,0.5333,0.6667,0.6667,0.8667,0.6,0.8667,0.8667,0.7333,0.6667,0.6,0.4,0.6667,1,0.4667,0.5333,0.8667,0.6,0.4667,0.6,0.6,0.9333,1,0.8,0.8,0.4,0.2667,0.4,0.7333,0.5333,0.4667,0.9333,0.7333,0.7333,0.4667,0.8667,0.4667,0.6,1],\"Prevalence65%\":[1,0.6667,1,0.5333,0.7333,0.6,1,0.8,0.9333,0.7333,0.6,0.5333,0.6,0.7333,0.6,0.9333,0.2667,0.6,0.5333,0.6667,0.4667,0.5333,0.8,0.6,0.8667,0.6,0.4667,0.5333,0.6,0.7333,0.4667,0.7333,0.4,0.6667,0.4667,0.3333,0.7333,0.8667,0.6667,0.9333,0.8667,0.5333,0.7333,0.4,0.9333,0.6,0.3333,0.6,0.5333,0.9333,0.8667,0.5333,0.7333,0.5333,0.5333,0.4,0.4,0.3333,0.5333,0.3333,0.8,0.8667,0.8667,0.7333,0.4667,0.5333,0.7333,1,1,0.8667,0.8,0.2667,0.8667,0.4667,0.8,0.6667,0.5333,0.6,0.6,0.8667,0.6,0.6,0.5333,0.6667,0.6,0.4667,0.7333,0.6667,0.7333,0.6,0.6,0.8,0.4667,0.4667,0.5333,0.4667,0.6,0.7333,1,0.8],\"Prevalence70%\":[0.9333,0.6,0.6667,0.8667,0.8,0.7333,0.7333,0.8,0.4667,0.7333,0.7333,0.6,0.9333,0.8,0.8,0.4667,0.9333,0.6667,0.6667,0.8,0.4667,0.5333,0.6667,0.7333,0.8667,0.5333,0.7333,0.6667,0.8667,0.6,0.6667,0.6,0.6667,0.8667,0.5333,0.6,0.3333,0.2667,0.7333,0.4,0.6667,0.8,0.7333,0.7333,0.6,0.5333,0.8,0.6667,0.9333,0.6667,0.4667,0.5333,0.6667,0.8,0.8,0.6,0.6667,0.6667,0.6667,0.7333,0.8,0.6,0.8667,0.8667,0.6667,0.6667,0.8667,0.9333,0.7333,0.9333,0.4667,0.6667,0.4667,0.8667,0.5333,0.4667,0.4,1,0.7333,0.4,0.4,0.8,0.6,1,0.7333,0.7333,0.8667,0.5333,0.7333,0.4667,0.6,0.3333,0.4667,0.4667,0.5333,0.7333,0.6667,0.7333,0.8667,0.4667],\"Prevalence75%\":[0.6,0.6667,0.8667,0.6667,0.7333,0.7333,0.9333,0.8,0.6667,0.5333,0.6,0.6667,0.4667,0.8,0.8667,0.8667,0.4667,0.9333,0.6667,0.8667,0.8,0.7333,0.8,0.8,0.8667,0.4,0.6667,0.4667,0.4,0.4667,0.8667,0.5333,1,0.6,0.7333,0.6,0.4,0.5333,0.8,0.6,0.6,0.6,0.4667,0.8667,1,0.9333,0.4,0.9333,0.7333,0.6,0.4667,0.6667,0.4667,0.6,0.9333,0.8667,0.6,0.7333,0.7333,0.4667,0.6667,0.7333,0.4667,0.5333,0.6,0.8667,0.4667,0.8667,0.8667,0.8667,0.4667,0.8667,0.8,0.6,0.8,0.5333,0.4667,0.6,0.2667,0.6,0.8,0.6667,0.6,0.7333,0.6667,0.6667,0.6667,0.8,0.6,0.8,0.4667,0.6,0.4,0.7333,0.6667,0.9333,0.7333,1,0.6667,0.8667],\"Prevalence80%\":[0.6667,0.6,0.6,0.8,0.5333,0.6,0.6,0.6,0.6,0.8667,0.6667,0.8,0.4667,0.8,0.8667,0.6667,0.4,0.6,0.6,0.6,0.7333,1,0.4,0.8667,0.6667,0.8,0.8,0.8,0.6,0.6,0.4667,0.6667,0.6667,0.4,0.6,0.6,0.6,0.4,0.9333,0.7333,0.6,0.9333,0.8,0.4,0.8,0.5333,0.9333,0.7333,0.6667,0.9333,0.6,0.4,0.6667,0.6667,0.8667,0.4667,0.4,0.9333,0.6667,0.9333,0.8667,0.5333,0.6667,0.6,0.8,0.8,0.8667,0.7333,0.6,0.7333,0.4,0.4,0.8667,0.9333,0.7333,0.8667,0.7333,1,0.5333,0.7333,0.8667,0.8667,0.4667,0.5333,0.6,0.8,0.8,0.8667,0.8667,0.6667,0.8,0.6,0.6,0.8667,0.5333,0.7333,0.6,0.7333,1,0.6],\"Prevalence85%\":[0.4667,0.5333,0.8667,0.7333,0.6,0.8,0.8,0.6,0.4667,0.6667,0.8667,0.5333,0.7333,0.4667,0.7333,0.7333,0.5333,0.5333,0.6,1,0.6,0.9333,0.6667,0.4667,0.7333,0.4,0.4,0.6667,0.4667,0.8667,0.6667,0.4667,0.4667,0.4667,0.9333,0.8,0.6667,0.5333,0.4,0.8,0.8667,0.6,0.9333,0.6667,0.6,0.8,0.8,0.4667,0.8667,0.4,0.8,0.8667,1,0.8667,0.4667,0.6667,0.8,0.4667,0.6,0.8,0.6667,0.4667,0.6667,0.8,0.4,0.5333,0.6,0.8,0.6667,1,0.4,0.3333,1,0.8,0.5333,1,0.7333,0.5333,0.8667,0.5333,0.6,0.8,0.4667,0.4,0.4,0.8667,0.5333,0.6667,0.5333,0.6667,0.8667,0.5333,0.6,0.7333,0.7333,0.5333,0.4,0.8667,0.8,0.6667],\"Prevalence90%\":[0.8,0.8,1,0.5333,0.8,0.9333,0.4,0.8667,0.7333,0.4667,0.6667,0.8,0.8,0.8,1,0.8,0.8667,0.8667,0.4667,0.4667,0.4667,0.8,0.5333,0.4,0.6667,0.4,0.5333,0.3333,0.8,0.5333,0.8,0.5333,0.5333,0.4667,0.6,0.6,0.8667,0.7333,0.8,0.7333,0.6667,0.5333,0.6667,0.4667,0.4667,0.7333,0.4667,0.8667,0.6667,0.6667,0.8,0.7333,0.4667,0.8,0.6,0.6667,0.7333,0.8,0.8,0.6,0.6,0.5333,0.6,0.5333,0.8667,0.4,0.7333,0.6,0.6,0.6,0.6,0.4667,0.6667,0.5333,0.6667,0.6,0.8667,0.6667,0.6667,0.8,0.7333,0.5333,0.6,0.4667,0.9333,0.5333,0.7333,0.9333,0.6,0.5333,0.6,0.5333,0.9333,0.5333,0.8,0.8667,0.8,0.6,0.6,0.8667],\"Prevalence95%\":[0.6,0.8,0.6,0.4,0.8667,0.7333,0.4667,0.7333,0.9333,0.8667,0.4,0.7333,0.2,0.8,0.4,0.5333,0.4,0.7333,0.6,0.4667,0.6667,0.6,0.6667,0.5333,0.6,0.4,0.8667,0.9333,1,0.5333,0.3333,0.3333,0.6667,0.7333,0.7333,0.8,0.7333,0.6667,0.6667,0.5333,0.6,0.6,1,0.6667,0.5333,0.6,0.6,0.6,0.6,0.5333,0.6667,0.6667,0.9333,0.6667,0.8,0.6667,0.8,0.7333,0.8,0.6,0.6,0.9333,0.5333,0.4667,0.5333,0.4667,0.5333,0.6,0.4667,0.3333,0.8,0.8667,0.3333,0.4667,0.6,0.8667,0.7333,1,0.5333,0.6667,0.6667,0.5333,0.4667,0.6,0.4667,0.6667,0.6,0.6667,0.9333,0.7333,0.8,0.5333,0.4667,1,0.6,0.6,0.8667,0.8667,0.2667,0.4667]},\"columns\":[{\"accessor\":\"Prevalence5%\",\"name\":\"Prevalence5%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.3333\",\"0.6000\",\"0.7333\",\"0.6000\",\"0.6667\",\"0.8667\",\"0.4667\",\"0.8000\",\"0.6000\",\"0.7333\",\"0.6000\",\"0.7333\",\"0.4667\",\"0.7333\",\"0.5333\",\"0.4000\",\"0.6667\",\"0.5333\",\"0.6000\",\"0.6000\",\"0.8667\",\"0.8000\",\"0.8000\",\"0.8000\",\"0.8000\",\"1.0000\",\"0.6667\",\"0.5333\",\"0.5333\",\"0.9333\",\"0.8000\",\"1.0000\",\"0.6000\",\"0.6667\",\"0.6000\",\"1.0000\",\"0.4667\",\"0.9333\",\"0.4667\",\"0.7333\",\"0.6667\",\"0.5333\",\"0.7333\",\"0.4000\",\"0.8667\",\"0.4000\",\"0.6000\",\"0.5333\",\"0.5333\",\"0.7333\",\"0.4000\",\"0.6667\",\"0.6000\",\"0.6000\",\"0.5333\",\"0.5333\",\"0.6000\",\"0.9333\",\"0.7333\",\"0.5333\",\"0.8667\",\"0.4667\",\"0.8667\",\"0.5333\",\"0.4000\",\"0.6000\",\"0.4000\",\"0.4667\",\"0.8000\",\"0.9333\",\"0.6000\",\"0.4667\",\"0.5333\",\"0.4000\",\"0.6667\",\"0.9333\",\"0.8000\",\"0.7333\",\"0.7333\",\"0.8000\",\"0.9333\",\"0.6667\",\"0.8667\",\"0.8667\",\"0.6000\",\"0.9333\",\"0.5333\",\"0.8667\",\"0.6000\",\"0.6000\",\"0.6000\",\"0.4667\",\"0.6000\",\"0.6667\",\"0.7333\",\"0.8000\",\"0.8000\",\"0.4667\",\"0.8000\",\"0.6667\"],\"header\":\"Prevalence5%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence10%\",\"name\":\"Prevalence10%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.9333\",\"0.5333\",\"0.6000\",\"0.4667\",\"0.7333\",\"0.9333\",\"0.8000\",\"0.8000\",\"0.3333\",\"0.4000\",\"0.5333\",\"0.8000\",\"0.9333\",\"0.8000\",\"0.4667\",\"0.9333\",\"0.7333\",\"0.7333\",\"0.5333\",\"0.9333\",\"0.7333\",\"0.6000\",\"0.6000\",\"0.7333\",\"0.7333\",\"0.8667\",\"1.0000\",\"0.4667\",\"0.4667\",\"0.5333\",\"0.5333\",\"0.4667\",\"0.6000\",\"0.7333\",\"0.6000\",\"0.4667\",\"0.4667\",\"0.4667\",\"0.6000\",\"0.6667\",\"0.5333\",\"0.6667\",\"0.6667\",\"1.0000\",\"0.6000\",\"0.7333\",\"0.7333\",\"0.8000\",\"0.3333\",\"0.8000\",\"0.8000\",\"0.8000\",\"0.4000\",\"0.4000\",\"0.5333\",\"0.8000\",\"0.5333\",\"0.4000\",\"0.8667\",\"0.6000\",\"0.9333\",\"0.4667\",\"0.5333\",\"0.6667\",\"0.6667\",\"0.5333\",\"0.7333\",\"0.6000\",\"1.0000\",\"1.0000\",\"0.8667\",\"0.5333\",\"0.8667\",\"1.0000\",\"0.9333\",\"0.4667\",\"0.4667\",\"0.4000\",\"0.6667\",\"0.6000\",\"0.8000\",\"0.9333\",\"0.7333\",\"0.8000\",\"0.7333\",\"0.8000\",\"0.5333\",\"0.5333\",\"0.6000\",\"0.7333\",\"0.4667\",\"0.6667\",\"0.6667\",\"0.4667\",\"0.4667\",\"0.4000\",\"0.6000\",\"0.6667\",\"0.3333\",\"0.8667\"],\"header\":\"Prevalence10%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence15%\",\"name\":\"Prevalence15%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.6000\",\"0.4667\",\"0.8000\",\"0.4667\",\"0.3333\",\"0.4000\",\"0.8000\",\"0.6667\",\"0.7333\",\"0.3333\",\"0.6667\",\"0.8000\",\"0.6667\",\"0.6667\",\"0.6667\",\"0.5333\",\"0.7333\",\"0.5333\",\"0.6667\",\"0.6667\",\"0.6000\",\"0.6667\",\"0.4000\",\"0.6667\",\"0.6667\",\"0.4000\",\"0.6000\",\"0.4000\",\"0.8000\",\"0.4000\",\"0.5333\",\"0.9333\",\"1.0000\",\"0.4667\",\"0.4667\",\"0.6000\",\"0.6000\",\"0.9333\",\"0.6667\",\"0.6667\",\"0.6667\",\"0.6000\",\"0.5333\",\"0.7333\",\"0.6667\",\"0.6667\",\"0.7333\",\"0.5333\",\"0.6667\",\"0.9333\",\"0.9333\",\"0.6667\",\"0.6667\",\"0.6000\",\"1.0000\",\"0.4000\",\"0.6667\",\"0.8667\",\"0.5333\",\"0.8000\",\"0.4667\",\"0.6000\",\"0.4667\",\"0.4667\",\"0.9333\",\"0.6000\",\"0.7333\",\"0.4000\",\"0.7333\",\"0.8000\",\"0.4667\",\"0.4667\",\"0.6667\",\"0.6667\",\"0.7333\",\"0.4667\",\"0.4667\",\"0.4667\",\"0.4667\",\"0.6667\",\"0.6000\",\"0.4000\",\"0.6667\",\"0.4667\",\"0.8000\",\"0.7333\",\"0.4667\",\"1.0000\",\"0.7333\",\"0.4667\",\"0.5333\",\"0.7333\",\"0.6667\",\"0.8000\",\"0.8667\",\"0.6667\",\"0.8000\",\"0.9333\",\"0.9333\",\"0.7333\"],\"header\":\"Prevalence15%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence20%\",\"name\":\"Prevalence20%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.7333\",\"0.4000\",\"0.9333\",\"0.6667\",\"0.8667\",\"0.4000\",\"0.8667\",\"0.8000\",\"0.3333\",\"0.6000\",\"0.8000\",\"0.2667\",\"0.4667\",\"0.6667\",\"0.6000\",\"0.7333\",\"0.4667\",\"1.0000\",\"0.4667\",\"0.8667\",\"0.6000\",\"0.5333\",\"0.8000\",\"0.6667\",\"0.7333\",\"0.9333\",\"0.4667\",\"0.6000\",\"0.8667\",\"0.4667\",\"0.8667\",\"0.8000\",\"0.6667\",\"1.0000\",\"0.6667\",\"0.4000\",\"1.0000\",\"0.8000\",\"0.6000\",\"0.6000\",\"0.8000\",\"0.6000\",\"0.6000\",\"0.6000\",\"0.6000\",\"0.6000\",\"0.6667\",\"0.7333\",\"1.0000\",\"0.9333\",\"0.6667\",\"0.4667\",\"0.6000\",\"0.6667\",\"0.7333\",\"0.3333\",\"1.0000\",\"1.0000\",\"0.6000\",\"0.6667\",\"0.4667\",\"0.8667\",\"0.4000\",\"0.7333\",\"0.9333\",\"0.8667\",\"0.4000\",\"0.5333\",\"0.8000\",\"0.8667\",\"0.4000\",\"0.4000\",\"0.9333\",\"0.8667\",\"0.6667\",\"0.5333\",\"0.6667\",\"0.6000\",\"0.7333\",\"0.8000\",\"0.9333\",\"0.5333\",\"0.6000\",\"0.9333\",\"0.6667\",\"0.5333\",\"0.5333\",\"0.4667\",\"0.6667\",\"0.5333\",\"0.4667\",\"0.8000\",\"0.7333\",\"0.8667\",\"0.8000\",\"0.6667\",\"0.6000\",\"0.6000\",\"0.7333\",\"0.4000\"],\"header\":\"Prevalence20%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence25%\",\"name\":\"Prevalence25%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.5333\",\"0.4667\",\"0.7333\",\"0.6667\",\"0.4000\",\"0.4667\",\"0.6000\",\"0.9333\",\"1.0000\",\"0.6000\",\"0.9333\",\"0.6000\",\"0.4667\",\"0.8000\",\"0.6667\",\"0.8000\",\"0.4000\",\"0.5333\",\"0.4667\",\"0.7333\",\"0.6000\",\"0.5333\",\"0.6667\",\"0.6667\",\"0.6667\",\"1.0000\",\"0.4000\",\"0.6000\",\"0.8667\",\"0.6000\",\"0.5333\",\"0.8000\",\"0.5333\",\"0.4667\",\"0.3333\",\"1.0000\",\"0.7333\",\"0.9333\",\"0.7333\",\"0.6000\",\"0.6667\",\"0.6667\",\"0.4667\",\"0.6000\",\"0.8667\",\"0.6667\",\"0.3333\",\"0.5333\",\"0.5333\",\"0.7333\",\"0.8667\",\"0.9333\",\"0.4667\",\"0.6667\",\"0.8667\",\"0.8000\",\"0.4667\",\"0.7333\",\"0.7333\",\"0.8667\",\"0.6000\",\"0.4000\",\"0.6000\",\"0.8000\",\"0.9333\",\"0.7333\",\"0.5333\",\"0.7333\",\"0.8000\",\"0.8667\",\"0.8000\",\"0.4000\",\"0.4667\",\"0.8000\",\"0.5333\",\"0.8667\",\"0.8000\",\"0.4000\",\"0.5333\",\"0.6667\",\"0.6000\",\"0.4000\",\"0.6667\",\"0.4667\",\"0.6667\",\"0.6000\",\"0.5333\",\"0.8000\",\"0.4667\",\"0.8000\",\"0.5333\",\"0.5333\",\"0.6667\",\"0.4667\",\"0.4667\",\"0.6667\",\"0.3333\",\"0.6667\",\"0.4000\",\"0.7333\"],\"header\":\"Prevalence25%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence30%\",\"name\":\"Prevalence30%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.6000\",\"0.7333\",\"0.9333\",\"0.6000\",\"0.3333\",\"0.6667\",\"0.8000\",\"0.8000\",\"0.4667\",\"0.4667\",\"0.7333\",\"0.5333\",\"0.6667\",\"0.7333\",\"0.6000\",\"0.7333\",\"0.8000\",\"0.8667\",\"0.5333\",\"0.6667\",\"0.5333\",\"0.5333\",\"0.6667\",\"0.6000\",\"0.8000\",\"0.8000\",\"0.8667\",\"0.6000\",\"0.5333\",\"0.6000\",\"0.6667\",\"0.7333\",\"0.4667\",\"0.8667\",\"0.9333\",\"1.0000\",\"0.7333\",\"0.8667\",\"0.6667\",\"0.7333\",\"0.5333\",\"0.8000\",\"0.8000\",\"0.5333\",\"0.5333\",\"0.4667\",\"0.3333\",\"0.6667\",\"0.3333\",\"0.8000\",\"0.8000\",\"0.7333\",\"0.6667\",\"0.6000\",\"0.5333\",\"0.5333\",\"0.7333\",\"0.7333\",\"0.8667\",\"1.0000\",\"0.6667\",\"0.6000\",\"0.6000\",\"0.9333\",\"0.8667\",\"1.0000\",\"0.5333\",\"0.8000\",\"0.9333\",\"0.8667\",\"0.4000\",\"0.8000\",\"0.4000\",\"1.0000\",\"1.0000\",\"0.5333\",\"0.4000\",\"1.0000\",\"0.6667\",\"0.7333\",\"0.4000\",\"0.4667\",\"0.4000\",\"0.5333\",\"0.6000\",\"0.6000\",\"0.5333\",\"0.8000\",\"0.7333\",\"0.4000\",\"0.9333\",\"0.4000\",\"0.8000\",\"0.5333\",\"0.8000\",\"0.7333\",\"0.8667\",\"0.6000\",\"0.8667\",\"0.5333\"],\"header\":\"Prevalence30%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence35%\",\"name\":\"Prevalence35%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"1.0000\",\"0.6667\",\"0.8000\",\"0.9333\",\"0.6667\",\"0.6000\",\"0.4667\",\"1.0000\",\"0.6667\",\"0.5333\",\"0.5333\",\"0.6667\",\"0.7333\",\"0.9333\",\"0.7333\",\"0.4667\",\"0.7333\",\"0.8000\",\"1.0000\",\"0.8667\",\"0.4000\",\"0.7333\",\"0.9333\",\"0.6667\",\"0.6000\",\"0.9333\",\"0.7333\",\"0.6667\",\"0.6667\",\"1.0000\",\"0.4667\",\"0.6000\",\"0.4667\",\"0.7333\",\"0.4000\",\"0.6667\",\"0.4667\",\"0.6667\",\"0.6000\",\"0.2667\",\"0.6667\",\"0.8000\",\"0.8000\",\"0.7333\",\"0.9333\",\"0.5333\",\"0.6667\",\"0.6667\",\"0.5333\",\"0.4667\",\"0.8667\",\"0.8000\",\"0.8000\",\"0.4667\",\"0.7333\",\"0.6667\",\"0.5333\",\"0.8667\",\"0.8667\",\"0.6667\",\"0.5333\",\"0.6000\",\"0.6667\",\"0.5333\",\"0.3333\",\"0.5333\",\"0.6667\",\"1.0000\",\"0.4000\",\"0.4667\",\"0.8667\",\"0.3333\",\"0.8000\",\"0.7333\",\"0.7333\",\"0.5333\",\"0.7333\",\"0.3333\",\"0.8000\",\"0.9333\",\"0.8000\",\"0.4000\",\"0.8667\",\"0.4667\",\"0.4667\",\"0.6000\",\"0.8000\",\"0.6000\",\"0.5333\",\"0.9333\",\"0.4000\",\"0.7333\",\"0.7333\",\"0.9333\",\"0.9333\",\"0.3333\",\"0.6000\",\"0.4667\",\"0.6667\",\"0.9333\"],\"header\":\"Prevalence35%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence40%\",\"name\":\"Prevalence40%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.8667\",\"0.8000\",\"0.6000\",\"0.6000\",\"0.8667\",\"0.8667\",\"0.5333\",\"0.9333\",\"0.9333\",\"0.7333\",\"0.9333\",\"0.8000\",\"1.0000\",\"1.0000\",\"0.6667\",\"0.7333\",\"0.4667\",\"0.8667\",\"0.5333\",\"0.6000\",\"0.8667\",\"0.6000\",\"0.6667\",\"0.7333\",\"0.4000\",\"0.4000\",\"0.6667\",\"0.5333\",\"0.5333\",\"0.5333\",\"0.5333\",\"0.6667\",\"0.6000\",\"0.5333\",\"0.4000\",\"0.7333\",\"0.8667\",\"0.5333\",\"0.7333\",\"0.6000\",\"0.5333\",\"0.6000\",\"0.9333\",\"0.8000\",\"0.8667\",\"1.0000\",\"0.6000\",\"0.8667\",\"0.4000\",\"0.2667\",\"0.4667\",\"0.7333\",\"0.8667\",\"0.4667\",\"0.8667\",\"0.8000\",\"0.3333\",\"0.8000\",\"1.0000\",\"0.5333\",\"0.4667\",\"0.5333\",\"0.6000\",\"0.9333\",\"0.6000\",\"0.6667\",\"0.6000\",\"0.8667\",\"0.9333\",\"0.8667\",\"0.6000\",\"0.6667\",\"0.4667\",\"0.4667\",\"0.6667\",\"0.6667\",\"0.4667\",\"0.4000\",\"0.8667\",\"0.8667\",\"0.8667\",\"0.6000\",\"0.3333\",\"0.4667\",\"0.8667\",\"0.8000\",\"0.8000\",\"0.6667\",\"0.4667\",\"0.8000\",\"0.9333\",\"0.8667\",\"0.8667\",\"0.5333\",\"0.5333\",\"1.0000\",\"0.6667\",\"1.0000\",\"0.6667\",\"0.6667\"],\"header\":\"Prevalence40%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence45%\",\"name\":\"Prevalence45%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.6667\",\"0.7333\",\"0.5333\",\"0.8000\",\"0.6000\",\"0.7333\",\"0.5333\",\"0.5333\",\"0.7333\",\"0.7333\",\"0.8000\",\"0.7333\",\"0.4667\",\"0.6667\",\"0.5333\",\"0.8667\",\"0.5333\",\"0.4667\",\"0.3333\",\"0.4667\",\"0.8000\",\"0.7333\",\"0.6000\",\"0.9333\",\"0.5333\",\"0.6000\",\"0.8667\",\"0.8000\",\"0.5333\",\"0.6000\",\"0.4000\",\"0.7333\",\"0.4667\",\"0.9333\",\"0.8000\",\"0.6667\",\"0.6667\",\"0.7333\",\"0.9333\",\"0.6667\",\"0.6000\",\"0.8000\",\"0.4667\",\"0.4667\",\"0.6667\",\"0.9333\",\"0.8000\",\"0.8667\",\"1.0000\",\"0.7333\",\"0.7333\",\"0.5333\",\"0.8000\",\"0.6000\",\"0.8667\",\"0.5333\",\"0.8000\",\"0.8667\",\"1.0000\",\"0.8000\",\"0.9333\",\"0.4000\",\"0.7333\",\"0.6667\",\"0.7333\",\"0.2667\",\"1.0000\",\"0.7333\",\"0.4667\",\"0.7333\",\"0.4000\",\"0.6000\",\"0.4667\",\"0.6667\",\"0.6000\",\"1.0000\",\"0.8000\",\"0.8667\",\"0.6000\",\"1.0000\",\"0.7333\",\"0.8667\",\"0.8000\",\"0.6667\",\"0.4000\",\"0.3333\",\"0.6667\",\"0.6000\",\"0.7333\",\"0.6000\",\"0.9333\",\"0.4667\",\"0.9333\",\"0.9333\",\"0.5333\",\"0.7333\",\"0.4667\",\"0.6667\",\"0.6667\",\"0.8000\"],\"header\":\"Prevalence45%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence50%\",\"name\":\"Prevalence50%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.5333\",\"0.7333\",\"0.8000\",\"0.6667\",\"0.3333\",\"0.5333\",\"0.8000\",\"1.0000\",\"0.4667\",\"0.6000\",\"0.4667\",\"0.8000\",\"0.3333\",\"0.6000\",\"0.6667\",\"0.8000\",\"0.6000\",\"0.6000\",\"1.0000\",\"0.6000\",\"0.6667\",\"0.6000\",\"0.6667\",\"0.8667\",\"0.4667\",\"0.7333\",\"0.8667\",\"0.6000\",\"0.4667\",\"0.6000\",\"0.6000\",\"0.5333\",\"0.8000\",\"0.6000\",\"0.8667\",\"0.7333\",\"0.8000\",\"0.3333\",\"0.7333\",\"0.8667\",\"0.4667\",\"0.5333\",\"0.8667\",\"0.5333\",\"0.4667\",\"0.8667\",\"0.4000\",\"0.4667\",\"0.4000\",\"0.6000\",\"0.8667\",\"0.5333\",\"0.7333\",\"0.4000\",\"0.5333\",\"0.8000\",\"0.5333\",\"0.6000\",\"0.5333\",\"0.8667\",\"0.7333\",\"0.6667\",\"0.8667\",\"0.4667\",\"0.6000\",\"0.4667\",\"0.5333\",\"0.4667\",\"1.0000\",\"1.0000\",\"0.8000\",\"0.4667\",\"0.5333\",\"0.4667\",\"0.5333\",\"0.8000\",\"0.8000\",\"0.6667\",\"0.8667\",\"0.7333\",\"0.4667\",\"0.6000\",\"0.8000\",\"0.8000\",\"0.8667\",\"0.7333\",\"0.6000\",\"0.8667\",\"0.3333\",\"0.4667\",\"0.4667\",\"0.7333\",\"0.4667\",\"0.8000\",\"0.4667\",\"0.3333\",\"0.6000\",\"0.4667\",\"0.6667\",\"0.6667\"],\"header\":\"Prevalence50%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence55%\",\"name\":\"Prevalence55%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"1.0000\",\"0.5333\",\"0.8000\",\"0.6000\",\"0.4667\",\"1.0000\",\"0.8667\",\"0.5333\",\"0.8667\",\"0.7333\",\"0.4667\",\"0.7333\",\"0.4667\",\"0.6667\",\"0.5333\",\"0.6667\",\"0.5333\",\"0.5333\",\"0.9333\",\"0.7333\",\"0.8000\",\"0.7333\",\"0.4667\",\"0.8667\",\"1.0000\",\"0.6000\",\"0.8000\",\"0.5333\",\"0.7333\",\"0.7333\",\"0.9333\",\"0.8000\",\"0.7333\",\"0.6667\",\"0.4000\",\"0.4667\",\"0.5333\",\"1.0000\",\"0.6000\",\"0.6000\",\"0.4667\",\"0.5333\",\"0.8667\",\"0.6000\",\"0.6667\",\"0.5333\",\"0.8000\",\"0.3333\",\"0.5333\",\"0.5333\",\"0.5333\",\"0.9333\",\"0.5333\",\"0.8667\",\"0.8667\",\"0.6667\",\"0.4667\",\"0.5333\",\"1.0000\",\"0.6000\",\"0.6667\",\"0.4667\",\"0.6667\",\"0.4667\",\"0.6667\",\"0.6667\",\"0.6000\",\"0.7333\",\"0.4000\",\"0.5333\",\"0.6000\",\"0.8000\",\"0.8667\",\"0.4667\",\"0.5333\",\"0.5333\",\"0.6667\",\"0.4667\",\"0.8667\",\"0.5333\",\"0.7333\",\"0.7333\",\"0.8000\",\"0.7333\",\"0.8667\",\"0.8000\",\"0.7333\",\"0.6667\",\"0.4667\",\"0.4667\",\"0.4000\",\"0.8000\",\"0.6667\",\"0.9333\",\"0.9333\",\"0.6000\",\"0.8667\",\"0.4667\",\"0.7333\",\"0.6667\"],\"header\":\"Prevalence55%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence60%\",\"name\":\"Prevalence60%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.6667\",\"0.4667\",\"0.6000\",\"0.6667\",\"0.6000\",\"0.8667\",\"0.5333\",\"0.4000\",\"0.9333\",\"0.5333\",\"0.6667\",\"0.4667\",\"0.6667\",\"0.4000\",\"0.4667\",\"0.6000\",\"0.5333\",\"0.5333\",\"0.6000\",\"0.8000\",\"0.4667\",\"0.9333\",\"0.5333\",\"0.8000\",\"0.5333\",\"0.6000\",\"0.2667\",\"0.5333\",\"0.7333\",\"0.4667\",\"0.6000\",\"0.8667\",\"0.5333\",\"0.9333\",\"0.8000\",\"0.8000\",\"0.7333\",\"0.7333\",\"0.6667\",\"0.4667\",\"0.8667\",\"0.8667\",\"0.8000\",\"0.5333\",\"0.6667\",\"0.6000\",\"0.5333\",\"0.5333\",\"0.5333\",\"0.4667\",\"0.8000\",\"0.5333\",\"0.5333\",\"0.4667\",\"0.8667\",\"0.8667\",\"0.8667\",\"0.7333\",\"0.6667\",\"0.6667\",\"0.4667\",\"0.8000\",\"0.5333\",\"0.6667\",\"0.6667\",\"0.8667\",\"0.6000\",\"0.8667\",\"0.8667\",\"0.7333\",\"0.6667\",\"0.6000\",\"0.4000\",\"0.6667\",\"1.0000\",\"0.4667\",\"0.5333\",\"0.8667\",\"0.6000\",\"0.4667\",\"0.6000\",\"0.6000\",\"0.9333\",\"1.0000\",\"0.8000\",\"0.8000\",\"0.4000\",\"0.2667\",\"0.4000\",\"0.7333\",\"0.5333\",\"0.4667\",\"0.9333\",\"0.7333\",\"0.7333\",\"0.4667\",\"0.8667\",\"0.4667\",\"0.6000\",\"1.0000\"],\"header\":\"Prevalence60%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence65%\",\"name\":\"Prevalence65%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"1.0000\",\"0.6667\",\"1.0000\",\"0.5333\",\"0.7333\",\"0.6000\",\"1.0000\",\"0.8000\",\"0.9333\",\"0.7333\",\"0.6000\",\"0.5333\",\"0.6000\",\"0.7333\",\"0.6000\",\"0.9333\",\"0.2667\",\"0.6000\",\"0.5333\",\"0.6667\",\"0.4667\",\"0.5333\",\"0.8000\",\"0.6000\",\"0.8667\",\"0.6000\",\"0.4667\",\"0.5333\",\"0.6000\",\"0.7333\",\"0.4667\",\"0.7333\",\"0.4000\",\"0.6667\",\"0.4667\",\"0.3333\",\"0.7333\",\"0.8667\",\"0.6667\",\"0.9333\",\"0.8667\",\"0.5333\",\"0.7333\",\"0.4000\",\"0.9333\",\"0.6000\",\"0.3333\",\"0.6000\",\"0.5333\",\"0.9333\",\"0.8667\",\"0.5333\",\"0.7333\",\"0.5333\",\"0.5333\",\"0.4000\",\"0.4000\",\"0.3333\",\"0.5333\",\"0.3333\",\"0.8000\",\"0.8667\",\"0.8667\",\"0.7333\",\"0.4667\",\"0.5333\",\"0.7333\",\"1.0000\",\"1.0000\",\"0.8667\",\"0.8000\",\"0.2667\",\"0.8667\",\"0.4667\",\"0.8000\",\"0.6667\",\"0.5333\",\"0.6000\",\"0.6000\",\"0.8667\",\"0.6000\",\"0.6000\",\"0.5333\",\"0.6667\",\"0.6000\",\"0.4667\",\"0.7333\",\"0.6667\",\"0.7333\",\"0.6000\",\"0.6000\",\"0.8000\",\"0.4667\",\"0.4667\",\"0.5333\",\"0.4667\",\"0.6000\",\"0.7333\",\"1.0000\",\"0.8000\"],\"header\":\"Prevalence65%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence70%\",\"name\":\"Prevalence70%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.9333\",\"0.6000\",\"0.6667\",\"0.8667\",\"0.8000\",\"0.7333\",\"0.7333\",\"0.8000\",\"0.4667\",\"0.7333\",\"0.7333\",\"0.6000\",\"0.9333\",\"0.8000\",\"0.8000\",\"0.4667\",\"0.9333\",\"0.6667\",\"0.6667\",\"0.8000\",\"0.4667\",\"0.5333\",\"0.6667\",\"0.7333\",\"0.8667\",\"0.5333\",\"0.7333\",\"0.6667\",\"0.8667\",\"0.6000\",\"0.6667\",\"0.6000\",\"0.6667\",\"0.8667\",\"0.5333\",\"0.6000\",\"0.3333\",\"0.2667\",\"0.7333\",\"0.4000\",\"0.6667\",\"0.8000\",\"0.7333\",\"0.7333\",\"0.6000\",\"0.5333\",\"0.8000\",\"0.6667\",\"0.9333\",\"0.6667\",\"0.4667\",\"0.5333\",\"0.6667\",\"0.8000\",\"0.8000\",\"0.6000\",\"0.6667\",\"0.6667\",\"0.6667\",\"0.7333\",\"0.8000\",\"0.6000\",\"0.8667\",\"0.8667\",\"0.6667\",\"0.6667\",\"0.8667\",\"0.9333\",\"0.7333\",\"0.9333\",\"0.4667\",\"0.6667\",\"0.4667\",\"0.8667\",\"0.5333\",\"0.4667\",\"0.4000\",\"1.0000\",\"0.7333\",\"0.4000\",\"0.4000\",\"0.8000\",\"0.6000\",\"1.0000\",\"0.7333\",\"0.7333\",\"0.8667\",\"0.5333\",\"0.7333\",\"0.4667\",\"0.6000\",\"0.3333\",\"0.4667\",\"0.4667\",\"0.5333\",\"0.7333\",\"0.6667\",\"0.7333\",\"0.8667\",\"0.4667\"],\"header\":\"Prevalence70%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence75%\",\"name\":\"Prevalence75%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.6000\",\"0.6667\",\"0.8667\",\"0.6667\",\"0.7333\",\"0.7333\",\"0.9333\",\"0.8000\",\"0.6667\",\"0.5333\",\"0.6000\",\"0.6667\",\"0.4667\",\"0.8000\",\"0.8667\",\"0.8667\",\"0.4667\",\"0.9333\",\"0.6667\",\"0.8667\",\"0.8000\",\"0.7333\",\"0.8000\",\"0.8000\",\"0.8667\",\"0.4000\",\"0.6667\",\"0.4667\",\"0.4000\",\"0.4667\",\"0.8667\",\"0.5333\",\"1.0000\",\"0.6000\",\"0.7333\",\"0.6000\",\"0.4000\",\"0.5333\",\"0.8000\",\"0.6000\",\"0.6000\",\"0.6000\",\"0.4667\",\"0.8667\",\"1.0000\",\"0.9333\",\"0.4000\",\"0.9333\",\"0.7333\",\"0.6000\",\"0.4667\",\"0.6667\",\"0.4667\",\"0.6000\",\"0.9333\",\"0.8667\",\"0.6000\",\"0.7333\",\"0.7333\",\"0.4667\",\"0.6667\",\"0.7333\",\"0.4667\",\"0.5333\",\"0.6000\",\"0.8667\",\"0.4667\",\"0.8667\",\"0.8667\",\"0.8667\",\"0.4667\",\"0.8667\",\"0.8000\",\"0.6000\",\"0.8000\",\"0.5333\",\"0.4667\",\"0.6000\",\"0.2667\",\"0.6000\",\"0.8000\",\"0.6667\",\"0.6000\",\"0.7333\",\"0.6667\",\"0.6667\",\"0.6667\",\"0.8000\",\"0.6000\",\"0.8000\",\"0.4667\",\"0.6000\",\"0.4000\",\"0.7333\",\"0.6667\",\"0.9333\",\"0.7333\",\"1.0000\",\"0.6667\",\"0.8667\"],\"header\":\"Prevalence75%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence80%\",\"name\":\"Prevalence80%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.6667\",\"0.6000\",\"0.6000\",\"0.8000\",\"0.5333\",\"0.6000\",\"0.6000\",\"0.6000\",\"0.6000\",\"0.8667\",\"0.6667\",\"0.8000\",\"0.4667\",\"0.8000\",\"0.8667\",\"0.6667\",\"0.4000\",\"0.6000\",\"0.6000\",\"0.6000\",\"0.7333\",\"1.0000\",\"0.4000\",\"0.8667\",\"0.6667\",\"0.8000\",\"0.8000\",\"0.8000\",\"0.6000\",\"0.6000\",\"0.4667\",\"0.6667\",\"0.6667\",\"0.4000\",\"0.6000\",\"0.6000\",\"0.6000\",\"0.4000\",\"0.9333\",\"0.7333\",\"0.6000\",\"0.9333\",\"0.8000\",\"0.4000\",\"0.8000\",\"0.5333\",\"0.9333\",\"0.7333\",\"0.6667\",\"0.9333\",\"0.6000\",\"0.4000\",\"0.6667\",\"0.6667\",\"0.8667\",\"0.4667\",\"0.4000\",\"0.9333\",\"0.6667\",\"0.9333\",\"0.8667\",\"0.5333\",\"0.6667\",\"0.6000\",\"0.8000\",\"0.8000\",\"0.8667\",\"0.7333\",\"0.6000\",\"0.7333\",\"0.4000\",\"0.4000\",\"0.8667\",\"0.9333\",\"0.7333\",\"0.8667\",\"0.7333\",\"1.0000\",\"0.5333\",\"0.7333\",\"0.8667\",\"0.8667\",\"0.4667\",\"0.5333\",\"0.6000\",\"0.8000\",\"0.8000\",\"0.8667\",\"0.8667\",\"0.6667\",\"0.8000\",\"0.6000\",\"0.6000\",\"0.8667\",\"0.5333\",\"0.7333\",\"0.6000\",\"0.7333\",\"1.0000\",\"0.6000\"],\"header\":\"Prevalence80%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence85%\",\"name\":\"Prevalence85%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.4667\",\"0.5333\",\"0.8667\",\"0.7333\",\"0.6000\",\"0.8000\",\"0.8000\",\"0.6000\",\"0.4667\",\"0.6667\",\"0.8667\",\"0.5333\",\"0.7333\",\"0.4667\",\"0.7333\",\"0.7333\",\"0.5333\",\"0.5333\",\"0.6000\",\"1.0000\",\"0.6000\",\"0.9333\",\"0.6667\",\"0.4667\",\"0.7333\",\"0.4000\",\"0.4000\",\"0.6667\",\"0.4667\",\"0.8667\",\"0.6667\",\"0.4667\",\"0.4667\",\"0.4667\",\"0.9333\",\"0.8000\",\"0.6667\",\"0.5333\",\"0.4000\",\"0.8000\",\"0.8667\",\"0.6000\",\"0.9333\",\"0.6667\",\"0.6000\",\"0.8000\",\"0.8000\",\"0.4667\",\"0.8667\",\"0.4000\",\"0.8000\",\"0.8667\",\"1.0000\",\"0.8667\",\"0.4667\",\"0.6667\",\"0.8000\",\"0.4667\",\"0.6000\",\"0.8000\",\"0.6667\",\"0.4667\",\"0.6667\",\"0.8000\",\"0.4000\",\"0.5333\",\"0.6000\",\"0.8000\",\"0.6667\",\"1.0000\",\"0.4000\",\"0.3333\",\"1.0000\",\"0.8000\",\"0.5333\",\"1.0000\",\"0.7333\",\"0.5333\",\"0.8667\",\"0.5333\",\"0.6000\",\"0.8000\",\"0.4667\",\"0.4000\",\"0.4000\",\"0.8667\",\"0.5333\",\"0.6667\",\"0.5333\",\"0.6667\",\"0.8667\",\"0.5333\",\"0.6000\",\"0.7333\",\"0.7333\",\"0.5333\",\"0.4000\",\"0.8667\",\"0.8000\",\"0.6667\"],\"header\":\"Prevalence85%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence90%\",\"name\":\"Prevalence90%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.8000\",\"0.8000\",\"1.0000\",\"0.5333\",\"0.8000\",\"0.9333\",\"0.4000\",\"0.8667\",\"0.7333\",\"0.4667\",\"0.6667\",\"0.8000\",\"0.8000\",\"0.8000\",\"1.0000\",\"0.8000\",\"0.8667\",\"0.8667\",\"0.4667\",\"0.4667\",\"0.4667\",\"0.8000\",\"0.5333\",\"0.4000\",\"0.6667\",\"0.4000\",\"0.5333\",\"0.3333\",\"0.8000\",\"0.5333\",\"0.8000\",\"0.5333\",\"0.5333\",\"0.4667\",\"0.6000\",\"0.6000\",\"0.8667\",\"0.7333\",\"0.8000\",\"0.7333\",\"0.6667\",\"0.5333\",\"0.6667\",\"0.4667\",\"0.4667\",\"0.7333\",\"0.4667\",\"0.8667\",\"0.6667\",\"0.6667\",\"0.8000\",\"0.7333\",\"0.4667\",\"0.8000\",\"0.6000\",\"0.6667\",\"0.7333\",\"0.8000\",\"0.8000\",\"0.6000\",\"0.6000\",\"0.5333\",\"0.6000\",\"0.5333\",\"0.8667\",\"0.4000\",\"0.7333\",\"0.6000\",\"0.6000\",\"0.6000\",\"0.6000\",\"0.4667\",\"0.6667\",\"0.5333\",\"0.6667\",\"0.6000\",\"0.8667\",\"0.6667\",\"0.6667\",\"0.8000\",\"0.7333\",\"0.5333\",\"0.6000\",\"0.4667\",\"0.9333\",\"0.5333\",\"0.7333\",\"0.9333\",\"0.6000\",\"0.5333\",\"0.6000\",\"0.5333\",\"0.9333\",\"0.5333\",\"0.8000\",\"0.8667\",\"0.8000\",\"0.6000\",\"0.6000\",\"0.8667\"],\"header\":\"Prevalence90%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence95%\",\"name\":\"Prevalence95%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.6000\",\"0.8000\",\"0.6000\",\"0.4000\",\"0.8667\",\"0.7333\",\"0.4667\",\"0.7333\",\"0.9333\",\"0.8667\",\"0.4000\",\"0.7333\",\"0.2000\",\"0.8000\",\"0.4000\",\"0.5333\",\"0.4000\",\"0.7333\",\"0.6000\",\"0.4667\",\"0.6667\",\"0.6000\",\"0.6667\",\"0.5333\",\"0.6000\",\"0.4000\",\"0.8667\",\"0.9333\",\"1.0000\",\"0.5333\",\"0.3333\",\"0.3333\",\"0.6667\",\"0.7333\",\"0.7333\",\"0.8000\",\"0.7333\",\"0.6667\",\"0.6667\",\"0.5333\",\"0.6000\",\"0.6000\",\"1.0000\",\"0.6667\",\"0.5333\",\"0.6000\",\"0.6000\",\"0.6000\",\"0.6000\",\"0.5333\",\"0.6667\",\"0.6667\",\"0.9333\",\"0.6667\",\"0.8000\",\"0.6667\",\"0.8000\",\"0.7333\",\"0.8000\",\"0.6000\",\"0.6000\",\"0.9333\",\"0.5333\",\"0.4667\",\"0.5333\",\"0.4667\",\"0.5333\",\"0.6000\",\"0.4667\",\"0.3333\",\"0.8000\",\"0.8667\",\"0.3333\",\"0.4667\",\"0.6000\",\"0.8667\",\"0.7333\",\"1.0000\",\"0.5333\",\"0.6667\",\"0.6667\",\"0.5333\",\"0.4667\",\"0.6000\",\"0.4667\",\"0.6667\",\"0.6000\",\"0.6667\",\"0.9333\",\"0.7333\",\"0.8000\",\"0.5333\",\"0.4667\",\"1.0000\",\"0.6000\",\"0.6000\",\"0.8667\",\"0.8667\",\"0.2667\",\"0.4667\"],\"header\":\"Prevalence95%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,100],\"paginationType\":\"numbers\",\"showPagination\":true,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"5c65ffc12fc22496c6aff39a4dfed4d2\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\n\n\n\nIt is also possible to estimate the variation of OOB error for each prevalence interval filtering. This is done by running the random forests classification for n times, determined by the bootstrap value. The function will return a box plot figure and a table for each classification error.\n\nssu18_replicated.oob.error <- pime.oob.replicate(ssu18_prevalences, \"TEMP\",\n                                         bootstrap = 100, parallel = TRUE)\n\n\n\n\n(16S rRNA) Figure 1 | OOB error rate for the original data set (top) & the randomized data (bottom).\nTo obtain the confusion matrix from random forests classification use the following:\n\nssu18_prev_confuse <- paste(\"ssu18_best.prev$`Confusion`$\", ssu18_best, sep = \"\")\neval(parse(text = (ssu18_prev_confuse)))\n\nSave Phyloseq PIME objects\n\nssu18_ps_pime <- ssu18_prevalence_best\nssu18_ps_pime_tree <- rtree(ntaxa(ssu18_ps_pime), rooted = TRUE,\n                           tip.label = taxa_names(ssu18_ps_pime))\nssu18_ps_pime <- merge_phyloseq(ssu18_ps_pime,\n                               sample_data,\n                               ssu18_ps_pime_tree)\nsaveRDS(ssu18_ps_pime, \"files/filtering/pime/rdata/ssu18_ps_pime.rds\")\n\nSplit & save by predictor variable\n\ndata.frame(sample_data(ssu18_ps_pime))\nssu18_ps_pime_split <- pime.split.by.variable(ssu18_ps_pime, \"TEMP\")\nsaveRDS(ssu18_ps_pime_split$`0`, \"files/filtering/pime/rdata/ssu18_ps_pime_0.rds\")\nsaveRDS(ssu18_ps_pime_split$`3`, \"files/filtering/pime/rdata/ssu18_ps_pime_3.rds\")\nsaveRDS(ssu18_ps_pime_split$`8`, \"files/filtering/pime/rdata/ssu18_ps_pime_8.rds\")\n\n\n$`0`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 752 taxa and 5 samples ]\nsample_data() Sample Data:       [ 5 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 752 taxa by 8 taxonomic ranks ]\nphy_tree()    Phylogenetic Tree: [ 752 tips and 751 internal nodes ]\n\n$`3`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 692 taxa and 5 samples ]\nsample_data() Sample Data:       [ 5 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 692 taxa by 8 taxonomic ranks ]\nphy_tree()    Phylogenetic Tree: [ 692 tips and 691 internal nodes ]\n\n$`8`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 355 taxa and 5 samples ]\nsample_data() Sample Data:       [ 5 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 355 taxa by 8 taxonomic ranks ]\nphy_tree()    Phylogenetic Tree: [ 355 tips and 354 internal nodes ]\n\n\n\n\nSummary\nYou know the routine. How did filtering affect total reads and ASVs for each sample?\n\n\n\n(16S rRNA) Table 9 | Sample summary showing the number of reads and ASVs after PIME filtering.\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Sample_ID\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"PLOT\":[\"P01\",\"P01\",\"P02\",\"P03\",\"P03\",\"P04\",\"P05\",\"P05\",\"P06\",\"P07\",\"P07\",\"P08\",\"P09\",\"P09\",\"P10\"],\"TREAT\":[\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\"],\"TEMP\":[\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\"],\"PAIR\":[\"A\",\"A\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"C\",\"D\",\"D\",\"D\",\"E\",\"E\",\"E\"],\"total_reads\":[15636,16952,17190,17492,11737,17074,18360,14965,15426,16791,12722,15780,16697,10585,15125],\"total_asvs\":[502,322,590,596,224,570,499,289,664,516,276,594,563,170,491]},\"columns\":[{\"accessor\":\"Sample_ID\",\"name\":\"Metric\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W3C\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P09_D00_010_W8E\",\"P10_D00_010_C0E\"],\"header\":\"Metric\",\"minWidth\":150,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"PLOT\",\"name\":\"PLOT\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01\",\"P01\",\"P02\",\"P03\",\"P03\",\"P04\",\"P05\",\"P05\",\"P06\",\"P07\",\"P07\",\"P08\",\"P09\",\"P09\",\"P10\"],\"header\":\"PLOT\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"TREAT\",\"name\":\"TREAT\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"W\",\"C\"],\"header\":\"TREAT\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"TEMP\",\"name\":\"TEMP\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"8\",\"0\"],\"header\":\"TEMP\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"PAIR\",\"name\":\"PAIR\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"A\",\"A\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"C\",\"D\",\"D\",\"D\",\"E\",\"E\",\"E\"],\"header\":\"PAIR\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_reads\",\"name\":\"total_reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"15636\",\"16952\",\"17190\",\"17492\",\"11737\",\"17074\",\"18360\",\"14965\",\"15426\",\"16791\",\"12722\",\"15780\",\"16697\",\"10585\",\"15125\"],\"header\":\"total reads\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_asvs\",\"name\":\"total_asvs\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"502\",\"322\",\"590\",\"596\",\"224\",\"570\",\"499\",\"289\",\"664\",\"516\",\"276\",\"594\",\"563\",\"170\",\"491\"],\"header\":\"total asvs\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,15],\"paginationType\":\"numbers\",\"showPagination\":true,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"showSortable\":true,\"inline\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"dad7821178dfcfbe9f6676800d9fffb0\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nAnd here is how the subsets changed through the PIME filtering process.\n\n\n\n(16S rRNA) Table 10 | Changes in read count and total ASVs during PIME filtering.\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Description\":[\"FULL data set\",\"Rarefied data\",\"PIME filtered data\",\"PIME (+0C)\",\"PIME (+3C)\",\"PIME (+8C)\"],\"no. samples\":[15,15,15,5,5,5],\"total reads\":[936640,376320,232532,80595,84976,66961],\"total asvs\":[20173,17432,1058,752,692,355]},\"columns\":[{\"accessor\":\"Description\",\"name\":\"Description\",\"type\":\"character\",\"sortable\":false,\"resizable\":true,\"filterable\":false,\"cell\":[\"FULL data set\",\"Rarefied data\",\"PIME filtered data\",\"PIME (+0C)\",\"PIME (+3C)\",\"PIME (+8C)\"],\"header\":\"Description\",\"minWidth\":150,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"no. samples\",\"name\":\"no. samples\",\"type\":\"numeric\",\"sortable\":false,\"resizable\":true,\"filterable\":false,\"cell\":[\"15\",\"15\",\"15\",\"5\",\"5\",\"5\"],\"header\":\"no. samples\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total reads\",\"name\":\"total reads\",\"type\":\"numeric\",\"sortable\":false,\"resizable\":true,\"filterable\":false,\"cell\":[\"936640\",\"376320\",\"232532\",\"80595\",\"84976\",\"66961\"],\"header\":\"total reads\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total asvs\",\"name\":\"total asvs\",\"type\":\"numeric\",\"sortable\":false,\"resizable\":true,\"filterable\":false,\"cell\":[\"20173\",\"17432\",\"1058\",\"752\",\"692\",\"355\"],\"header\":\"total asvs\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"defaultPageSize\":6,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,6],\"paginationType\":\"numbers\",\"showPagination\":false,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"inline\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"aae7d488712b98d4000b604815803af3\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nITS\nSetup\nFirst, choose a phyloseq object and a sample data frame\n\nits18_pime_ds <- its18_ps_work\nits18_which_pime <- \"its18_pime_ds\"\nits18_pime_ds@phy_tree <- NULL\n\n\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 3355 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 3355 taxa by 8 taxonomic ranks ]\n\n\nits18_pime_sample_d <- data.frame(rowSums(otu_table(its18_pime_ds_full)))\nits18_pime_sample_d <- its18_pime_sample_d %>% dplyr::rename(total_reads = 1)\n\nits18_pime_ds <- rarefy_even_depth(its18_pime_ds_full,\n                               sample.size = min(its18_pime_sample_d$total_reads),\n                               trimOTUs = TRUE, replace = FALSE,\n                               rngseed = 119)\n\n298 OTUs were removed because they are no longer \npresent in any sample after random subsampling\n\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 3057 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 3057 taxa by 8 taxonomic ranks ]\n\nThe first step in PIME is to define if the microbial community presents a high relative abundance of taxa with low prevalence, which is considered as noise in PIME analysis. This is calculated by random forests analysis and is the baseline noise detection.\n\nits18_pime.oob.error <- pime.oob.error(its18_pime_ds, \"TEMP\")\n\n\n[1] 0.3846154\n\nSplit by Predictor Variable\n\ndata.frame(sample_data(its18_pime_ds))\nits18_per_variable_obj <- pime.split.by.variable(its18_pime_ds, \"TEMP\")\nits18_per_variable_obj\n\n\n$`0`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 1932 taxa and 5 samples ]\nsample_data() Sample Data:       [ 5 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 1932 taxa by 8 taxonomic ranks ]\n\n$`3`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 1682 taxa and 4 samples ]\nsample_data() Sample Data:       [ 4 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 1682 taxa by 8 taxonomic ranks ]\n\n$`8`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 1306 taxa and 4 samples ]\nsample_data() Sample Data:       [ 4 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 1306 taxa by 8 taxonomic ranks ]\n\nCalculate Prevalence Intervals\nUsing the output of pime.split.by.variable, we calculate the prevalence intervals with the function pime.prevalence. This function estimates the highest prevalence possible (no empty ASV table), calculates prevalence for taxa, starting at 5 maximum prevalence possible (no empty ASV table or dropping samples). After prevalence calculation, each prevalence interval are merged.\n\nits18_prevalences <- pime.prevalence(its18_per_variable_obj)\nits18_prevalences\n\n\nDetailed results for all prevalences intervals\n\n$`5`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 3057 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 3057 taxa by 8 taxonomic ranks ]\n\n$`10`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 3057 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 3057 taxa by 8 taxonomic ranks ]\n\n$`15`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 3057 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 3057 taxa by 8 taxonomic ranks ]\n\n$`20`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 2421 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 2421 taxa by 8 taxonomic ranks ]\n\n$`25`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 1152 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 1152 taxa by 8 taxonomic ranks ]\n\n$`30`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 1152 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 1152 taxa by 8 taxonomic ranks ]\n\n$`35`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 1152 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 1152 taxa by 8 taxonomic ranks ]\n\n$`40`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 873 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 873 taxa by 8 taxonomic ranks ]\n\n$`45`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 873 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 873 taxa by 8 taxonomic ranks ]\n\n$`50`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 474 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 474 taxa by 8 taxonomic ranks ]\n\n$`55`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 474 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 474 taxa by 8 taxonomic ranks ]\n\n$`60`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 336 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 336 taxa by 8 taxonomic ranks ]\n\n$`65`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 336 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 336 taxa by 8 taxonomic ranks ]\n\n$`70`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 336 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 336 taxa by 8 taxonomic ranks ]\n\n$`75`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 171 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 171 taxa by 8 taxonomic ranks ]\n\n$`80`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 114 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 114 taxa by 8 taxonomic ranks ]\n\n$`85`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 114 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 114 taxa by 8 taxonomic ranks ]\n\n$`90`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 114 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 114 taxa by 8 taxonomic ranks ]\n\n$`95`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 114 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 114 taxa by 8 taxonomic ranks ]\n\nCalculate Best Prevalence\nFinally, we use the function pime.best.prevalence to calculate the best prevalence. The function uses randomForest to build random forests trees for samples classification and variable importance computation. It performs classifications for each prevalence interval returned by pime.prevalence. Variable importance is calculated, returning the Mean Decrease Accuracy (MDA), Mean Decrease Impurity (MDI), overall and by sample group, and taxonomy for each ASV. PIME keeps the top 30 variables with highest MDA each prevalence level.\n\nset.seed(1911)\nits18_best.prev <- pime.best.prevalence(its18_prevalences, \"TEMP\")\n\n\n         Interval OOB error rate (%) OTUs  Nseqs\n1   Prevalence 5%              38.46 3057 119236\n2  Prevalence 10%              53.85 3057 119236\n3  Prevalence 15%              38.46 3057 119236\n4  Prevalence 20%              38.46 2421 112518\n5  Prevalence 25%              38.46 1152  91780\n6  Prevalence 30%              23.08 1152  91780\n7  Prevalence 35%              15.38 1152  91780\n8  Prevalence 40%              30.77  873  82647\n9  Prevalence 45%              15.38  873  82647\n10 Prevalence 50%               7.69  474  67665\n11 Prevalence 55%                  0  474  67665\n12 Prevalence 60%               7.69  336  60556\n13 Prevalence 65%                  0  336  60556\n14 Prevalence 70%               7.69  336  60556\n15 Prevalence 75%                  0  171  44260\n16 Prevalence 80%                  0  114  33492\n17 Prevalence 85%                  0  114  33492\n18 Prevalence 90%                  0  114  33492\n19 Prevalence 95%                  0  114  33492\n\n\nits18_what_is_best <- its18_best.prev$`OOB error`\nits18_what_is_best[, c(2:4)] <- sapply(its18_what_is_best[, c(2:4)], as.numeric)\nits18_what_is_best <- its18_what_is_best %>%\n  dplyr::rename(\"OOB_error_rate\" = \"OOB error rate (%)\")\nits18_what_is_best$Interval <- str_replace_all(its18_what_is_best$Interval, \"%\", \"\")\nits18_best <- with(its18_what_is_best, Interval[which.min(OOB_error_rate)])\nits18_best <- paste(\"`\", its18_best, \"`\", sep = \"\")\nits18_prev_choice <- paste(\"its18_best.prev$`Importance`$\", its18_best, sep = \"\")\nits18_imp_best <- eval(parse(text = (its18_prev_choice)))\n\nLooks like the lowest OOB error rate (%) that retains the most ASVs is 0% from Prevalence 55. We will use this interval.\nBest Prevalence Summary\n\n\n\n(ITS) Table 7 | Summary of top 30 ASVs from the chosen prevalence interval.\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"ASV_ID\":[\"ASV307\",\"ASV302\",\"ASV677\",\"ASV643\",\"ASV71\",\"ASV437\",\"ASV125\",\"ASV318\",\"ASV502\",\"ASV104\",\"ASV40\",\"ASV1141\",\"ASV481\",\"ASV349\",\"ASV659\",\"ASV653\",\"ASV33\",\"ASV118\",\"ASV3\",\"ASV184\",\"ASV164\",\"ASV81\",\"ASV154\",\"ASV567\",\"ASV46\",\"ASV140\",\"ASV570\",\"ASV1318\",\"ASV185\",\"ASV603\"],\"Control\":[0.0033,0.01,0.013,0.0037,0.0083,0.011,0.0087,-0.001,0.002,0.0018,0.004,0.006,0.005,0.009,0.0017,0.008,0.006,0.006,0.0017,0.0048,0.001,0.007,0,0.0037,0.003,0.006,0.001,0.005,0.0043,0],\"Warm_3\":[0.006,0.001,0.003,0.0047,0.002,0.0047,0.003,0.006,0.0027,0.001,0.001,0.004,0.005,0.001,0.008,0.001,0.002,0.002,0.002,0.001,0.001,0,0.001,0.003,0.006,-0.002,0.001,0.002,0,0.002],\"Warm_8\":[0.0137,0.008,0.003,0.011,0.005,0.002,0.005,0.0107,0.007,0.0093,0.0063,0,0,0,0.004,0.0027,0.003,0,0.0063,0.001,0.007,0.0027,0.006,0.0017,0,0.005,0.006,0,0.002,0.006],\"MeanDecreaseAccuracy\":[0.0076,0.0072,0.0062,0.0059,0.0057,0.0054,0.0053,0.0051,0.0045,0.0042,0.0041,0.0039,0.0039,0.0039,0.0038,0.0036,0.0035,0.0031,0.003,0.003,0.0029,0.0029,0.0028,0.0028,0.0027,0.0027,0.0026,0.0026,0.0024,0.0024],\"MeanDecreaseGini\":[0.0859,0.1292,0.0779,0.1085,0.0964,0.089,0.0781,0.0646,0.0643,0.1456,0.0652,0.04,0.0816,0.0742,0.0888,0.0749,0.0725,0.0476,0.0381,0.0519,0.0935,0.036,0.0516,0.0415,0.046,0.0494,0.0335,0.0728,0.0725,0.0345],\"Kingdom\":[\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\"],\"Phylum\":[\"k_Fungi\",\"k_Fungi\",\"Ascomycota\",\"k_Fungi\",\"Basidiomycota\",\"Ascomycota\",\"Ascomycota\",\"Basidiomycota\",\"k_Fungi\",\"Ascomycota\",\"Ascomycota\",\"Ascomycota\",\"Ascomycota\",\"Ascomycota\",\"Ascomycota\",\"Basidiomycota\",\"Mortierellomycota\",\"k_Fungi\",\"Ascomycota\",\"Rozellomycota\",\"Basidiomycota\",\"Chytridiomycota\",\"k_Fungi\",\"k_Fungi\",\"Basidiomycota\",\"Ascomycota\",\"Ascomycota\",\"k_Fungi\",\"Basidiomycota\",\"Zoopagomycota\"],\"Class\":[\"k_Fungi\",\"k_Fungi\",\"Sordariomycetes\",\"k_Fungi\",\"Tremellomycetes\",\"Dothideomycetes\",\"Pezizomycetes\",\"Agaricomycetes\",\"k_Fungi\",\"Sordariomycetes\",\"Dothideomycetes\",\"p_Ascomycota\",\"Sordariomycetes\",\"Sordariomycetes\",\"p_Ascomycota\",\"p_Basidiomycota\",\"Mortierellomycetes\",\"k_Fungi\",\"p_Ascomycota\",\"Rozellomycotina_cls_Incertae_sedis\",\"Agaricomycetes\",\"Chytridiomycetes\",\"k_Fungi\",\"k_Fungi\",\"Agaricomycetes\",\"p_Ascomycota\",\"Saccharomycetes\",\"k_Fungi\",\"Tremellomycetes\",\"Zoopagomycetes\"],\"Order\":[\"k_Fungi\",\"k_Fungi\",\"Xylariales\",\"k_Fungi\",\"Trichosporonales\",\"Pleosporales\",\"Pezizales\",\"Agaricales\",\"k_Fungi\",\"Xylariales\",\"Pleosporales\",\"p_Ascomycota\",\"Hypocreales\",\"Xylariales\",\"p_Ascomycota\",\"p_Basidiomycota\",\"Mortierellales\",\"k_Fungi\",\"p_Ascomycota\",\"GS11\",\"Sebacinales\",\"Chytridiales\",\"k_Fungi\",\"k_Fungi\",\"Cantharellales\",\"p_Ascomycota\",\"Saccharomycetales\",\"k_Fungi\",\"Trichosporonales\",\"Zoopagales\"],\"Family\":[\"k_Fungi\",\"k_Fungi\",\"Xylariaceae\",\"k_Fungi\",\"Trichosporonaceae\",\"Pleosporales_fam_Incertae_sedis\",\"Pyronemataceae\",\"Clavariaceae\",\"k_Fungi\",\"Microdochiaceae\",\"Pleosporales_fam_Incertae_sedis\",\"p_Ascomycota\",\"Nectriaceae\",\"Xylariaceae\",\"p_Ascomycota\",\"p_Basidiomycota\",\"Mortierellaceae\",\"k_Fungi\",\"p_Ascomycota\",\"o_GS11\",\"o_Sebacinales\",\"Chytridiales_fam_Incertae_sedis\",\"k_Fungi\",\"k_Fungi\",\"Ceratobasidiaceae\",\"p_Ascomycota\",\"Metschnikowiaceae\",\"k_Fungi\",\"Trichosporonaceae\",\"Piptocephalidaceae\"],\"Genus\":[\"k_Fungi\",\"k_Fungi\",\"f_Xylariaceae\",\"k_Fungi\",\"Apiotrichum\",\"Polyschema\",\"Scutellinia\",\"Ramariopsis\",\"k_Fungi\",\"Idriella\",\"Polyschema\",\"p_Ascomycota\",\"Fusarium\",\"f_Xylariaceae\",\"p_Ascomycota\",\"p_Basidiomycota\",\"Mortierella\",\"k_Fungi\",\"p_Ascomycota\",\"o_GS11\",\"o_Sebacinales\",\"Delfinachytrium\",\"k_Fungi\",\"k_Fungi\",\"f_Ceratobasidiaceae\",\"p_Ascomycota\",\"Metschnikowia\",\"k_Fungi\",\"Apiotrichum\",\"Syncephalis\"]},\"columns\":[{\"accessor\":\"ASV_ID\",\"name\":\"ASV ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"ASV307\",\"ASV302\",\"ASV677\",\"ASV643\",\"ASV71\",\"ASV437\",\"ASV125\",\"ASV318\",\"ASV502\",\"ASV104\",\"ASV40\",\"ASV1141\",\"ASV481\",\"ASV349\",\"ASV659\",\"ASV653\",\"ASV33\",\"ASV118\",\"ASV3\",\"ASV184\",\"ASV164\",\"ASV81\",\"ASV154\",\"ASV567\",\"ASV46\",\"ASV140\",\"ASV570\",\"ASV1318\",\"ASV185\",\"ASV603\"],\"header\":\"ASV ID\",\"minWidth\":100,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"Control\",\"name\":\"Control\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.0033\",\"0.0100\",\"0.0130\",\"0.0037\",\"0.0083\",\"0.0110\",\"0.0087\",\"-0.0010\",\"0.0020\",\"0.0018\",\"0.0040\",\"0.0060\",\"0.0050\",\"0.0090\",\"0.0017\",\"0.0080\",\"0.0060\",\"0.0060\",\"0.0017\",\"0.0048\",\"0.0010\",\"0.0070\",\"0.0000\",\"0.0037\",\"0.0030\",\"0.0060\",\"0.0010\",\"0.0050\",\"0.0043\",\"0.0000\"],\"header\":\"Control\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Warm_3\",\"name\":\"Warm_3\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.0060\",\"0.0010\",\"0.0030\",\"0.0047\",\"0.0020\",\"0.0047\",\"0.0030\",\"0.0060\",\"0.0027\",\"0.0010\",\"0.0010\",\"0.0040\",\"0.0050\",\"0.0010\",\"0.0080\",\"0.0010\",\"0.0020\",\"0.0020\",\"0.0020\",\"0.0010\",\"0.0010\",\"0.0000\",\"0.0010\",\"0.0030\",\"0.0060\",\"-0.0020\",\"0.0010\",\"0.0020\",\"0.0000\",\"0.0020\"],\"header\":\"Warm 3\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Warm_8\",\"name\":\"Warm_8\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.0137\",\"0.0080\",\"0.0030\",\"0.0110\",\"0.0050\",\"0.0020\",\"0.0050\",\"0.0107\",\"0.0070\",\"0.0093\",\"0.0063\",\"0.0000\",\"0.0000\",\"0.0000\",\"0.0040\",\"0.0027\",\"0.0030\",\"0.0000\",\"0.0063\",\"0.0010\",\"0.0070\",\"0.0027\",\"0.0060\",\"0.0017\",\"0.0000\",\"0.0050\",\"0.0060\",\"0.0000\",\"0.0020\",\"0.0060\"],\"header\":\"Warm 8\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"MeanDecreaseAccuracy\",\"name\":\"MeanDecreaseAccuracy\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.0076\",\"0.0072\",\"0.0062\",\"0.0059\",\"0.0057\",\"0.0054\",\"0.0053\",\"0.0051\",\"0.0045\",\"0.0042\",\"0.0041\",\"0.0039\",\"0.0039\",\"0.0039\",\"0.0038\",\"0.0036\",\"0.0035\",\"0.0031\",\"0.0030\",\"0.0030\",\"0.0029\",\"0.0029\",\"0.0028\",\"0.0028\",\"0.0027\",\"0.0027\",\"0.0026\",\"0.0026\",\"0.0024\",\"0.0024\"],\"header\":\"MeanDecreaseAccuracy\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"MeanDecreaseGini\",\"name\":\"MeanDecreaseGini\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.0859\",\"0.1292\",\"0.0779\",\"0.1085\",\"0.0964\",\"0.0890\",\"0.0781\",\"0.0646\",\"0.0643\",\"0.1456\",\"0.0652\",\"0.0400\",\"0.0816\",\"0.0742\",\"0.0888\",\"0.0749\",\"0.0725\",\"0.0476\",\"0.0381\",\"0.0519\",\"0.0935\",\"0.0360\",\"0.0516\",\"0.0415\",\"0.0460\",\"0.0494\",\"0.0335\",\"0.0728\",\"0.0725\",\"0.0345\"],\"header\":\"MeanDecreaseGini\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Kingdom\",\"name\":\"Kingdom\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\",\"Fungi\"],\"header\":\"Kingdom\",\"minWidth\":100,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Phylum\",\"name\":\"Phylum\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"k_Fungi\",\"k_Fungi\",\"Ascomycota\",\"k_Fungi\",\"Basidiomycota\",\"Ascomycota\",\"Ascomycota\",\"Basidiomycota\",\"k_Fungi\",\"Ascomycota\",\"Ascomycota\",\"Ascomycota\",\"Ascomycota\",\"Ascomycota\",\"Ascomycota\",\"Basidiomycota\",\"Mortierellomycota\",\"k_Fungi\",\"Ascomycota\",\"Rozellomycota\",\"Basidiomycota\",\"Chytridiomycota\",\"k_Fungi\",\"k_Fungi\",\"Basidiomycota\",\"Ascomycota\",\"Ascomycota\",\"k_Fungi\",\"Basidiomycota\",\"Zoopagomycota\"],\"header\":\"Phylum\",\"minWidth\":150,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Class\",\"name\":\"Class\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"k_Fungi\",\"k_Fungi\",\"Sordariomycetes\",\"k_Fungi\",\"Tremellomycetes\",\"Dothideomycetes\",\"Pezizomycetes\",\"Agaricomycetes\",\"k_Fungi\",\"Sordariomycetes\",\"Dothideomycetes\",\"p_Ascomycota\",\"Sordariomycetes\",\"Sordariomycetes\",\"p_Ascomycota\",\"p_Basidiomycota\",\"Mortierellomycetes\",\"k_Fungi\",\"p_Ascomycota\",\"Rozellomycotina_cls_Incertae_sedis\",\"Agaricomycetes\",\"Chytridiomycetes\",\"k_Fungi\",\"k_Fungi\",\"Agaricomycetes\",\"p_Ascomycota\",\"Saccharomycetes\",\"k_Fungi\",\"Tremellomycetes\",\"Zoopagomycetes\"],\"header\":\"Class\",\"minWidth\":150,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Order\",\"name\":\"Order\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"k_Fungi\",\"k_Fungi\",\"Xylariales\",\"k_Fungi\",\"Trichosporonales\",\"Pleosporales\",\"Pezizales\",\"Agaricales\",\"k_Fungi\",\"Xylariales\",\"Pleosporales\",\"p_Ascomycota\",\"Hypocreales\",\"Xylariales\",\"p_Ascomycota\",\"p_Basidiomycota\",\"Mortierellales\",\"k_Fungi\",\"p_Ascomycota\",\"GS11\",\"Sebacinales\",\"Chytridiales\",\"k_Fungi\",\"k_Fungi\",\"Cantharellales\",\"p_Ascomycota\",\"Saccharomycetales\",\"k_Fungi\",\"Trichosporonales\",\"Zoopagales\"],\"header\":\"Order\",\"minWidth\":150,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Family\",\"name\":\"Family\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"k_Fungi\",\"k_Fungi\",\"Xylariaceae\",\"k_Fungi\",\"Trichosporonaceae\",\"Pleosporales_fam_Incertae_sedis\",\"Pyronemataceae\",\"Clavariaceae\",\"k_Fungi\",\"Microdochiaceae\",\"Pleosporales_fam_Incertae_sedis\",\"p_Ascomycota\",\"Nectriaceae\",\"Xylariaceae\",\"p_Ascomycota\",\"p_Basidiomycota\",\"Mortierellaceae\",\"k_Fungi\",\"p_Ascomycota\",\"o_GS11\",\"o_Sebacinales\",\"Chytridiales_fam_Incertae_sedis\",\"k_Fungi\",\"k_Fungi\",\"Ceratobasidiaceae\",\"p_Ascomycota\",\"Metschnikowiaceae\",\"k_Fungi\",\"Trichosporonaceae\",\"Piptocephalidaceae\"],\"header\":\"Family\",\"minWidth\":150,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Genus\",\"name\":\"Genus\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"k_Fungi\",\"k_Fungi\",\"f_Xylariaceae\",\"k_Fungi\",\"Apiotrichum\",\"Polyschema\",\"Scutellinia\",\"Ramariopsis\",\"k_Fungi\",\"Idriella\",\"Polyschema\",\"p_Ascomycota\",\"Fusarium\",\"f_Xylariaceae\",\"p_Ascomycota\",\"p_Basidiomycota\",\"Mortierella\",\"k_Fungi\",\"p_Ascomycota\",\"o_GS11\",\"o_Sebacinales\",\"Delfinachytrium\",\"k_Fungi\",\"k_Fungi\",\"f_Ceratobasidiaceae\",\"p_Ascomycota\",\"Metschnikowia\",\"k_Fungi\",\"Apiotrichum\",\"Syncephalis\"],\"header\":\"Genus\",\"minWidth\":150,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,30],\"paginationType\":\"numbers\",\"showPagination\":true,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"f38d9cfe4109dce65caa354438493969\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\n\n [1] \"ASV307\"  \"ASV302\"  \"ASV677\"  \"ASV643\"  \"ASV71\"   \"ASV437\" \n [7] \"ASV125\"  \"ASV318\"  \"ASV502\"  \"ASV104\"  \"ASV40\"   \"ASV1141\"\n[13] \"ASV481\"  \"ASV349\"  \"ASV659\"  \"ASV653\"  \"ASV33\"   \"ASV118\" \n[19] \"ASV3\"    \"ASV184\"  \"ASV164\"  \"ASV81\"   \"ASV154\"  \"ASV567\" \n[25] \"ASV46\"   \"ASV140\"  \"ASV570\"  \"ASV1318\" \"ASV185\"  \"ASV603\" \n\nNow we need to create a phyloseq object of ASVs at this cutoff (Prevalence 55).\n\nits18_best_val <- str_replace_all(its18_best, \"Prevalence \", \"\")\nits18_best_val <- paste(\"its18_prevalences$\", its18_best_val, sep = \"\")\nits18_prevalence_best <- eval(parse(text = (its18_best_val)))\nsaveRDS(its18_prevalence_best, \"files/filtering/pime/rdata/its18_asv_prevalence_best.rds\")\n\nAnd look at a summary of the data.\n\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 474 taxa and 13 samples ]\nsample_data() Sample Data:       [ 13 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 474 taxa by 8 taxonomic ranks ]\n\n\n\n\n(ITS) Table 5 | Summary of PERfect filtering using the defualt order and filtering p-values < 0.10.\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Metric\":[\"Total number of reads\",\"Min. number of reads\",\"Max. number of reads\",\"Average number of reads\",\"Median number of reads\",\"Total ASVs\",\"Min. number of ASVs\",\"Max. number of ASVs\",\"Average number of ASVs\",\"Median number of ASVs\"],\"Full data\":[490767,9172,64636,37751,38371,3355,335,1017,757,765],\"PIME filter\":[67665,3442,6761,5205,4963,474,97,246,181,196]},\"columns\":[{\"accessor\":\"Metric\",\"name\":\"Metric\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"Total number of reads\",\"Min. number of reads\",\"Max. number of reads\",\"Average number of reads\",\"Median number of reads\",\"Total ASVs\",\"Min. number of ASVs\",\"Max. number of ASVs\",\"Average number of ASVs\",\"Median number of ASVs\"],\"header\":\"Metric\",\"minWidth\":200,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"Full data\",\"name\":\"Full data\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"490767\",\"9172\",\"64636\",\"37751\",\"38371\",\"3355\",\"335\",\"1017\",\"757\",\"765\"],\"header\":\"Full data\",\"minWidth\":150,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"PIME filter\",\"name\":\"PIME filter\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"67665\",\"3442\",\"6761\",\"5205\",\"4963\",\"474\",\"97\",\"246\",\"181\",\"196\"],\"header\":\"PIME filter\",\"minWidth\":150,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"defaultPageSize\":10,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,10],\"paginationType\":\"numbers\",\"showPagination\":false,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"82b38e8e6ec875ed50d6b64dfc938651\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nEstimate Error in Prediction\nUsing the function pime.error.prediction we can estimate the error in prediction. For each prevalence interval, this function randomizes the samples labels into arbitrary groupings using n random permutations, defined by the bootstrap value. For each, randomized and prevalence filtered, data set the OOB error rate is calculated to estimate whether the original differences in groups of samples occur by chance. Results are in a list containing a table and a box plot summarizing the results.\n\nits18_randomized <- pime.error.prediction(its18_pime_ds, \"TEMP\",\n                                          bootstrap = 100, parallel = TRUE,\n                                          max.prev = 95)\n\n\n\n\n(ITS) Table 8 | Results of 100 random permutations for each prevalence interval based on a function that randomizes the samples labels into arbitrary groupings. using n random permutations. For each randomized and prevalence filtered data set, the OOB error rate is calculated to estimate whether the original differences in groups of samples occur by chance. \n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Prevalence5%\":[0.9231,0.6923,0.9231,0.3846,1,0.4615,0.6923,0.6154,0.7692,0.5385,0.7692,0.5385,0.5385,0.6154,0.5385,0.7692,0.6154,0.9231,1,0.6923,0.8462,1,0.8462,0.8462,0.4615,0.7692,0.4615,0.5385,0.6923,0.3077,0.8462,0.3846,0.6923,0.7692,0.3846,1,0.6154,0.9231,0.4615,0.6154,0.6154,0.3077,0.3846,0.3846,0.6154,0.9231,0.4615,0.5385,0.7692,0.9231,0.5385,0.9231,0.9231,1,0.4615,0.3846,0.6923,0.1538,0.7692,0.4615,0.5385,0.3846,0.3846,0.9231,0.8462,0.6154,0.4615,0.9231,0.6154,0.3846,0.4615,0.8462,0.7692,0.7692,1,0.5385,0.4615,0.5385,0.3077,1,0.6154,0.3077,0.3846,0.6154,0.6154,0.4615,0.4615,0.4615,0.4615,0.8462,0.6923,0.9231,0.5385,0.9231,0.3846,0.6923,0.8462,1,0.3846,0.6923],\"Prevalence10%\":[0.9231,0.7692,0.6154,0.5385,0.4615,0.4615,0.6923,0.3846,0.9231,0.3846,1,0.7692,0.5385,0.6923,0.6923,0.5385,0.5385,0.7692,0.8462,0.9231,0.9231,0.9231,0.6154,0.5385,0.8462,0.7692,0.9231,0.9231,0.5385,0.9231,0.3077,1,0.6154,0.6154,0.5385,0.7692,0.8462,0.5385,0.3846,0.3077,0.6923,0.9231,0.7692,0.5385,1,0.7692,0.3846,0.3846,0.3846,0.5385,0.4615,0.4615,0.7692,0.7692,0.6154,0.9231,0.4615,0.5385,0.4615,0.7692,0.4615,0.6923,0.6154,0.7692,0.5385,0.5385,0.5385,0.6923,0.9231,0.6923,0.4615,0.6154,0.6154,0.6923,0.8462,0.7692,0.6154,0.6154,0.6923,0.4615,0.7692,0.5385,0.6923,0.5385,0.5385,0.9231,0.6154,0.5385,0.7692,1,0.6923,0.4615,0.6154,0.9231,0.6923,0.9231,0.9231,0.9231,0.5385,0.4615],\"Prevalence15%\":[0.6923,0.7692,0.4615,0.4615,0.5385,0.6154,0.3846,0.7692,0.8462,0.6154,0.3077,0.6154,0.4615,0.5385,0.4615,1,0.2308,0.7692,0.9231,0.3077,0.5385,0.7692,0.4615,0.3077,0.9231,0.9231,0.4615,0.9231,0.4615,0.5385,0.5385,0.9231,0.3846,0.8462,0.8462,0.4615,0.4615,0.8462,0.6923,0.6923,0.4615,0.5385,0.5385,0.5385,0.9231,0.7692,0.5385,0.8462,0.6154,0.6154,1,0.7692,0.6923,0.4615,0.7692,0.6923,0.5385,0.6923,0.7692,0.9231,0.5385,0.3846,0.6923,0.6154,0.7692,0.3846,0.9231,0.3846,0.6923,0.6154,0.8462,0.6154,0.5385,0.6154,0.7692,0.3077,0.7692,0.3846,0.6154,0.4615,0.6154,0.6154,0.5385,0.4615,0.5385,0.8462,0.7692,0.6154,0.7692,0.6923,0.5385,0.6154,0.9231,0.3846,0.4615,0.3846,0.3846,0.3846,0.4615,1],\"Prevalence20%\":[0.8462,0.4615,0.3846,0.8462,0.6154,0.4615,0.6923,0.4615,0.8462,0.4615,0.3846,0.4615,0.6154,0.4615,0.5385,0.5385,0.6923,0.5385,0.9231,0.4615,0.4615,0.4615,0.6923,0.6923,0.7692,0.4615,0.8462,0.6154,0.8462,0.4615,0.6923,0.3846,0.9231,0.8462,0.8462,0.4615,0.4615,0.7692,0.6154,0.7692,0.6154,0.4615,0.4615,0.4615,0.6923,0.3846,0.4615,0.6923,0.5385,0.6923,0.6923,0.6154,0.4615,0.8462,0.4615,0.6154,0.8462,1,0.9231,0.7692,0.3846,0.9231,0.8462,0.9231,0.3846,0.6154,0.5385,0.4615,0.3077,0.5385,0.4615,0.6923,0.6923,0.3846,0.2308,0.4615,0.4615,0.8462,0.6154,0.6923,0.6154,0.7692,0.7692,0.5385,1,0.8462,0.4615,0.8462,0.9231,0.9231,0.4615,0.6923,0.3846,0.9231,0.3077,0.6923,0.6923,0.8462,0.8462,0.5385],\"Prevalence25%\":[0.3846,0.4615,0.9231,0.4615,0.8462,0.6154,0.4615,1,0.4615,0.9231,0.5385,0.9231,0.4615,0.3846,0.5385,0.1538,0.5385,0.6923,0.5385,0.4615,0.5385,0.9231,0.4615,0.6923,0.6154,0.3077,0.5385,0.4615,0.2308,0.6923,0.9231,0.6923,0.5385,0.3846,0.4615,0.9231,0.6154,0.4615,0.3846,0.7692,0.4615,0.7692,0.8462,0.6154,0.9231,0.9231,0.5385,0.4615,0.6154,0.6154,0.6923,0.6154,0.7692,1,0.6923,0.8462,0.3846,0.5385,0.6154,0.6923,0.6923,0.9231,0.3846,0.3846,0.8462,0.4615,0.8462,0.5385,0.3846,0.4615,0.5385,0.7692,0.6154,1,0.4615,0.6923,0.6154,0.3846,0.5385,0.6923,0.6154,0.6154,1,0.3846,0.5385,0.4615,0.8462,0.7692,0.3846,0.4615,1,0.9231,0.5385,0.5385,0.9231,0.9231,0.5385,0.8462,0.8462,0.5385],\"Prevalence30%\":[0.7692,0.7692,0.3846,0.8462,0.7692,0.9231,0.5385,0.4615,1,0.9231,0.8462,0.4615,0.7692,0.6154,0.9231,0.6923,0.9231,0.9231,0.4615,0.3846,0.3846,0.3846,0.3846,0.3077,0.4615,0.4615,0.6923,1,0.5385,0.5385,0.7692,0.6154,0.6154,0.4615,0.3846,0.5385,0.4615,0.3846,0.8462,0.3846,0.8462,0.8462,0.5385,0.7692,0.6154,0.5385,0.7692,0.7692,0.8462,0.3846,0.9231,0.3846,0.3077,0.2308,0.4615,0.6154,0.8462,0.8462,0.8462,0.8462,1,0.4615,0.6923,0.5385,0.7692,0.6154,0.3846,0.6154,0.4615,0.6923,1,0.6923,0.6154,0.8462,0.5385,0.7692,0.8462,0.4615,0.7692,0.8462,0.3846,0.3846,0.8462,0.3846,0.5385,0.6923,0.7692,0.4615,0.4615,0.7692,0.2308,0.9231,0.4615,0.6923,0.7692,0.8462,0.6923,0.4615,0.9231,0.8462],\"Prevalence35%\":[0.3077,0.5385,0.6154,0.6154,0.3077,0.6154,0.5385,0.6154,0.6154,0.5385,0.9231,1,0.3846,0.3846,0.6154,0.9231,0.4615,0.9231,0.6154,0.7692,0.7692,0.8462,0.6923,0.9231,0.8462,0.7692,0.8462,0.5385,0.6154,0.4615,0.8462,0.4615,0.7692,1,0.6154,0.8462,0.5385,0.7692,0.9231,0.6923,0.2308,0.6923,0.9231,0.3846,0.8462,0.5385,0.5385,0.8462,0.7692,0.3846,0.4615,0.8462,0.6154,0.6923,0.7692,0.3846,0.5385,0.3846,0.4615,0.7692,0.4615,0.3077,0.6923,0.8462,0.8462,0.5385,0.9231,0.9231,1,0.5385,0.4615,0.4615,0.6154,0.4615,0.7692,0.4615,0.8462,0.5385,0.4615,0.6923,0.6154,0.4615,0.9231,0.6154,0.4615,0.3077,1,1,0.5385,0.6923,0.6154,0.6923,0.5385,0.9231,0.9231,0.5385,0.7692,0.4615,0.6154,1],\"Prevalence40%\":[0.6154,0.6923,0.9231,1,0.5385,0.6923,0.5385,0.8462,0.4615,0.6923,0.9231,0.8462,0.8462,0.5385,0.3846,0.4615,0.6154,1,0.6154,0.5385,0.4615,0.6154,0.7692,0.4615,0.7692,0.6154,0.7692,0.7692,0.6923,0.6923,0.6923,0.9231,0.5385,0.6154,0.9231,0.7692,0.8462,0.4615,0.7692,0.4615,0.5385,0.3077,0.8462,0.1538,0.6154,0.5385,0.5385,0.4615,0.4615,0.5385,0.9231,0.7692,0.5385,0.4615,0.6923,0.5385,0.4615,0.9231,0.5385,0.6923,0.9231,0.6923,1,1,0.6154,1,0.6154,0.5385,0.7692,0.6923,0.6154,0.4615,0.7692,0.8462,0.6154,0.5385,0.4615,0.6154,0.7692,0.6154,0.3846,0.4615,0.3846,0.3077,0.9231,0.5385,0.4615,0.6923,0.3077,1,0.6923,0.5385,0.6923,0.7692,0.6923,0.5385,0.6923,0.3077,0.5385,0.8462],\"Prevalence45%\":[0.6923,1,1,0.8462,0.6154,0.6154,0.9231,0.8462,0.6154,0.5385,0.6154,0.7692,0.6154,0.6923,0.6154,1,1,0.9231,0.6154,0.5385,0.6154,0.3077,0.6154,0.4615,1,0.3846,0.6154,0.5385,0.8462,0.6154,0.4615,0.9231,0.6923,0.5385,1,0.3846,0.8462,0.6154,0.6154,0.5385,0.6923,0.7692,0.6154,0.6154,0.6154,0.4615,0.4615,0.6154,0.7692,0.6154,0.9231,0.6923,0.9231,0.3077,0.9231,0.5385,0.5385,0.7692,0.8462,0.5385,0.6923,0.6923,0.3846,0.9231,0.6923,1,0.6923,0.6154,0.7692,0.6154,0.8462,0.6154,0.9231,0.8462,0.3846,0.5385,0.6923,0.5385,0.4615,0.7692,0.3077,0.4615,0.3846,1,0.6154,0.6154,0.6923,0.5385,0.6154,0.6923,0.6923,0.5385,0.6154,0.6154,0.5385,0.6923,0.8462,0.8462,0.7692,0.8462],\"Prevalence50%\":[0.3846,0.7692,0.2308,0.6154,0.2308,0.7692,0.4615,0.5385,1,0.5385,0.6923,1,1,0.4615,0.4615,0.7692,0.7692,0.6923,0.8462,0.7692,0.8462,0.7692,0.8462,0.7692,0.5385,0.6923,0.7692,0.6923,0.7692,0.3846,0.6923,0.7692,0.5385,0.9231,0.6923,0.6923,0.6154,0.8462,0.7692,0.4615,0.9231,0.3846,0.8462,0.6154,0.6154,0.9231,0.4615,0.5385,0.8462,0.5385,0.5385,0.4615,0.3077,0.3077,0.5385,0.6923,0.7692,0.9231,0.4615,0.3077,0.3846,0.5385,0.7692,0.4615,0.5385,0.3846,0.9231,0.5385,0.6154,0.6154,0.6923,0.8462,0.6154,0.5385,0.9231,0.8462,0.7692,0.7692,0.5385,0.4615,0.6154,0.4615,0.9231,0.8462,0.2308,1,0.4615,0.8462,0.7692,0.9231,1,0.7692,0.8462,0.4615,0.6154,0.6154,0.4615,0.6923,0.9231,0.9231],\"Prevalence55%\":[0.3846,0.5385,0.6154,1,0.5385,0.7692,0.5385,0.8462,1,0.9231,0.3846,1,0.4615,0.4615,0.7692,0.4615,0.6923,0.5385,0.4615,0.6154,0.3846,0.6923,0.3077,0.8462,0.5385,0.3846,0.7692,0.3846,0.5385,0.6923,0.6923,0.5385,0.6154,0.6923,0.9231,0.5385,0.5385,0.6154,0.8462,0.6923,0.6923,0.6923,0.9231,0.6923,0.6923,0.4615,0.3846,0.6923,0.3077,0.5385,0.7692,0.6154,0.6923,0.3846,0.9231,1,0.8462,0.9231,0.8462,0.6923,0.6923,0.6923,0.7692,0.4615,0.3846,0.3846,0.8462,1,0.7692,0.5385,0.8462,0.7692,0.4615,0.6154,0.9231,0.9231,0.8462,0.6154,0.4615,0.7692,0.6923,0.3846,0.6154,0.9231,0.6923,0.3846,0.5385,0.6923,0.9231,0.7692,1,0.9231,0.6923,0.9231,0.6923,0.9231,0.8462,0.3846,0.5385,0.4615],\"Prevalence60%\":[0.6923,0.5385,0.8462,0.9231,0.8462,0.4615,0.4615,0.5385,0.9231,0.4615,0.6923,0.3077,0.5385,0.5385,0.3846,1,0.4615,0.5385,0.6154,0.9231,0.5385,0.5385,0.5385,0.3846,0.9231,0.4615,0.5385,0.5385,0.7692,1,0.3846,0.6154,0.7692,0.7692,0.4615,0.7692,0.5385,0.7692,0.7692,0.8462,0.4615,1,1,0.9231,0.6923,0.6923,0.2308,0.5385,0.5385,0.6154,0.8462,0.5385,0.7692,0.4615,0.6154,0.9231,0.8462,0.9231,0.5385,0.6154,0.5385,0.5385,0.4615,0.4615,1,0.6154,0.3077,0.3846,0.7692,0.9231,0.6154,1,0.6923,1,0.4615,0.7692,0.6923,0.8462,0.5385,0.3077,0.6154,0.7692,0.4615,0.4615,0.6154,0.3846,0.4615,0.5385,0.6154,0.6154,0.3077,1,0.6923,0.3077,0.6154,0.7692,0.8462,0.3846,0.4615,0.7692],\"Prevalence65%\":[0.6154,0.7692,0.7692,0.6154,0.7692,0.5385,0.6154,0.4615,0.6154,0.6923,0.6923,0.4615,0.6923,0.3846,0.9231,0.5385,0.7692,0.6154,0.5385,0.9231,0.5385,0.5385,1,0.6154,0.5385,0.3077,0.9231,0.5385,0.7692,0.5385,0.6923,0.4615,0.5385,0.4615,0.8462,1,0.3077,0.6923,0.8462,0.5385,0.6923,0.5385,1,0.7692,0.6923,0.5385,0.8462,0.7692,0.6154,0.6923,1,0.3846,0.6154,0.5385,0.7692,0.7692,0.5385,0.3846,0.6154,0.6154,0.6154,0.9231,0.4615,0.8462,0.1538,0.7692,0.9231,0.7692,0.3846,0.8462,0.6154,0.5385,0.6154,0.8462,0.7692,0.4615,0.6923,0.8462,0.3846,0.7692,0.6923,0.6923,0.4615,0.7692,0.4615,0.4615,0.6154,1,0.6923,1,0.3846,0.6923,0.8462,0.7692,1,0.6154,0.4615,0.7692,0.8462,0.3846],\"Prevalence70%\":[0.7692,0.9231,0.4615,0.6923,0.5385,0.6923,0.4615,1,0.6923,0.4615,0.6154,0.4615,0.6154,0.7692,0.4615,0.6154,0.9231,0.8462,0.4615,0.7692,0.5385,1,0.5385,0.5385,1,0.6923,0.9231,0.5385,0.6923,0.4615,0.8462,0.9231,0.6923,0.6923,0.5385,0.5385,0.7692,0.9231,0.7692,0.3846,0.4615,0.8462,0.4615,0.5385,0.4615,0.6923,0.6154,0.6923,0.6154,0.9231,0.4615,0.5385,1,0.6154,0.8462,0.9231,0.6154,0.6923,1,0.6923,0.4615,0.6154,0.4615,0.8462,0.4615,0.9231,0.9231,0.9231,0.5385,0.8462,0.6923,0.4615,0.7692,0.8462,0.7692,0.7692,0.6923,0.6154,0.4615,0.8462,0.4615,1,0.8462,0.4615,0.5385,0.4615,0.5385,0.6154,0.9231,1,0.6154,0.3846,0.5385,0.7692,1,0.5385,0.8462,1,0.5385,0.6154],\"Prevalence75%\":[0.6154,0.8462,0.3846,0.6923,0.5385,0.6154,0.5385,0.4615,0.8462,0.6154,1,0.9231,0.7692,0.8462,0.4615,0.5385,0.5385,0.8462,0.6923,0.6154,1,1,0.6923,0.7692,0.4615,0.7692,0.4615,0.7692,0.6923,0.5385,1,0.3846,0.9231,0.4615,0.7692,0.6154,0.4615,0.4615,0.8462,0.6923,0.6923,0.6154,0.4615,0.4615,0.3846,0.5385,0.9231,0.7692,0.6154,0.8462,1,0.9231,0.7692,0.4615,0.4615,0.8462,0.3846,0.4615,0.5385,0.9231,0.9231,0.7692,0.7692,0.9231,0.6923,0.3077,0.3846,1,0.3077,0.6923,0.6154,0.6154,0.7692,0.3077,0.4615,0.6154,0.6923,0.5385,0.6923,0.6923,0.5385,0.5385,1,0.4615,1,0.6923,0.4615,0.6154,0.5385,0.9231,0.6923,0.5385,0.3077,0.6154,0.3846,0.9231,0.9231,0.3077,0.8462,0.6154],\"Prevalence80%\":[0.3077,0.7692,0.9231,0.6923,0.6923,0.6923,0.6154,0.6923,0.9231,0.6923,0.3846,0.4615,0.4615,0.5385,0.3846,0.2308,0.8462,0.8462,0.8462,0.7692,0.7692,0.6923,0.7692,0.6154,0.6923,0.8462,0.9231,0.6923,0.9231,0.6923,0.4615,0.4615,0.3846,0.4615,0.4615,0.7692,0.7692,0.4615,0.8462,0.4615,0.6923,0.9231,0.3846,0.6923,0.6154,0.3077,0.3846,0.7692,0.7692,0.7692,0.8462,1,0.8462,0.7692,0.9231,0.9231,0.5385,0.6154,0.7692,0.4615,0.7692,0.5385,0.7692,0.6923,0.3846,0.9231,0.3846,0.5385,0.4615,0.6154,0.5385,0.7692,0.7692,0.6154,0.6154,0.8462,0.4615,1,0.8462,0.5385,0.7692,0.3846,0.9231,1,0.2308,0.5385,0.9231,0.9231,0.5385,0.6154,0.4615,0.9231,0.3846,0.6154,0.8462,0.4615,0.6154,0.7692,0.6923,0.8462],\"Prevalence85%\":[0.4615,0.2308,0.6923,0.5385,0.8462,0.5385,0.3846,0.6154,0.6923,0.4615,0.4615,0.6923,0.9231,1,0.6154,0.7692,0.6923,0.6923,0.7692,0.6923,0.3846,0.9231,0.9231,0.6154,0.5385,0.6923,0.6154,0.5385,0.7692,0.7692,0.3846,0.5385,0.8462,0.7692,0.8462,0.7692,0.4615,0.7692,0.5385,0.6923,0.7692,1,0.4615,0.6923,0.8462,0.6923,0.8462,1,0.3846,0.5385,0.7692,0.8462,0.4615,0.4615,1,0.6154,0.8462,0.9231,0.9231,0.5385,0.6154,0.4615,0.7692,1,0.7692,0.6154,0.8462,0.3077,0.9231,0.4615,0.3846,0.4615,0.4615,0.5385,0.6923,0.3077,0.7692,0.9231,0.6154,0.3846,0.3846,0.6923,0.9231,0.4615,0.8462,0.6923,0.5385,0.3846,0.3846,0.8462,0.7692,0.7692,0.8462,0.6923,1,0.5385,0.9231,0.4615,1,0.6923],\"Prevalence90%\":[0.8462,0.8462,0.6923,0.5385,0.6154,0.7692,0.6154,0.8462,0.4615,0.6154,0.9231,0.7692,0.7692,0.4615,0.6923,0.4615,0.2308,0.3846,0.6154,1,0.6154,0.4615,0.6154,0.7692,0.5385,0.3846,0.9231,0.6923,0.6923,0.7692,0.3077,0.7692,0.6154,0.4615,0.6923,0.3846,0.6923,0.4615,0.9231,0.7692,0.4615,0.3846,0.6923,0.6923,0.4615,0.8462,0.7692,0.6923,0.8462,0.6154,0.4615,0.4615,0.6154,0.5385,0.7692,1,0.4615,0.5385,0.9231,0.3846,0.7692,0.5385,0.7692,0.3846,0.4615,0.8462,0.4615,0.8462,0.8462,0.4615,1,0.6923,1,0.3846,0.4615,0.6154,0.6923,0.5385,0.4615,1,0.9231,0.7692,0.2308,0.6154,0.5385,1,0.6923,0.6154,0.6154,0.3846,0.4615,0.6923,0.7692,0.8462,0.7692,1,0.6154,0.3846,0.5385,0.6154],\"Prevalence95%\":[0.9231,0.3846,0.5385,0.3846,0.9231,0.5385,0.5385,0.3077,0.7692,0.5385,0.7692,0.5385,0.5385,0.4615,0.4615,1,0.5385,0.9231,0.5385,0.7692,0.5385,0.5385,0.5385,0.3846,0.6154,0.6923,0.5385,0.3077,0.1538,0.8462,0.5385,0.7692,0.6923,0.3846,0.6923,0.3077,1,0.8462,0.4615,0.6923,0.7692,0.4615,0.3846,1,0.8462,0.9231,0.7692,0.4615,0.5385,0.9231,0.9231,0.6923,0.4615,0.5385,0.6923,0.5385,0.5385,0.8462,0.7692,0.6923,0.9231,1,0.7692,0.5385,0.5385,0.5385,0.5385,0.6923,0.4615,0.9231,0.6154,0.6923,0.7692,0.3077,0.6154,0.6154,0.8462,0.9231,0.6923,0.6154,0.9231,0.4615,0.8462,0.6154,0.6154,0.7692,0.5385,0.9231,0.8462,0.5385,0.7692,0.4615,0.6154,0.4615,0.7692,0.8462,0.8462,0.6154,0.8462,0.6923]},\"columns\":[{\"accessor\":\"Prevalence5%\",\"name\":\"Prevalence5%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.9231\",\"0.6923\",\"0.9231\",\"0.3846\",\"1.0000\",\"0.4615\",\"0.6923\",\"0.6154\",\"0.7692\",\"0.5385\",\"0.7692\",\"0.5385\",\"0.5385\",\"0.6154\",\"0.5385\",\"0.7692\",\"0.6154\",\"0.9231\",\"1.0000\",\"0.6923\",\"0.8462\",\"1.0000\",\"0.8462\",\"0.8462\",\"0.4615\",\"0.7692\",\"0.4615\",\"0.5385\",\"0.6923\",\"0.3077\",\"0.8462\",\"0.3846\",\"0.6923\",\"0.7692\",\"0.3846\",\"1.0000\",\"0.6154\",\"0.9231\",\"0.4615\",\"0.6154\",\"0.6154\",\"0.3077\",\"0.3846\",\"0.3846\",\"0.6154\",\"0.9231\",\"0.4615\",\"0.5385\",\"0.7692\",\"0.9231\",\"0.5385\",\"0.9231\",\"0.9231\",\"1.0000\",\"0.4615\",\"0.3846\",\"0.6923\",\"0.1538\",\"0.7692\",\"0.4615\",\"0.5385\",\"0.3846\",\"0.3846\",\"0.9231\",\"0.8462\",\"0.6154\",\"0.4615\",\"0.9231\",\"0.6154\",\"0.3846\",\"0.4615\",\"0.8462\",\"0.7692\",\"0.7692\",\"1.0000\",\"0.5385\",\"0.4615\",\"0.5385\",\"0.3077\",\"1.0000\",\"0.6154\",\"0.3077\",\"0.3846\",\"0.6154\",\"0.6154\",\"0.4615\",\"0.4615\",\"0.4615\",\"0.4615\",\"0.8462\",\"0.6923\",\"0.9231\",\"0.5385\",\"0.9231\",\"0.3846\",\"0.6923\",\"0.8462\",\"1.0000\",\"0.3846\",\"0.6923\"],\"header\":\"Prevalence5%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence10%\",\"name\":\"Prevalence10%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.9231\",\"0.7692\",\"0.6154\",\"0.5385\",\"0.4615\",\"0.4615\",\"0.6923\",\"0.3846\",\"0.9231\",\"0.3846\",\"1.0000\",\"0.7692\",\"0.5385\",\"0.6923\",\"0.6923\",\"0.5385\",\"0.5385\",\"0.7692\",\"0.8462\",\"0.9231\",\"0.9231\",\"0.9231\",\"0.6154\",\"0.5385\",\"0.8462\",\"0.7692\",\"0.9231\",\"0.9231\",\"0.5385\",\"0.9231\",\"0.3077\",\"1.0000\",\"0.6154\",\"0.6154\",\"0.5385\",\"0.7692\",\"0.8462\",\"0.5385\",\"0.3846\",\"0.3077\",\"0.6923\",\"0.9231\",\"0.7692\",\"0.5385\",\"1.0000\",\"0.7692\",\"0.3846\",\"0.3846\",\"0.3846\",\"0.5385\",\"0.4615\",\"0.4615\",\"0.7692\",\"0.7692\",\"0.6154\",\"0.9231\",\"0.4615\",\"0.5385\",\"0.4615\",\"0.7692\",\"0.4615\",\"0.6923\",\"0.6154\",\"0.7692\",\"0.5385\",\"0.5385\",\"0.5385\",\"0.6923\",\"0.9231\",\"0.6923\",\"0.4615\",\"0.6154\",\"0.6154\",\"0.6923\",\"0.8462\",\"0.7692\",\"0.6154\",\"0.6154\",\"0.6923\",\"0.4615\",\"0.7692\",\"0.5385\",\"0.6923\",\"0.5385\",\"0.5385\",\"0.9231\",\"0.6154\",\"0.5385\",\"0.7692\",\"1.0000\",\"0.6923\",\"0.4615\",\"0.6154\",\"0.9231\",\"0.6923\",\"0.9231\",\"0.9231\",\"0.9231\",\"0.5385\",\"0.4615\"],\"header\":\"Prevalence10%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence15%\",\"name\":\"Prevalence15%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.6923\",\"0.7692\",\"0.4615\",\"0.4615\",\"0.5385\",\"0.6154\",\"0.3846\",\"0.7692\",\"0.8462\",\"0.6154\",\"0.3077\",\"0.6154\",\"0.4615\",\"0.5385\",\"0.4615\",\"1.0000\",\"0.2308\",\"0.7692\",\"0.9231\",\"0.3077\",\"0.5385\",\"0.7692\",\"0.4615\",\"0.3077\",\"0.9231\",\"0.9231\",\"0.4615\",\"0.9231\",\"0.4615\",\"0.5385\",\"0.5385\",\"0.9231\",\"0.3846\",\"0.8462\",\"0.8462\",\"0.4615\",\"0.4615\",\"0.8462\",\"0.6923\",\"0.6923\",\"0.4615\",\"0.5385\",\"0.5385\",\"0.5385\",\"0.9231\",\"0.7692\",\"0.5385\",\"0.8462\",\"0.6154\",\"0.6154\",\"1.0000\",\"0.7692\",\"0.6923\",\"0.4615\",\"0.7692\",\"0.6923\",\"0.5385\",\"0.6923\",\"0.7692\",\"0.9231\",\"0.5385\",\"0.3846\",\"0.6923\",\"0.6154\",\"0.7692\",\"0.3846\",\"0.9231\",\"0.3846\",\"0.6923\",\"0.6154\",\"0.8462\",\"0.6154\",\"0.5385\",\"0.6154\",\"0.7692\",\"0.3077\",\"0.7692\",\"0.3846\",\"0.6154\",\"0.4615\",\"0.6154\",\"0.6154\",\"0.5385\",\"0.4615\",\"0.5385\",\"0.8462\",\"0.7692\",\"0.6154\",\"0.7692\",\"0.6923\",\"0.5385\",\"0.6154\",\"0.9231\",\"0.3846\",\"0.4615\",\"0.3846\",\"0.3846\",\"0.3846\",\"0.4615\",\"1.0000\"],\"header\":\"Prevalence15%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence20%\",\"name\":\"Prevalence20%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.8462\",\"0.4615\",\"0.3846\",\"0.8462\",\"0.6154\",\"0.4615\",\"0.6923\",\"0.4615\",\"0.8462\",\"0.4615\",\"0.3846\",\"0.4615\",\"0.6154\",\"0.4615\",\"0.5385\",\"0.5385\",\"0.6923\",\"0.5385\",\"0.9231\",\"0.4615\",\"0.4615\",\"0.4615\",\"0.6923\",\"0.6923\",\"0.7692\",\"0.4615\",\"0.8462\",\"0.6154\",\"0.8462\",\"0.4615\",\"0.6923\",\"0.3846\",\"0.9231\",\"0.8462\",\"0.8462\",\"0.4615\",\"0.4615\",\"0.7692\",\"0.6154\",\"0.7692\",\"0.6154\",\"0.4615\",\"0.4615\",\"0.4615\",\"0.6923\",\"0.3846\",\"0.4615\",\"0.6923\",\"0.5385\",\"0.6923\",\"0.6923\",\"0.6154\",\"0.4615\",\"0.8462\",\"0.4615\",\"0.6154\",\"0.8462\",\"1.0000\",\"0.9231\",\"0.7692\",\"0.3846\",\"0.9231\",\"0.8462\",\"0.9231\",\"0.3846\",\"0.6154\",\"0.5385\",\"0.4615\",\"0.3077\",\"0.5385\",\"0.4615\",\"0.6923\",\"0.6923\",\"0.3846\",\"0.2308\",\"0.4615\",\"0.4615\",\"0.8462\",\"0.6154\",\"0.6923\",\"0.6154\",\"0.7692\",\"0.7692\",\"0.5385\",\"1.0000\",\"0.8462\",\"0.4615\",\"0.8462\",\"0.9231\",\"0.9231\",\"0.4615\",\"0.6923\",\"0.3846\",\"0.9231\",\"0.3077\",\"0.6923\",\"0.6923\",\"0.8462\",\"0.8462\",\"0.5385\"],\"header\":\"Prevalence20%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence25%\",\"name\":\"Prevalence25%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.3846\",\"0.4615\",\"0.9231\",\"0.4615\",\"0.8462\",\"0.6154\",\"0.4615\",\"1.0000\",\"0.4615\",\"0.9231\",\"0.5385\",\"0.9231\",\"0.4615\",\"0.3846\",\"0.5385\",\"0.1538\",\"0.5385\",\"0.6923\",\"0.5385\",\"0.4615\",\"0.5385\",\"0.9231\",\"0.4615\",\"0.6923\",\"0.6154\",\"0.3077\",\"0.5385\",\"0.4615\",\"0.2308\",\"0.6923\",\"0.9231\",\"0.6923\",\"0.5385\",\"0.3846\",\"0.4615\",\"0.9231\",\"0.6154\",\"0.4615\",\"0.3846\",\"0.7692\",\"0.4615\",\"0.7692\",\"0.8462\",\"0.6154\",\"0.9231\",\"0.9231\",\"0.5385\",\"0.4615\",\"0.6154\",\"0.6154\",\"0.6923\",\"0.6154\",\"0.7692\",\"1.0000\",\"0.6923\",\"0.8462\",\"0.3846\",\"0.5385\",\"0.6154\",\"0.6923\",\"0.6923\",\"0.9231\",\"0.3846\",\"0.3846\",\"0.8462\",\"0.4615\",\"0.8462\",\"0.5385\",\"0.3846\",\"0.4615\",\"0.5385\",\"0.7692\",\"0.6154\",\"1.0000\",\"0.4615\",\"0.6923\",\"0.6154\",\"0.3846\",\"0.5385\",\"0.6923\",\"0.6154\",\"0.6154\",\"1.0000\",\"0.3846\",\"0.5385\",\"0.4615\",\"0.8462\",\"0.7692\",\"0.3846\",\"0.4615\",\"1.0000\",\"0.9231\",\"0.5385\",\"0.5385\",\"0.9231\",\"0.9231\",\"0.5385\",\"0.8462\",\"0.8462\",\"0.5385\"],\"header\":\"Prevalence25%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence30%\",\"name\":\"Prevalence30%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.7692\",\"0.7692\",\"0.3846\",\"0.8462\",\"0.7692\",\"0.9231\",\"0.5385\",\"0.4615\",\"1.0000\",\"0.9231\",\"0.8462\",\"0.4615\",\"0.7692\",\"0.6154\",\"0.9231\",\"0.6923\",\"0.9231\",\"0.9231\",\"0.4615\",\"0.3846\",\"0.3846\",\"0.3846\",\"0.3846\",\"0.3077\",\"0.4615\",\"0.4615\",\"0.6923\",\"1.0000\",\"0.5385\",\"0.5385\",\"0.7692\",\"0.6154\",\"0.6154\",\"0.4615\",\"0.3846\",\"0.5385\",\"0.4615\",\"0.3846\",\"0.8462\",\"0.3846\",\"0.8462\",\"0.8462\",\"0.5385\",\"0.7692\",\"0.6154\",\"0.5385\",\"0.7692\",\"0.7692\",\"0.8462\",\"0.3846\",\"0.9231\",\"0.3846\",\"0.3077\",\"0.2308\",\"0.4615\",\"0.6154\",\"0.8462\",\"0.8462\",\"0.8462\",\"0.8462\",\"1.0000\",\"0.4615\",\"0.6923\",\"0.5385\",\"0.7692\",\"0.6154\",\"0.3846\",\"0.6154\",\"0.4615\",\"0.6923\",\"1.0000\",\"0.6923\",\"0.6154\",\"0.8462\",\"0.5385\",\"0.7692\",\"0.8462\",\"0.4615\",\"0.7692\",\"0.8462\",\"0.3846\",\"0.3846\",\"0.8462\",\"0.3846\",\"0.5385\",\"0.6923\",\"0.7692\",\"0.4615\",\"0.4615\",\"0.7692\",\"0.2308\",\"0.9231\",\"0.4615\",\"0.6923\",\"0.7692\",\"0.8462\",\"0.6923\",\"0.4615\",\"0.9231\",\"0.8462\"],\"header\":\"Prevalence30%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence35%\",\"name\":\"Prevalence35%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.3077\",\"0.5385\",\"0.6154\",\"0.6154\",\"0.3077\",\"0.6154\",\"0.5385\",\"0.6154\",\"0.6154\",\"0.5385\",\"0.9231\",\"1.0000\",\"0.3846\",\"0.3846\",\"0.6154\",\"0.9231\",\"0.4615\",\"0.9231\",\"0.6154\",\"0.7692\",\"0.7692\",\"0.8462\",\"0.6923\",\"0.9231\",\"0.8462\",\"0.7692\",\"0.8462\",\"0.5385\",\"0.6154\",\"0.4615\",\"0.8462\",\"0.4615\",\"0.7692\",\"1.0000\",\"0.6154\",\"0.8462\",\"0.5385\",\"0.7692\",\"0.9231\",\"0.6923\",\"0.2308\",\"0.6923\",\"0.9231\",\"0.3846\",\"0.8462\",\"0.5385\",\"0.5385\",\"0.8462\",\"0.7692\",\"0.3846\",\"0.4615\",\"0.8462\",\"0.6154\",\"0.6923\",\"0.7692\",\"0.3846\",\"0.5385\",\"0.3846\",\"0.4615\",\"0.7692\",\"0.4615\",\"0.3077\",\"0.6923\",\"0.8462\",\"0.8462\",\"0.5385\",\"0.9231\",\"0.9231\",\"1.0000\",\"0.5385\",\"0.4615\",\"0.4615\",\"0.6154\",\"0.4615\",\"0.7692\",\"0.4615\",\"0.8462\",\"0.5385\",\"0.4615\",\"0.6923\",\"0.6154\",\"0.4615\",\"0.9231\",\"0.6154\",\"0.4615\",\"0.3077\",\"1.0000\",\"1.0000\",\"0.5385\",\"0.6923\",\"0.6154\",\"0.6923\",\"0.5385\",\"0.9231\",\"0.9231\",\"0.5385\",\"0.7692\",\"0.4615\",\"0.6154\",\"1.0000\"],\"header\":\"Prevalence35%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence40%\",\"name\":\"Prevalence40%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.6154\",\"0.6923\",\"0.9231\",\"1.0000\",\"0.5385\",\"0.6923\",\"0.5385\",\"0.8462\",\"0.4615\",\"0.6923\",\"0.9231\",\"0.8462\",\"0.8462\",\"0.5385\",\"0.3846\",\"0.4615\",\"0.6154\",\"1.0000\",\"0.6154\",\"0.5385\",\"0.4615\",\"0.6154\",\"0.7692\",\"0.4615\",\"0.7692\",\"0.6154\",\"0.7692\",\"0.7692\",\"0.6923\",\"0.6923\",\"0.6923\",\"0.9231\",\"0.5385\",\"0.6154\",\"0.9231\",\"0.7692\",\"0.8462\",\"0.4615\",\"0.7692\",\"0.4615\",\"0.5385\",\"0.3077\",\"0.8462\",\"0.1538\",\"0.6154\",\"0.5385\",\"0.5385\",\"0.4615\",\"0.4615\",\"0.5385\",\"0.9231\",\"0.7692\",\"0.5385\",\"0.4615\",\"0.6923\",\"0.5385\",\"0.4615\",\"0.9231\",\"0.5385\",\"0.6923\",\"0.9231\",\"0.6923\",\"1.0000\",\"1.0000\",\"0.6154\",\"1.0000\",\"0.6154\",\"0.5385\",\"0.7692\",\"0.6923\",\"0.6154\",\"0.4615\",\"0.7692\",\"0.8462\",\"0.6154\",\"0.5385\",\"0.4615\",\"0.6154\",\"0.7692\",\"0.6154\",\"0.3846\",\"0.4615\",\"0.3846\",\"0.3077\",\"0.9231\",\"0.5385\",\"0.4615\",\"0.6923\",\"0.3077\",\"1.0000\",\"0.6923\",\"0.5385\",\"0.6923\",\"0.7692\",\"0.6923\",\"0.5385\",\"0.6923\",\"0.3077\",\"0.5385\",\"0.8462\"],\"header\":\"Prevalence40%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence45%\",\"name\":\"Prevalence45%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.6923\",\"1.0000\",\"1.0000\",\"0.8462\",\"0.6154\",\"0.6154\",\"0.9231\",\"0.8462\",\"0.6154\",\"0.5385\",\"0.6154\",\"0.7692\",\"0.6154\",\"0.6923\",\"0.6154\",\"1.0000\",\"1.0000\",\"0.9231\",\"0.6154\",\"0.5385\",\"0.6154\",\"0.3077\",\"0.6154\",\"0.4615\",\"1.0000\",\"0.3846\",\"0.6154\",\"0.5385\",\"0.8462\",\"0.6154\",\"0.4615\",\"0.9231\",\"0.6923\",\"0.5385\",\"1.0000\",\"0.3846\",\"0.8462\",\"0.6154\",\"0.6154\",\"0.5385\",\"0.6923\",\"0.7692\",\"0.6154\",\"0.6154\",\"0.6154\",\"0.4615\",\"0.4615\",\"0.6154\",\"0.7692\",\"0.6154\",\"0.9231\",\"0.6923\",\"0.9231\",\"0.3077\",\"0.9231\",\"0.5385\",\"0.5385\",\"0.7692\",\"0.8462\",\"0.5385\",\"0.6923\",\"0.6923\",\"0.3846\",\"0.9231\",\"0.6923\",\"1.0000\",\"0.6923\",\"0.6154\",\"0.7692\",\"0.6154\",\"0.8462\",\"0.6154\",\"0.9231\",\"0.8462\",\"0.3846\",\"0.5385\",\"0.6923\",\"0.5385\",\"0.4615\",\"0.7692\",\"0.3077\",\"0.4615\",\"0.3846\",\"1.0000\",\"0.6154\",\"0.6154\",\"0.6923\",\"0.5385\",\"0.6154\",\"0.6923\",\"0.6923\",\"0.5385\",\"0.6154\",\"0.6154\",\"0.5385\",\"0.6923\",\"0.8462\",\"0.8462\",\"0.7692\",\"0.8462\"],\"header\":\"Prevalence45%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence50%\",\"name\":\"Prevalence50%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.3846\",\"0.7692\",\"0.2308\",\"0.6154\",\"0.2308\",\"0.7692\",\"0.4615\",\"0.5385\",\"1.0000\",\"0.5385\",\"0.6923\",\"1.0000\",\"1.0000\",\"0.4615\",\"0.4615\",\"0.7692\",\"0.7692\",\"0.6923\",\"0.8462\",\"0.7692\",\"0.8462\",\"0.7692\",\"0.8462\",\"0.7692\",\"0.5385\",\"0.6923\",\"0.7692\",\"0.6923\",\"0.7692\",\"0.3846\",\"0.6923\",\"0.7692\",\"0.5385\",\"0.9231\",\"0.6923\",\"0.6923\",\"0.6154\",\"0.8462\",\"0.7692\",\"0.4615\",\"0.9231\",\"0.3846\",\"0.8462\",\"0.6154\",\"0.6154\",\"0.9231\",\"0.4615\",\"0.5385\",\"0.8462\",\"0.5385\",\"0.5385\",\"0.4615\",\"0.3077\",\"0.3077\",\"0.5385\",\"0.6923\",\"0.7692\",\"0.9231\",\"0.4615\",\"0.3077\",\"0.3846\",\"0.5385\",\"0.7692\",\"0.4615\",\"0.5385\",\"0.3846\",\"0.9231\",\"0.5385\",\"0.6154\",\"0.6154\",\"0.6923\",\"0.8462\",\"0.6154\",\"0.5385\",\"0.9231\",\"0.8462\",\"0.7692\",\"0.7692\",\"0.5385\",\"0.4615\",\"0.6154\",\"0.4615\",\"0.9231\",\"0.8462\",\"0.2308\",\"1.0000\",\"0.4615\",\"0.8462\",\"0.7692\",\"0.9231\",\"1.0000\",\"0.7692\",\"0.8462\",\"0.4615\",\"0.6154\",\"0.6154\",\"0.4615\",\"0.6923\",\"0.9231\",\"0.9231\"],\"header\":\"Prevalence50%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence55%\",\"name\":\"Prevalence55%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.3846\",\"0.5385\",\"0.6154\",\"1.0000\",\"0.5385\",\"0.7692\",\"0.5385\",\"0.8462\",\"1.0000\",\"0.9231\",\"0.3846\",\"1.0000\",\"0.4615\",\"0.4615\",\"0.7692\",\"0.4615\",\"0.6923\",\"0.5385\",\"0.4615\",\"0.6154\",\"0.3846\",\"0.6923\",\"0.3077\",\"0.8462\",\"0.5385\",\"0.3846\",\"0.7692\",\"0.3846\",\"0.5385\",\"0.6923\",\"0.6923\",\"0.5385\",\"0.6154\",\"0.6923\",\"0.9231\",\"0.5385\",\"0.5385\",\"0.6154\",\"0.8462\",\"0.6923\",\"0.6923\",\"0.6923\",\"0.9231\",\"0.6923\",\"0.6923\",\"0.4615\",\"0.3846\",\"0.6923\",\"0.3077\",\"0.5385\",\"0.7692\",\"0.6154\",\"0.6923\",\"0.3846\",\"0.9231\",\"1.0000\",\"0.8462\",\"0.9231\",\"0.8462\",\"0.6923\",\"0.6923\",\"0.6923\",\"0.7692\",\"0.4615\",\"0.3846\",\"0.3846\",\"0.8462\",\"1.0000\",\"0.7692\",\"0.5385\",\"0.8462\",\"0.7692\",\"0.4615\",\"0.6154\",\"0.9231\",\"0.9231\",\"0.8462\",\"0.6154\",\"0.4615\",\"0.7692\",\"0.6923\",\"0.3846\",\"0.6154\",\"0.9231\",\"0.6923\",\"0.3846\",\"0.5385\",\"0.6923\",\"0.9231\",\"0.7692\",\"1.0000\",\"0.9231\",\"0.6923\",\"0.9231\",\"0.6923\",\"0.9231\",\"0.8462\",\"0.3846\",\"0.5385\",\"0.4615\"],\"header\":\"Prevalence55%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence60%\",\"name\":\"Prevalence60%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.6923\",\"0.5385\",\"0.8462\",\"0.9231\",\"0.8462\",\"0.4615\",\"0.4615\",\"0.5385\",\"0.9231\",\"0.4615\",\"0.6923\",\"0.3077\",\"0.5385\",\"0.5385\",\"0.3846\",\"1.0000\",\"0.4615\",\"0.5385\",\"0.6154\",\"0.9231\",\"0.5385\",\"0.5385\",\"0.5385\",\"0.3846\",\"0.9231\",\"0.4615\",\"0.5385\",\"0.5385\",\"0.7692\",\"1.0000\",\"0.3846\",\"0.6154\",\"0.7692\",\"0.7692\",\"0.4615\",\"0.7692\",\"0.5385\",\"0.7692\",\"0.7692\",\"0.8462\",\"0.4615\",\"1.0000\",\"1.0000\",\"0.9231\",\"0.6923\",\"0.6923\",\"0.2308\",\"0.5385\",\"0.5385\",\"0.6154\",\"0.8462\",\"0.5385\",\"0.7692\",\"0.4615\",\"0.6154\",\"0.9231\",\"0.8462\",\"0.9231\",\"0.5385\",\"0.6154\",\"0.5385\",\"0.5385\",\"0.4615\",\"0.4615\",\"1.0000\",\"0.6154\",\"0.3077\",\"0.3846\",\"0.7692\",\"0.9231\",\"0.6154\",\"1.0000\",\"0.6923\",\"1.0000\",\"0.4615\",\"0.7692\",\"0.6923\",\"0.8462\",\"0.5385\",\"0.3077\",\"0.6154\",\"0.7692\",\"0.4615\",\"0.4615\",\"0.6154\",\"0.3846\",\"0.4615\",\"0.5385\",\"0.6154\",\"0.6154\",\"0.3077\",\"1.0000\",\"0.6923\",\"0.3077\",\"0.6154\",\"0.7692\",\"0.8462\",\"0.3846\",\"0.4615\",\"0.7692\"],\"header\":\"Prevalence60%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence65%\",\"name\":\"Prevalence65%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.6154\",\"0.7692\",\"0.7692\",\"0.6154\",\"0.7692\",\"0.5385\",\"0.6154\",\"0.4615\",\"0.6154\",\"0.6923\",\"0.6923\",\"0.4615\",\"0.6923\",\"0.3846\",\"0.9231\",\"0.5385\",\"0.7692\",\"0.6154\",\"0.5385\",\"0.9231\",\"0.5385\",\"0.5385\",\"1.0000\",\"0.6154\",\"0.5385\",\"0.3077\",\"0.9231\",\"0.5385\",\"0.7692\",\"0.5385\",\"0.6923\",\"0.4615\",\"0.5385\",\"0.4615\",\"0.8462\",\"1.0000\",\"0.3077\",\"0.6923\",\"0.8462\",\"0.5385\",\"0.6923\",\"0.5385\",\"1.0000\",\"0.7692\",\"0.6923\",\"0.5385\",\"0.8462\",\"0.7692\",\"0.6154\",\"0.6923\",\"1.0000\",\"0.3846\",\"0.6154\",\"0.5385\",\"0.7692\",\"0.7692\",\"0.5385\",\"0.3846\",\"0.6154\",\"0.6154\",\"0.6154\",\"0.9231\",\"0.4615\",\"0.8462\",\"0.1538\",\"0.7692\",\"0.9231\",\"0.7692\",\"0.3846\",\"0.8462\",\"0.6154\",\"0.5385\",\"0.6154\",\"0.8462\",\"0.7692\",\"0.4615\",\"0.6923\",\"0.8462\",\"0.3846\",\"0.7692\",\"0.6923\",\"0.6923\",\"0.4615\",\"0.7692\",\"0.4615\",\"0.4615\",\"0.6154\",\"1.0000\",\"0.6923\",\"1.0000\",\"0.3846\",\"0.6923\",\"0.8462\",\"0.7692\",\"1.0000\",\"0.6154\",\"0.4615\",\"0.7692\",\"0.8462\",\"0.3846\"],\"header\":\"Prevalence65%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence70%\",\"name\":\"Prevalence70%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.7692\",\"0.9231\",\"0.4615\",\"0.6923\",\"0.5385\",\"0.6923\",\"0.4615\",\"1.0000\",\"0.6923\",\"0.4615\",\"0.6154\",\"0.4615\",\"0.6154\",\"0.7692\",\"0.4615\",\"0.6154\",\"0.9231\",\"0.8462\",\"0.4615\",\"0.7692\",\"0.5385\",\"1.0000\",\"0.5385\",\"0.5385\",\"1.0000\",\"0.6923\",\"0.9231\",\"0.5385\",\"0.6923\",\"0.4615\",\"0.8462\",\"0.9231\",\"0.6923\",\"0.6923\",\"0.5385\",\"0.5385\",\"0.7692\",\"0.9231\",\"0.7692\",\"0.3846\",\"0.4615\",\"0.8462\",\"0.4615\",\"0.5385\",\"0.4615\",\"0.6923\",\"0.6154\",\"0.6923\",\"0.6154\",\"0.9231\",\"0.4615\",\"0.5385\",\"1.0000\",\"0.6154\",\"0.8462\",\"0.9231\",\"0.6154\",\"0.6923\",\"1.0000\",\"0.6923\",\"0.4615\",\"0.6154\",\"0.4615\",\"0.8462\",\"0.4615\",\"0.9231\",\"0.9231\",\"0.9231\",\"0.5385\",\"0.8462\",\"0.6923\",\"0.4615\",\"0.7692\",\"0.8462\",\"0.7692\",\"0.7692\",\"0.6923\",\"0.6154\",\"0.4615\",\"0.8462\",\"0.4615\",\"1.0000\",\"0.8462\",\"0.4615\",\"0.5385\",\"0.4615\",\"0.5385\",\"0.6154\",\"0.9231\",\"1.0000\",\"0.6154\",\"0.3846\",\"0.5385\",\"0.7692\",\"1.0000\",\"0.5385\",\"0.8462\",\"1.0000\",\"0.5385\",\"0.6154\"],\"header\":\"Prevalence70%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence75%\",\"name\":\"Prevalence75%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.6154\",\"0.8462\",\"0.3846\",\"0.6923\",\"0.5385\",\"0.6154\",\"0.5385\",\"0.4615\",\"0.8462\",\"0.6154\",\"1.0000\",\"0.9231\",\"0.7692\",\"0.8462\",\"0.4615\",\"0.5385\",\"0.5385\",\"0.8462\",\"0.6923\",\"0.6154\",\"1.0000\",\"1.0000\",\"0.6923\",\"0.7692\",\"0.4615\",\"0.7692\",\"0.4615\",\"0.7692\",\"0.6923\",\"0.5385\",\"1.0000\",\"0.3846\",\"0.9231\",\"0.4615\",\"0.7692\",\"0.6154\",\"0.4615\",\"0.4615\",\"0.8462\",\"0.6923\",\"0.6923\",\"0.6154\",\"0.4615\",\"0.4615\",\"0.3846\",\"0.5385\",\"0.9231\",\"0.7692\",\"0.6154\",\"0.8462\",\"1.0000\",\"0.9231\",\"0.7692\",\"0.4615\",\"0.4615\",\"0.8462\",\"0.3846\",\"0.4615\",\"0.5385\",\"0.9231\",\"0.9231\",\"0.7692\",\"0.7692\",\"0.9231\",\"0.6923\",\"0.3077\",\"0.3846\",\"1.0000\",\"0.3077\",\"0.6923\",\"0.6154\",\"0.6154\",\"0.7692\",\"0.3077\",\"0.4615\",\"0.6154\",\"0.6923\",\"0.5385\",\"0.6923\",\"0.6923\",\"0.5385\",\"0.5385\",\"1.0000\",\"0.4615\",\"1.0000\",\"0.6923\",\"0.4615\",\"0.6154\",\"0.5385\",\"0.9231\",\"0.6923\",\"0.5385\",\"0.3077\",\"0.6154\",\"0.3846\",\"0.9231\",\"0.9231\",\"0.3077\",\"0.8462\",\"0.6154\"],\"header\":\"Prevalence75%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence80%\",\"name\":\"Prevalence80%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.3077\",\"0.7692\",\"0.9231\",\"0.6923\",\"0.6923\",\"0.6923\",\"0.6154\",\"0.6923\",\"0.9231\",\"0.6923\",\"0.3846\",\"0.4615\",\"0.4615\",\"0.5385\",\"0.3846\",\"0.2308\",\"0.8462\",\"0.8462\",\"0.8462\",\"0.7692\",\"0.7692\",\"0.6923\",\"0.7692\",\"0.6154\",\"0.6923\",\"0.8462\",\"0.9231\",\"0.6923\",\"0.9231\",\"0.6923\",\"0.4615\",\"0.4615\",\"0.3846\",\"0.4615\",\"0.4615\",\"0.7692\",\"0.7692\",\"0.4615\",\"0.8462\",\"0.4615\",\"0.6923\",\"0.9231\",\"0.3846\",\"0.6923\",\"0.6154\",\"0.3077\",\"0.3846\",\"0.7692\",\"0.7692\",\"0.7692\",\"0.8462\",\"1.0000\",\"0.8462\",\"0.7692\",\"0.9231\",\"0.9231\",\"0.5385\",\"0.6154\",\"0.7692\",\"0.4615\",\"0.7692\",\"0.5385\",\"0.7692\",\"0.6923\",\"0.3846\",\"0.9231\",\"0.3846\",\"0.5385\",\"0.4615\",\"0.6154\",\"0.5385\",\"0.7692\",\"0.7692\",\"0.6154\",\"0.6154\",\"0.8462\",\"0.4615\",\"1.0000\",\"0.8462\",\"0.5385\",\"0.7692\",\"0.3846\",\"0.9231\",\"1.0000\",\"0.2308\",\"0.5385\",\"0.9231\",\"0.9231\",\"0.5385\",\"0.6154\",\"0.4615\",\"0.9231\",\"0.3846\",\"0.6154\",\"0.8462\",\"0.4615\",\"0.6154\",\"0.7692\",\"0.6923\",\"0.8462\"],\"header\":\"Prevalence80%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence85%\",\"name\":\"Prevalence85%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.4615\",\"0.2308\",\"0.6923\",\"0.5385\",\"0.8462\",\"0.5385\",\"0.3846\",\"0.6154\",\"0.6923\",\"0.4615\",\"0.4615\",\"0.6923\",\"0.9231\",\"1.0000\",\"0.6154\",\"0.7692\",\"0.6923\",\"0.6923\",\"0.7692\",\"0.6923\",\"0.3846\",\"0.9231\",\"0.9231\",\"0.6154\",\"0.5385\",\"0.6923\",\"0.6154\",\"0.5385\",\"0.7692\",\"0.7692\",\"0.3846\",\"0.5385\",\"0.8462\",\"0.7692\",\"0.8462\",\"0.7692\",\"0.4615\",\"0.7692\",\"0.5385\",\"0.6923\",\"0.7692\",\"1.0000\",\"0.4615\",\"0.6923\",\"0.8462\",\"0.6923\",\"0.8462\",\"1.0000\",\"0.3846\",\"0.5385\",\"0.7692\",\"0.8462\",\"0.4615\",\"0.4615\",\"1.0000\",\"0.6154\",\"0.8462\",\"0.9231\",\"0.9231\",\"0.5385\",\"0.6154\",\"0.4615\",\"0.7692\",\"1.0000\",\"0.7692\",\"0.6154\",\"0.8462\",\"0.3077\",\"0.9231\",\"0.4615\",\"0.3846\",\"0.4615\",\"0.4615\",\"0.5385\",\"0.6923\",\"0.3077\",\"0.7692\",\"0.9231\",\"0.6154\",\"0.3846\",\"0.3846\",\"0.6923\",\"0.9231\",\"0.4615\",\"0.8462\",\"0.6923\",\"0.5385\",\"0.3846\",\"0.3846\",\"0.8462\",\"0.7692\",\"0.7692\",\"0.8462\",\"0.6923\",\"1.0000\",\"0.5385\",\"0.9231\",\"0.4615\",\"1.0000\",\"0.6923\"],\"header\":\"Prevalence85%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence90%\",\"name\":\"Prevalence90%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.8462\",\"0.8462\",\"0.6923\",\"0.5385\",\"0.6154\",\"0.7692\",\"0.6154\",\"0.8462\",\"0.4615\",\"0.6154\",\"0.9231\",\"0.7692\",\"0.7692\",\"0.4615\",\"0.6923\",\"0.4615\",\"0.2308\",\"0.3846\",\"0.6154\",\"1.0000\",\"0.6154\",\"0.4615\",\"0.6154\",\"0.7692\",\"0.5385\",\"0.3846\",\"0.9231\",\"0.6923\",\"0.6923\",\"0.7692\",\"0.3077\",\"0.7692\",\"0.6154\",\"0.4615\",\"0.6923\",\"0.3846\",\"0.6923\",\"0.4615\",\"0.9231\",\"0.7692\",\"0.4615\",\"0.3846\",\"0.6923\",\"0.6923\",\"0.4615\",\"0.8462\",\"0.7692\",\"0.6923\",\"0.8462\",\"0.6154\",\"0.4615\",\"0.4615\",\"0.6154\",\"0.5385\",\"0.7692\",\"1.0000\",\"0.4615\",\"0.5385\",\"0.9231\",\"0.3846\",\"0.7692\",\"0.5385\",\"0.7692\",\"0.3846\",\"0.4615\",\"0.8462\",\"0.4615\",\"0.8462\",\"0.8462\",\"0.4615\",\"1.0000\",\"0.6923\",\"1.0000\",\"0.3846\",\"0.4615\",\"0.6154\",\"0.6923\",\"0.5385\",\"0.4615\",\"1.0000\",\"0.9231\",\"0.7692\",\"0.2308\",\"0.6154\",\"0.5385\",\"1.0000\",\"0.6923\",\"0.6154\",\"0.6154\",\"0.3846\",\"0.4615\",\"0.6923\",\"0.7692\",\"0.8462\",\"0.7692\",\"1.0000\",\"0.6154\",\"0.3846\",\"0.5385\",\"0.6154\"],\"header\":\"Prevalence90%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"Prevalence95%\",\"name\":\"Prevalence95%\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":false,\"cell\":[\"0.9231\",\"0.3846\",\"0.5385\",\"0.3846\",\"0.9231\",\"0.5385\",\"0.5385\",\"0.3077\",\"0.7692\",\"0.5385\",\"0.7692\",\"0.5385\",\"0.5385\",\"0.4615\",\"0.4615\",\"1.0000\",\"0.5385\",\"0.9231\",\"0.5385\",\"0.7692\",\"0.5385\",\"0.5385\",\"0.5385\",\"0.3846\",\"0.6154\",\"0.6923\",\"0.5385\",\"0.3077\",\"0.1538\",\"0.8462\",\"0.5385\",\"0.7692\",\"0.6923\",\"0.3846\",\"0.6923\",\"0.3077\",\"1.0000\",\"0.8462\",\"0.4615\",\"0.6923\",\"0.7692\",\"0.4615\",\"0.3846\",\"1.0000\",\"0.8462\",\"0.9231\",\"0.7692\",\"0.4615\",\"0.5385\",\"0.9231\",\"0.9231\",\"0.6923\",\"0.4615\",\"0.5385\",\"0.6923\",\"0.5385\",\"0.5385\",\"0.8462\",\"0.7692\",\"0.6923\",\"0.9231\",\"1.0000\",\"0.7692\",\"0.5385\",\"0.5385\",\"0.5385\",\"0.5385\",\"0.6923\",\"0.4615\",\"0.9231\",\"0.6154\",\"0.6923\",\"0.7692\",\"0.3077\",\"0.6154\",\"0.6154\",\"0.8462\",\"0.9231\",\"0.6923\",\"0.6154\",\"0.9231\",\"0.4615\",\"0.8462\",\"0.6154\",\"0.6154\",\"0.7692\",\"0.5385\",\"0.9231\",\"0.8462\",\"0.5385\",\"0.7692\",\"0.4615\",\"0.6154\",\"0.4615\",\"0.7692\",\"0.8462\",\"0.8462\",\"0.6154\",\"0.8462\",\"0.6923\"],\"header\":\"Prevalence95%\",\"minWidth\":120,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,100],\"paginationType\":\"numbers\",\"showPagination\":true,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"showSortable\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"dba160f554296c2e691d2f50954b48ec\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\n\n\n\nIt is also possible to estimate the variation of OOB error for each prevalence interval filtering. This is done by running the random forests classification for n times, determined by the bootstrap value. The function will return a box plot figure and a table for each classification error.\n\nits18_replicated.oob.error <- pime.oob.replicate(its18_prevalences, \"TEMP\",\n                                         bootstrap = 100, parallel = TRUE)\n\n\n\n\n(ITS) Figure 1 | OOB error rate for the original data set (top) & the randomized data (bottom).\nTo obtain the confusion matrix from random forests classification use the following:\n\nits18_prev_confuse <- paste(\"its18_best.prev$`Confusion`$\", its18_best, sep = \"\")\neval(parse(text = (its18_prev_confuse)))\n\nSave Phyloseq PIME objects\n\nits18_ps_pime <- its18_prevalence_best\nits18_ps_pime_tree <- rtree(ntaxa(its18_ps_pime), rooted = TRUE,\n                           tip.label = taxa_names(its18_ps_pime))\nits18_ps_pime <- merge_phyloseq(its18_ps_pime,\n                               sample_data,\n                               its18_ps_pime_tree)\nsaveRDS(its18_ps_pime, \"files/filtering/pime/rdata/its18_ps_pime.rds\")\n\nSplit & save by predictor variable\n\ndata.frame(sample_data(its18_ps_pime))\nits18_ps_pime_split <- pime.split.by.variable(its18_ps_pime, \"TEMP\")\nsaveRDS(its18_ps_pime_split$`0`, \"files/filtering/pime/rdata/its18_ps_pime_0.rds\")\nsaveRDS(its18_ps_pime_split$`3`, \"files/filtering/pime/rdata/its18_ps_pime_3.rds\")\nsaveRDS(its18_ps_pime_split$`8`, \"files/filtering/pime/rdata/its18_ps_pime_8.rds\")\n\n\n$`0`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 315 taxa and 5 samples ]\nsample_data() Sample Data:       [ 5 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 315 taxa by 8 taxonomic ranks ]\nphy_tree()    Phylogenetic Tree: [ 315 tips and 314 internal nodes ]\n\n$`3`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 234 taxa and 4 samples ]\nsample_data() Sample Data:       [ 4 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 234 taxa by 8 taxonomic ranks ]\nphy_tree()    Phylogenetic Tree: [ 234 tips and 233 internal nodes ]\n\n$`8`\nphyloseq-class experiment-level object\notu_table()   OTU Table:         [ 138 taxa and 4 samples ]\nsample_data() Sample Data:       [ 4 samples by 6 sample variables ]\ntax_table()   Taxonomy Table:    [ 138 taxa by 8 taxonomic ranks ]\nphy_tree()    Phylogenetic Tree: [ 138 tips and 137 internal nodes ]\n\n\n\n\nSummary\nThe influence of filtering on total reads and ASVs for each sample.\n\n\n\n(ITS) Table 9 | Sample summary showing the number of reads and ASVs after PIME filtering.\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Sample_ID\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P10_D00_010_C0E\"],\"PLOT\":[\"P01\",\"P01\",\"P02\",\"P03\",\"P03\",\"P04\",\"P05\",\"P06\",\"P07\",\"P07\",\"P08\",\"P09\",\"P10\"],\"TREAT\":[\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"C\"],\"TEMP\":[\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"0\"],\"PAIR\":[\"A\",\"A\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"D\",\"D\",\"D\",\"E\",\"E\"],\"total_reads\":[6586,3442,5819,4353,4991,4385,4181,6727,4963,4215,6761,4925,6317],\"total_asvs\":[181,123,238,196,109,229,131,246,205,97,198,196,203]},\"columns\":[{\"accessor\":\"Sample_ID\",\"name\":\"Sample_ID\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01_D00_010_W3A\",\"P01_D00_010_W8A\",\"P02_D00_010_C0A\",\"P03_D00_010_W3B\",\"P03_D00_010_W8B\",\"P04_D00_010_C0B\",\"P05_D00_010_W8C\",\"P06_D00_010_C0C\",\"P07_D00_010_W3D\",\"P07_D00_010_W8D\",\"P08_D00_010_C0D\",\"P09_D00_010_W3E\",\"P10_D00_010_C0E\"],\"header\":\"Sample ID\",\"minWidth\":150,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"PLOT\",\"name\":\"PLOT\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"P01\",\"P01\",\"P02\",\"P03\",\"P03\",\"P04\",\"P05\",\"P06\",\"P07\",\"P07\",\"P08\",\"P09\",\"P10\"],\"header\":\"PLOT\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"TREAT\",\"name\":\"TREAT\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"W\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"C\",\"W\",\"W\",\"C\",\"W\",\"C\"],\"header\":\"TREAT\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"TEMP\",\"name\":\"TEMP\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"3\",\"8\",\"0\",\"3\",\"8\",\"0\",\"8\",\"0\",\"3\",\"8\",\"0\",\"3\",\"0\"],\"header\":\"TEMP\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"PAIR\",\"name\":\"PAIR\",\"type\":\"character\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"A\",\"A\",\"A\",\"B\",\"B\",\"B\",\"C\",\"C\",\"D\",\"D\",\"D\",\"E\",\"E\"],\"header\":\"PAIR\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_reads\",\"name\":\"total_reads\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"6586\",\"3442\",\"5819\",\"4353\",\"4991\",\"4385\",\"4181\",\"6727\",\"4963\",\"4215\",\"6761\",\"4925\",\"6317\"],\"header\":\"total reads\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total_asvs\",\"name\":\"total_asvs\",\"type\":\"numeric\",\"sortable\":true,\"resizable\":true,\"filterable\":true,\"cell\":[\"181\",\"123\",\"238\",\"196\",\"109\",\"229\",\"131\",\"246\",\"205\",\"97\",\"198\",\"196\",\"203\"],\"header\":\"total asvs\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"searchable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,13],\"paginationType\":\"numbers\",\"showPagination\":true,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"showSortable\":true,\"inline\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"8182cdbf82b0bb4a2e1e7b44b9a84e60\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\nAnd here is how the subsets changed through the PIME filtering process.\n\n\n\n(ITS) Table 10 | Changes in read count and total ASVs during PIME filtering.\n\n\n Download data as csv file\n\n\n\n\n{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Description\":[\"FULL data set\",\"Rarefied data\",\"PIME filtered data\",\"PIME (+0C)\",\"PIME (+3C)\",\"PIME (+8C)\"],\"no. samples\":[13,13,13,5,4,4],\"total reads\":[490767,119236,67665,30009,20827,16829],\"total asvs\":[3355,3057,474,315,234,138]},\"columns\":[{\"accessor\":\"Description\",\"name\":\"Description\",\"type\":\"character\",\"sortable\":false,\"resizable\":true,\"filterable\":false,\"cell\":[\"FULL data set\",\"Rarefied data\",\"PIME filtered data\",\"PIME (+0C)\",\"PIME (+3C)\",\"PIME (+8C)\"],\"header\":\"Description\",\"minWidth\":150,\"align\":\"left\",\"footerStyle\":{\"fontWeight\":\"bold\"},\"sticky\":\"left\",\"style\":{\"borderRight\":\"1px solid #eee\"},\"headerStyle\":{\"borderRight\":\"1px solid #eee\"}},{\"accessor\":\"no. samples\",\"name\":\"no. samples\",\"type\":\"numeric\",\"sortable\":false,\"resizable\":true,\"filterable\":false,\"cell\":[\"13\",\"13\",\"13\",\"5\",\"4\",\"4\"],\"header\":\"no. samples\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total reads\",\"name\":\"total reads\",\"type\":\"numeric\",\"sortable\":false,\"resizable\":true,\"filterable\":false,\"cell\":[\"490767\",\"119236\",\"67665\",\"30009\",\"20827\",\"16829\"],\"header\":\"total reads\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}},{\"accessor\":\"total asvs\",\"name\":\"total asvs\",\"type\":\"numeric\",\"sortable\":false,\"resizable\":true,\"filterable\":false,\"cell\":[\"3355\",\"3057\",\"474\",\"315\",\"234\",\"138\"],\"header\":\"total asvs\",\"minWidth\":100,\"align\":\"center\",\"footerStyle\":{\"fontWeight\":\"bold\"}}],\"defaultPageSize\":6,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,6],\"paginationType\":\"numbers\",\"showPagination\":false,\"showPageInfo\":true,\"minRows\":1,\"highlight\":true,\"bordered\":true,\"striped\":true,\"compact\":true,\"nowrap\":true,\"inline\":true,\"theme\":{\"style\":{\"fontSize\":\"0.8em\"}},\"dataKey\":\"060a32b1a79b70264c8886a5cbb85938\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}\n\n\n\nSource Code\nThe source code for this page can be accessed on GitHub by clicking this link. Please note, that in order to process the data and build the website, we needed to run the workflow and get the results. Then hard code the results and turn off the individual commands. So the raw file for this page is a bit messy—you have been warned.\n\n\nRoesch, Luiz Fernando W, Priscila T Dobbler, Victor S Pylro, Bryan Kolaczkowski, Jennifer C Drew, and Eric W Triplett. 2020. “PIME: A Package for Discovery of Novel Differences Among Microbial Communities.” Molecular Ecology Resources 20 (2): 415–28. https://doi.org/10.1111/1755-0998.13116.\n\n\nSmirnova, Ekaterina, Snehalata Huzurbazar, and Farhad Jafari. 2019. “PERFect: PERmutation Filtering Test for Microbiome Data.” Biostatistics 20 (4): 615–31. https://doi.org/10.1093/biostatistics/kxy020.\n\n\n\n\n",
      "last_modified": "2021-10-12T18:15:15-05:00"
    },
    {
      "path": "index.html",
      "title": "The S.W.E.L.T.R Microbial Cookbook",
      "description": "**S**oil **W**arming **E**xperiment in **L**owland **T**ropical **R**ainforest\n",
      "author": [
        {
          "name": "Andrew Nottingham",
          "url": {}
        },
        {
          "name": "Jarrod J Scott",
          "url": "https://metacrobe.github.io/"
        },
        {
          "name": "Kristin Saltonstall",
          "url": "https://stri.si.edu/scientist/kristin-saltonstall"
        },
        {
          "name": "Kirk Broders",
          "url": "https://www.ars.usda.gov/midwest-area/peoria-il/national-center-for-agricultural-utilization-research/mycotoxin-prevention-and-applied-microbiology-research/people/kirk-broders/"
        },
        {
          "name": "Maria Montero-Sanchez",
          "url": {}
        },
        {
          "name": "Johann Püspök",
          "url": {}
        },
        {
          "name": "Erland Bååth",
          "url": {}
        },
        {
          "name": "Patrick Meir",
          "url": "https://biology.anu.edu.au/research/groups/meir-group-tropical-forest-ecosystems"
        }
      ],
      "contents": "\n\nContents\nSite Overview\nData Availability\nPipelines & Workflows\nProcessing Workflow\nDiversity Workflow\n\nPrimers\nResources\n16S rRNA\nITS\nSource Code\nData Availability\n\n\nSite Overview\nWelcome to the website of the Soil Warming Experiment in Lowland Tropical Rainforest project, or SWELTR for short. This site contains reproducible workflows and pipelines for all aspects of processing and analyzing the SWELTR hig temperature experiment. Most (if not all) steps were performed in R. Though we ran some steps using the Smithsonian compute cluster (Hydra), all workflows can be run on a laptop. Workflows have a modular design, meaning they can each be run independently as long as you have the necessary input files described at the beginning of each workflow. Many of the tables have download or copy buttons that allow you to quickly export data in different formats. Citations, which are embedded in the workflows, can be copied for use in reference management software. Generally, all R code is available in each workflow. Code for displaying tables and other non-analytical features are always hidden but can be accessed from the Rmd file on the site GitHub repo. At the bottom of each page there are a variety of Appendices including a bibliography, links to source code, instructions on accessing raw data, etc.\nData Availability\nIn order to run a complete pipeline, you either need the raw fastq files, available on the figshare project site, or the trimmed fastq files, available from the European Nucleotide Archive (ENA) under project accession number PRJEB45074 (ERP129199). See the specific pipeline or Data Availability page for more details.\nEach workflow page within a pipeline also contains a Data Availability appendix that links to specific data packets require for the workflow. Or again, you can visit the Data Availability page for more information.\nPipelines & Workflows\nThere are 9 workflows in total. Each workflow contains code for processing the 16S rRNA and ITS data sets. These workflows are complete, reproducible, and designed to be run in order. That said, each ends with the creation of R data packages that can be used as input for the next workflow, allowing you to skip any individual section. In order, these are:\nProcessing Workflow\nDADA2. Workflow begins with raw fastq files and goes through the process of primer removal (using catadapt (Martin 2011)), filtering, quality screening, trimming, error correction, chimera removal, and taxonomic assignment using DADA2 (Callahan et al. 2016). The workflow ends with the generation of an Rdata file for the next step. Depending on the DADA2 version you have installed, you may get slightly different results due to fundamental changes in the code-base. This is unavoidable at times and the developers do the best they can to maintain fidelity across versions. We set random number seeds at the beginning of each workflow to ensure reproducibility. To see the package versions of tools used in each workflow, please see the R Session Information section on the bottom of each page.\nData Set Prep. Workflow begins with the initial sequence and taxonomy tables from the DADA2 workflow and uses phyloseq (McMurdie and Holmes 2013) to define samples and sample groups, create phyloseq objects, and curate data sets. Summary data is provided throughout the workflow. Again, workflow ends with the generation of an Rdata file for the next step.\nOTU Clustering. Cluster ASVs into operational taxonomic units (OTUs) using the kmer package.\nFiltering\n4a. PIME Filtering. In Part A, we used PIME (Prevalence Interval for Microbiome Evaluation) (Roesch et al. 2020) to filter the FULL 16S rRNA (ASV & OTU) and ITS (ASV & OTU) data sets.\n4b. PERFect Filtering. In Part B we use PERFect (PERmutation Filtering test for microbiome data) (Smirnova, Huzurbazar, and Jafari 2019) to filter the same data sets.\nDiversity Workflow\nTaxonomic. Taxonomic diversity primarily focused on taxon bar charts.\nAlpha Diversity. This section covers the distribution of reads across samples and includes histograms of read counts & rarefaction curves. Also covers estimates of alpha diversity using Hill numbers (Alberdi and Gilbert 2019) and includes normality tests, significance tests, & diversity plots.\nBeta Diversity Estimates of beta diversity including significance tests, beta dispersion, and ordination plots.\nDA ASVs & OTUs. Results and visualizations from Indicator Analysis and LEfSe.\nMetadata. Multivariate Analysis Overview of environmental metadata and community composition. Includes metadata Normality Tests, Normalization, Autocorrelation Tests, Dissimilarity Correlation Tests, Best Subset of Variables, Distance-based Redundancy, and Capscale analysis.\nThough the workflows are annotated, they are not necessarily meant to be tutorials since we only provide minimal explanation. There are many great tutorials and explanations out there on amplicon processing that you can dive into. See the Resources section below for some of the sites we used. We also reference other sources on individual workflow pages.\nPrimers\nHere is a description of the primers used in this study. Primer information can also be found of the individual workflow pages.\n\n\n\n\npipeline\nFWD\nFWD_sequence\nREV\nREV_sequence\nlength\nref\n16S rRNA\n515F\nGTGCCAGCMGCCGCGGTAA\n806R\nGGACTACHVGGGTWTCTAAT\n253\n(Caporaso et al. 2011)\nITS\nITS1f\nCTTGGTCATTTAGAGGAAGTAA\nITS2\nGCTGCGTTCTTCATCGATGC\n100-450\ninsert ref\n\n\nResources\nHere are some general resources we used in workflow construction. Specific tools and programs can be found in the Reference sections of individual workflows.\n16S rRNA\nEarth Microbiome Project 16S Illumina Amplicon Protocol for primer description and amplification protocols.\nDADA2 Pipeline Tutorial (1.8) for 16S rRNA read processing.\nAnother DADA2 16S rRNA tutorial.\nITS\nEarth Microbiome Project ITS Illumina Amplicon Protocol for primer description and amplification protocols.\nDADA2 ITS Pipeline Workflow (1.8) for ITS read processing.\nSource Code\nYou can find the source code for this page by clicking this link.\nData Availability\nRaw fastq files available on figshare at XXXXXXXX. Trimmed fastq files (primers removed) available through the ENA under project accession number PRJEB45074 (ERP129199). Output files from this workflow available on figshare at XXXXXXXX..\n\n\nAlberdi, Antton, and M Thomas P Gilbert. 2019. “A Guide to the Application of Hill Numbers to DNA-Based Diversity Analyses.” Molecular Ecology Resources 19 (4): 804–17. https://doi.org/10.1111/1755‐0998.13014.\n\n\nCallahan, Benjamin J, Paul J McMurdie, Michael J Rosen, Andrew W Han, Amy Jo A Johnson, and Susan P Holmes. 2016. “Dada2: High-Resolution Sample Inference from Illumina Amplicon Data.” Nature Methods 13 (7): 581. https://doi.org/10.1038/nmeth.3869.\n\n\nCaporaso, J Gregory, Christian L Lauber, William A Walters, Donna Berg-Lyons, Catherine A Lozupone, Peter J Turnbaugh, Noah Fierer, and Rob Knight. 2011. “Global Patterns of 16s rRNA Diversity at a Depth of Millions of Sequences Per Sample.” Proceedings of the National Academy of Sciences 108: 4516–22. https://doi.org/10.1073/pnas.1000080107.\n\n\nMartin, Marcel. 2011. “Cutadapt Removes Adapter Sequences from High-Throughput Sequencing Reads.” EMBnet. Journal 17 (1): 10–12. https://doi.org/10.14806/ej.17.1.200.\n\n\nMcMurdie, Paul J, and Susan Holmes. 2013. “Phyloseq: An r Package for Reproducible Interactive Analysis and Graphics of Microbiome Census Data.” PLoS One 8 (4): e61217. https://doi.org/10.1371/journal.pone.0061217.\n\n\nRoesch, Luiz Fernando W, Priscila T Dobbler, Victor S Pylro, Bryan Kolaczkowski, Jennifer C Drew, and Eric W Triplett. 2020. “PIME: A Package for Discovery of Novel Differences Among Microbial Communities.” Molecular Ecology Resources 20 (2): 415–28. https://doi.org/10.1111/1755-0998.13116.\n\n\nSmirnova, Ekaterina, Snehalata Huzurbazar, and Farhad Jafari. 2019. “PERFect: PERmutation Filtering Test for Microbiome Data.” Biostatistics 20 (4): 615–31. https://doi.org/10.1093/biostatistics/kxy020.\n\n\n\n\n",
      "last_modified": "2021-10-06T14:22:28-05:00"
    },
    {
      "path": "taxa.html",
      "title": "4 Taxonomic Diversity",
      "description": "Reproducible workflow for assessing dominant taxonomic groups in the 16S rRNA and ITS data sets.\n",
      "author": [],
      "contents": "\n\nContents\nSynopsis\n16s rRNA\nBar charts of Major Taxa\n\nITS\nBar charts of Major Taxa\nSource Code\n\n\n\nClick here for setup information.\n\nknitr::opts_chunk$set(echo = TRUE, eval = FALSE)\nset.seed(119)\n#library(conflicted)\n#pacman::p_depends(phangorn, local = TRUE)  \n#pacman::p_depends_reverse(phangorn, local = TRUE)  \n\nlibrary(phyloseq); packageVersion(\"phyloseq\")\nlibrary(Biostrings); packageVersion(\"Biostrings\")\npacman::p_load(tidyverse, metacoder, hilldiv, patchwork, ampvis2, \n               agricolae, labdsv, naniar, codefolder, pairwiseAdonis, \n               microbiome, seqRFLP, DT, microeco, file2meco, ggplot, cowplot,\n               GUniFrac, ggalluvial, ggdendro, tidytree, igraph, reactable,\n               pheatmap, SpiecEasi, Tax4Fun, WGCNA, microbiomeMarker,\n               install = FALSE, update = FALSE)\noptions(scipen=999)\nknitr::opts_current$get(c(\n  \"cache\",\n  \"cache.path\",\n  \"cache.rebuild\",\n  \"dependson\",\n  \"autodep\"\n))\n\n\nSynopsis\nThis workflow contains taxonomic diversity assessments for the 16S rRNA and ITS data sets. In order to run the workflow, you either need to first run the DADA2 Workflow, then the Data Preparation workflow, and finally the Filtering workflow.\nIn this workflow, we use the microeco to look at the taxonomic distribution of microbial communities.\n16s rRNA\n\n\n\n\n\n\nBar charts of Major Taxa\nHere we compare the taxonomic breakdown of the Full (unfiltered), Arbitrary filtered, PERfect filtered, and PIME filtered data sets, split by temperature treatment.\nBefore we plot the data, we want to separate out the Proteobacteria classes so we can plot these along with other phyla. To accomplish this we perform the following steps:\nGet all Class-level Proteobacteria names\n\n\nShow code\nssu18_data_sets <- c(\"ssu18_ps_work\",  \"ssu18_ps_filt\",\n                     \"ssu18_ps_perfect\", \"ssu18_ps_pime\")\n\nfor (i in ssu18_data_sets) {\n     tmp_name <- purrr::map_chr(i, ~paste0(., \"_proteo\"))\n     tmp_get <- get(i)\n     tmp_df <- subset_taxa(tmp_get, Phylum == \"Proteobacteria\")\n     assign(tmp_name, tmp_df)\n     print(tmp_name)\n     tmp_get_taxa <- get_taxa_unique(tmp_df,\n                                     taxonomic.rank = rank_names(tmp_df)[3],\n                                     errorIfNULL=TRUE)\n     print(tmp_get_taxa)\n     rm(list = ls(pattern = \"tmp_\"))\n     rm(list = ls(pattern = \"_proteo\"))\n}\n\nReplace Phylum Proteobacteria with the Class name.\n\n\nShow code\nfor (j in ssu18_data_sets) {\n  tmp_name <- purrr::map_chr(j, ~paste0(., \"_proteo_clean\"))\n  tmp_get <- get(j)\n  tmp_clean <- data.frame(tax_table(tmp_get))\n\n   for (i in 1:nrow(tmp_clean)){\n       if (tmp_clean[i,2] == \"Proteobacteria\" & tmp_clean[i,3] == \"Alphaproteobacteria\"){\n           phylum <- base::paste(\"Alphaproteobacteria\")\n           tmp_clean[i, 2] <- phylum\n   }   else if (tmp_clean[i,2] == \"Proteobacteria\" & tmp_clean[i,3] == \"Gammaproteobacteria\"){\n           phylum <- base::paste(\"Gammaproteobacteria\")\n           tmp_clean[i, 2] <- phylum\n   }   else if (tmp_clean[i,2] == \"Proteobacteria\" & tmp_clean[i,3] == \"Zetaproteobacteria\"){\n              phylum <- base::paste(\"Zetaproteobacteria\")\n           tmp_clean[i, 2] <- phylum\n   }   else if (tmp_clean[i,2] == \"Proteobacteria\" & tmp_clean[i,3] == \"p_Proteobacteria\"){\n           phylum <- base::paste(\"p_Proteobacteria\")\n           tmp_clean[i, 2] <- phylum\n       }\n     }\n  tax_table(tmp_get) <- as.matrix(tmp_clean)\n  rank_names(tmp_get)\n  assign(tmp_name, tmp_get)\n  print(c(tmp_name, tmp_get))\n  print(length(get_taxa_unique(tmp_get,\n                               taxonomic.rank = rank_names(tmp_get)[2],\n                               errorIfNULL=TRUE)))\n  tmp_path <- file.path(\"files/taxa/rdata/\")\n  saveRDS(tmp_get, paste(tmp_path, j, \"_clean.rds\", sep = \"\"))\n  rm(list = ls(pattern = \"tmp_\"))\n}\nrm(class, order, phylum)\nobjects(pattern=\"_proteo_clean\")\n\nIn order to use microeco, we need to add the rank designation as a prefix to each taxa. For example, Actinobacteriota is changed to p__Actinobacteriota.\n\n\nShow code\nfor (i in ssu18_data_sets) {\n  tmp_get <- get(purrr::map_chr(i, ~paste0(., \"_proteo_clean\")))\n  #tmp_get <- get(i)\n  #tmp_path <- file.path(\"files/alpha/rdata/\")\n  #tmp_read <- readRDS(paste(tmp_path, i, \".rds\", sep = \"\"))\n  tmp_sam_data <- sample_data(tmp_get)\n  tmp_tax_data <- data.frame(tax_table(tmp_get))\n  tmp_tax_data$Phylum <- gsub(\"p_Proteobacteria\", \"Proteobacteria\", tmp_tax_data$Phylum)\n\n  #tmp_tax_data[,c(1:6)]\n  tmp_tax_data$ASV_ID <- NULL # Some have, some do not\n  tmp_tax_data$ASV_SEQ <- NULL\n  \n  tmp_tax_data[] <- data.frame(lapply(tmp_tax_data, gsub, \n                                      pattern = \"^[k | p | c | o | f]_.*\", \n                                      replacement = \"\", fixed = FALSE))\n  tmp_tax_data$Kingdom <- paste(\"k__\", tmp_tax_data$Kingdom, sep = \"\")\n  tmp_tax_data$Phylum <- paste(\"p__\", tmp_tax_data$Phylum, sep = \"\")\n  tmp_tax_data$Class <- paste(\"c__\", tmp_tax_data$Class, sep = \"\")\n  tmp_tax_data$Order <- paste(\"o__\", tmp_tax_data$Order, sep = \"\")\n  tmp_tax_data$Family <- paste(\"f__\", tmp_tax_data$Family, sep = \"\")\n  tmp_tax_data$Genus <- paste(\"g__\", tmp_tax_data$Genus, sep = \"\")\n  tmp_tax_data <- as.matrix(tmp_tax_data)\n  \n  tmp_ps <- phyloseq(otu_table(tmp_get),\n                     phy_tree(tmp_get),\n                     tax_table(tmp_tax_data),\n                     tmp_sam_data)\n  assign(i, tmp_ps)\n  rm(list = ls(pattern = \"tmp_\"))\n}\nrm(list = ls(pattern = \"_proteo_clean\"))\n\nNext, we need to covert each phyloseq object to a microtable class. The microtable class is the basic data structure for the microeco package and designed to store basic information from all the downstream analyses (e.g, alpha diversity, beta diversity, etc.). We use the file2meco to read the phyloseq object and convert into a microtable object. We can add _me as a suffix to each object to distiguish it from its’ phyloseq counterpart.\n\n\nShow code\nfor (i in ssu18_data_sets) {\n    tmp_get <- get(i)\n    tmp_otu_table <- data.frame(t(otu_table(tmp_get)))\n    tmp_sample_info <- data.frame(sample_data(tmp_get))\n    tmp_taxonomy_table <- data.frame(tax_table(tmp_get))\n    tmp_phylo_tree <- phy_tree(tmp_get)\n    tmp_taxonomy_table %<>% tidy_taxonomy\n    tmp_dataset <- microtable$new(sample_table = tmp_sample_info, \n                                  otu_table = tmp_otu_table, \n                                  tax_table = tmp_taxonomy_table, \n                                  phylo_tree = tmp_phylo_tree)\n    tmp_dataset$tidy_dataset()\n    print(tmp_dataset)\n    tmp_dataset$tax_table %<>% base::subset(Kingdom == \"k__Archaea\" | Kingdom == \"k__Bacteria\")\n    print(tmp_dataset)\n    tmp_dataset$filter_pollution(taxa = c(\"mitochondria\", \"chloroplast\"))\n    print(tmp_dataset)\n    tmp_dataset$tidy_dataset()\n    print(tmp_dataset)\n    tmp_name <- purrr::map_chr(i, ~paste0(., \"_me\")) \n    assign(tmp_name, tmp_dataset)\n    rm(list = ls(pattern = \"tmp_\"))\n}  \nobjects()\n\nHere is an example of what a new microeco object looks like when you call it.\n\nssu18_ps_work_me\nmicrotable class:\nsample_table have 15 rows and 6 columns\notu_table have 20173 rows and 15 columns\ntax_table have 20173 rows and 6 columns\nphylo_tree have 20173 tips\nTaxa abundance: calculated for Kingdom,Phylum,Class,Order,Family,Genus \n\n\n\n\nNow, we calculate the taxa abundance at each taxonomic rank using cal_abund(). This function return a list called taxa_abund containing several data frame of the abundance information at each taxonomic rank. The list is stored in the microtable object automatically. It’s worth noting that the cal_abund() function can be used to solve some complex cases, such as supporting both the relative and absolute abundance calculation and selecting the partial taxonomic columns. More information can be found in the description of the file2meco package. In the same loop we also create a trans_abund class, which is used to transform taxonomic abundance data for plotting.\n\n\nShow code\nfor (i in ssu18_data_sets) {\n  tmp_me <- get(purrr::map_chr(i, ~paste0(., \"_me\")))\n  tmp_me$cal_abund()\n  tmp_me_abund <- trans_abund$new(dataset = tmp_me, taxrank = \"Phylum\", ntaxa = 12)\n  tmp_me_abund$abund_data$Abundance <- tmp_me_abund$abund_data$Abundance / 100\n  tmp_me_abund_gr <- trans_abund$new(dataset = tmp_me, taxrank = \"Phylum\", ntaxa = 12, \n                                  groupmean = \"TEMP\")\n  tmp_me_abund_gr$abund_data$Abundance <- tmp_me_abund_gr$abund_data$Abundance / 100\n  tmp_name <- purrr::map_chr(i, ~paste0(., \"_me_abund\")) \n  assign(tmp_name, tmp_me_abund)  \n  tmp_name_gr <- purrr::map_chr(i, ~paste0(., \"_me_abund_group\")) \n  assign(tmp_name_gr, tmp_me_abund_gr)  \n  rm(list = ls(pattern = \"tmp_\"))\n}\nobjects()\n\nThe result is stored in object$taxa_abund ...\nI prefer to specify the order of taxa in these kinds of plots. We can look the top ntaxa (defined above) by accessing the use_taxanames character vector of each microtable object.\n\n\n\nHum. Similar but not the same. This means we need to define the order for each separately. Once we do that, we will override the use_taxanames character vectors with the reordered vectors.\n\n\nShow code\nssu18_ps_work_tax_ord <- c(\"Alphaproteobacteria\", \"Gammaproteobacteria\", \"Acidobacteriota\", \n                           \"Actinobacteriota\", \"Bacteroidota\", \"Firmicutes\", \"Myxococcota\", \n                           \"Verrucomicrobiota\", \"Chloroflexi\", \"Planctomycetota\", \n                           \"Methylomirabilota\", \"Crenarchaeota\")\nssu18_ps_filt_tax_ord <- c(\"Alphaproteobacteria\", \"Gammaproteobacteria\", \"Acidobacteriota\", \n                           \"Actinobacteriota\", \"Bacteroidota\", \"Firmicutes\", \"Myxococcota\", \n                           \"Verrucomicrobiota\", \"RCP2-54\", \"Planctomycetota\", \n                           \"Methylomirabilota\", \"Crenarchaeota\")\nssu18_ps_perfect_tax_ord <- c(\"Alphaproteobacteria\", \"Gammaproteobacteria\", \"Acidobacteriota\", \n                              \"Actinobacteriota\", \"Bacteroidota\", \"Firmicutes\", \"Myxococcota\", \n                              \"Verrucomicrobiota\", \"RCP2-54\", \"Planctomycetota\", \n                              \"Methylomirabilota\", \"Crenarchaeota\")\nssu18_ps_pime_tax_ord <- c(\"Alphaproteobacteria\", \"Gammaproteobacteria\", \"Acidobacteriota\", \n                           \"Actinobacteriota\", \"Bacteroidota\", \"Firmicutes\", \"Myxococcota\", \n                           \"Verrucomicrobiota\", \"RCP2-54\", \"Nitrospirota\", \n                           \"Methylomirabilota\", \"Crenarchaeota\")\n\nAnd one more little step before plotting. Here we a) specify a custom color palette and b) specify the sample order.\n\n\nShow code\ntop_level <- \"Phylum\"\nssu18_colvec.tax <- c(\"#00463C\",\"#FFD5FD\",\"#00A51C\",\"#C80B2A\",\"#00C7F9\",\"#FFA035\",\n                      \"#ED0DFD\",\"#0063E5\",\"#5FFFDE\",\"#C00B6F\",\"#00A090\",\"#FF95BA\")\nssu18_samp_order <- c(\"P02_D00_010_C0A\", \"P04_D00_010_C0B\", \"P06_D00_010_C0C\", \"P08_D00_010_C0D\", \"P10_D00_010_C0E\", \n                    \"P01_D00_010_W3A\", \"P03_D00_010_W3B\", \"P05_D00_010_W3C\", \"P07_D00_010_W3D\", \"P09_D00_010_W3E\", \n                    \"P01_D00_010_W8A\", \"P03_D00_010_W8B\", \"P05_D00_010_W8C\", \"P07_D00_010_W8D\", \"P09_D00_010_W8E\")\n\nNow we can generate plots (in a loop) for each faceted data set.\n\n\nShow code\nfor (i in ssu18_data_sets) {\n  tmp_abund <- get(purrr::map_chr(i, ~paste0(., \"_me_abund\")))\n  tmp_tax_order <- get(purrr::map_chr(i, ~paste0(., \"_tax_ord\")))\n  tmp_abund$use_taxanames <- tmp_tax_order\n  tmp_facet_plot <- tmp_abund$plot_bar(use_colors = ssu18_colvec.tax, \n                                       others_color = \"#323232\", \n                                       facet = \"TEMP\", \n                                       xtext_keep = TRUE, \n                                       xtext_type_hor = FALSE, \n                                       legend_text_italic = FALSE, \n                                       xtext_size = 6, \n                                       facet_color = \"#cccccc\", \n                                       order_x = ssu18_samp_order)\n  tmp_facet_name <- purrr::map_chr(i, ~paste0(., \"_facet_plot\")) \n  assign(tmp_facet_name, tmp_facet_plot)  \n  rm(list = ls(pattern = \"tmp_\"))\n}\n\nThen add a little formatting to the faceted plots.\n\n\nShow code\nset_to_plot <- c(\"ssu18_ps_work_facet_plot\", \"ssu18_ps_filt_facet_plot\", \"ssu18_ps_perfect_facet_plot\", \"ssu18_ps_pime_facet_plot\")\nfor (i in  set_to_plot) {\n    tmp_get <- get(i)\n    tmp_get <- tmp_get +\n    theme_cowplot() +\n    guides(fill = guide_legend(title = top_level, reverse = FALSE,\n                               keywidth = 0.7, keyheight = 0.7)) +\n    ylab(NULL) + xlab(\"Sample\") +\n    theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),\n        panel.background = element_rect(fill = \"transparent\", colour = NA),\n        plot.background = element_rect(fill = \"transparent\", colour = NA),\n        panel.border = element_rect(fill = NA, color = \"black\"),\n        legend.text = element_text(size = 7),\n        legend.title = element_text(size = 10),\n        legend.position = \"right\",\n        axis.text.y = element_text(size = 8),\n        axis.text.x = element_text(size = 6, angle = 90),\n        strip.text = element_text(size = 8, angle = 0),\n        axis.title = element_text(size = 10)) + ylab(NULL) +\n      scale_y_continuous()\n  assign(i, tmp_get)\n  rm(list = ls(pattern = \"tmp_\")) \n}\n\nAnd now plots for the groupmeans sets. We can use the same taxa order since that should not have changed.\n\n\nShow code\nset_to_plot <- c(\"ssu18_ps_work_group_plot\", \"ssu18_ps_filt_group_plot\", \"ssu18_ps_perfect_group_plot\", \"ssu18_ps_pime_group_plot\")\nfor (i in ssu18_data_sets) {\n  tmp_abund <- get(purrr::map_chr(i, ~paste0(., \"_me_abund_group\")))\n  tmp_tax_order <- get(purrr::map_chr(i, ~paste0(., \"_tax_ord\")))\n  tmp_abund$use_taxanames <- tmp_tax_order\n  tmp_group_plot <- tmp_abund$plot_bar(use_colors = ssu18_colvec.tax, \n                                       others_color = \"#323232\", \n                                       xtext_keep = TRUE, \n                                       xtext_type_hor = TRUE, \n                                       legend_text_italic = FALSE, \n                                       xtext_size = 10, \n                                       facet_color = \"#cccccc\")\n  tmp_group_name <- purrr::map_chr(i, ~paste0(., \"_group_plot\")) \n  assign(tmp_group_name, tmp_group_plot)  \n  rm(list = ls(pattern = \"tmp_\"))\n}\n\nLet’s also add a little formatting to the groupmean plots.\n\n\nShow code\nfor (i in  set_to_plot) {\n     tmp_get <- get(i)\n     tmp_get <- tmp_get +\n       theme_cowplot() +\n       ylab(\"Relative Abundance (% total reads)\") + xlab(\"Temperature\") +\n       theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),\n             panel.background = element_rect(fill = \"transparent\", colour = NA),\n             plot.background = element_rect(fill = \"transparent\", colour = NA),\n             panel.border = element_rect(fill = NA, color = \"black\"),\n             legend.position = \"none\",\n             axis.text = element_text(size = 8),\n             axis.title = element_text(size = 10)) + \n       scale_y_continuous()\n\n     assign(i, tmp_get)\n     rm(list = ls(pattern = \"tmp_\"))\n}\n\nFinally we use the patchwork package to combine the two plots and customize the look.\n\n\nShow code\n## single index that acts as an index for referencing elements (variables) in a list\n##  solution modified from this SO answerhttps://stackoverflow.com/a/54451460\nvar_list <- list(\n  var1 = ssu18_data_sets,\n  var2 = c(\"FULL\", \"Arbitrary filtered\", \"PERfect filtered\", \"PIME filtered\")\n)\nfor (j in  1:length(var_list$var1)) {\n     tmp_plot_final_name <- purrr::map_chr(var_list$var1[j], ~paste0(., \"_\", top_level, \"_plot_final\"))\n     tmp_set_type <- var_list$var2[j]\n     tmp_p_plot <- get(purrr::map_chr(var_list$var1[j], ~paste0(., \"_group_plot\")))\n     tmp_m_plot <- get(purrr::map_chr(var_list$var1[j], ~paste0(., \"_facet_plot\")))\n     tmp_plot_final <- tmp_p_plot + tmp_m_plot\n     tmp_plot_final <- tmp_plot_final +\n         plot_annotation(tag_levels = \"a\", \n                         title = paste(\"Top\", top_level, \"of\", tmp_set_type, \"data set\"), \n                         #subtitle = 'Top taxa of non-filtered data',\n                         caption = \"a) grouped by temperature.,\n                         b) All samples, faceted by temperature.\") + \n       plot_layout(widths = c(1, 2)) &\n       theme(plot.title = element_text(size = 13),\n             plot.subtitle = element_text(size = 10), \n             plot.tag = element_text(size = 12), \n             axis.title = element_text(size = 10), \n             axis.text = element_text(size = 8)) \n  assign(tmp_plot_final_name, tmp_plot_final)\n  rm(list = ls(pattern = \"tmp_\"))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIt is important to note that while most of the dominant taxa are the same across the FULL, Arbitrary, PIME, and PERfect data sets, there a few key difference:\n\nPlanctomycetota was not among the dominant taxa in the PIME data set. Nitrospirota was substituted.\nChloroflexi was not among the dominant taxa in either the Arbitrary, PERfect, or PIME data sets. RCP2-54 was substituted in both cases.\n\n\nFULL (unfiltered)\n\n\n\nArbitrary filtered\n\n\n\nPERFECT filtered\n\n\n\nPIME filtered\n\n\n\n\n\nITS\n\n\n\n\n\n\nBar charts of Major Taxa\nHere we compare the taxonomic breakdown of the FULL (unfiltered), PIME filtered, and PERfect filtered data sets, split by temperature treatment.\n\nits18_data_sets <- c(\"its18_ps_work\",  \"its18_ps_filt\",\n                     \"its18_ps_perfect\", \"its18_ps_pime\")\n\nChoose the number of taxa to display and the taxonomic level. Aggregate the rest into “Other.”\n\ntop_hits <- 14\ntop_level <- \"Order\"\n\nAs above, in order to use microeco, we need to add the rank designation as a prefix to each taxa. For example, Basidiomycota is changed to p__Basidiomycota.\n\n\nShow code\nfor (i in its18_data_sets) {\n  tmp_get <- get(i)\n  tmp_sam_data <- sample_data(tmp_get)\n  tmp_tax_data <- data.frame(tax_table(tmp_get))\n  tmp_tax_data$ASV_ID <- NULL # Some have, some do not\n  tmp_tax_data$ASV_SEQ <- NULL\n  \n#  tmp_tax_data[] <- data.frame(lapply(tmp_tax_data, gsub, \n#                                      pattern = \"^[k | p | c | o | f]_.*\", \n#                                      replacement = \"\", fixed = FALSE))\n  tmp_tax_data$Kingdom <- paste(\"k__\", tmp_tax_data$Kingdom, sep = \"\")\n  tmp_tax_data$Phylum <- paste(\"p__\", tmp_tax_data$Phylum, sep = \"\")\n  tmp_tax_data$Class <- paste(\"c__\", tmp_tax_data$Class, sep = \"\")\n  tmp_tax_data$Order <- paste(\"o__\", tmp_tax_data$Order, sep = \"\")\n  tmp_tax_data$Family <- paste(\"f__\", tmp_tax_data$Family, sep = \"\")\n  tmp_tax_data$Genus <- paste(\"g__\", tmp_tax_data$Genus, sep = \"\")\n  tmp_tax_data <- as.matrix(tmp_tax_data)\n  \n  tmp_ps <- phyloseq(otu_table(tmp_get),\n                     tax_table(tmp_tax_data),\n                     tmp_sam_data)\n  assign(i, tmp_ps)\n  rm(list = ls(pattern = \"tmp_\"))\n}\ndata.frame(tax_table(its18_ps_pime))\n\n\n\nShow code\nfor (i in its18_data_sets) {\n    tmp_get <- get(i)\n    tmp_otu_table <- data.frame(t(otu_table(tmp_get)))\n    tmp_sample_info <- data.frame(sample_data(tmp_get))\n    tmp_taxonomy_table <- data.frame(tax_table(tmp_get))\n    #tmp_taxonomy_table %<>% tidy_taxonomy\n    tmp_dataset <- microtable$new(sample_table = tmp_sample_info, \n                                  otu_table = tmp_otu_table, \n                                  tax_table = tmp_taxonomy_table)\n    tmp_dataset$tidy_dataset()\n    print(tmp_dataset)\n    tmp_dataset$tax_table %<>% base::subset(Kingdom == \"k__Fungi\")\n    print(tmp_dataset)\n    tmp_dataset$tidy_dataset()\n    print(tmp_dataset)\n    tmp_name <- purrr::map_chr(i, ~paste0(., \"_me\")) \n    assign(tmp_name, tmp_dataset)\n    rm(list = ls(pattern = \"tmp_\"))\n}  \nobjects()\n\nHere is an example of what a new microeco object looks like when you call it.\n\nits18_ps_work_me\nmicrotable class:\nsample_table have 13 rows and 6 columns\notu_table have 3355 rows and 13 columns\ntax_table have 3355 rows and 6 columns\nTaxa abundance: calculated for Kingdom,Phylum,Class,Order,Family,Genus \n\nNow, we calculate the taxa abundance at each taxonomic rank using cal_abund(). This function return a list called taxa_abund containing several data frame of the abundance information at each taxonomic rank. The list is stored in the microtable object automatically. It’s worth noting that the cal_abund() function can be used to solve some complex cases, such as supporting both the relative and absolute abundance calculation and selecting the partial taxonomic columns. More information can be found in the description of the file2meco package. In the same loop we also create a trans_abund class, which is used to transform taxonomic abundance data for plotting.\n\n\nShow code\nfor (i in its18_data_sets) {\n  tmp_me <- get(purrr::map_chr(i, ~paste0(., \"_me\")))\n  tmp_me$cal_abund()\n  tmp_me_abund <- trans_abund$new(dataset = tmp_me, taxrank = top_level, ntaxa = top_hits)\n  tmp_me_abund$abund_data$Abundance <- tmp_me_abund$abund_data$Abundance / 100\n  tmp_me_abund_gr <- trans_abund$new(dataset = tmp_me, taxrank = top_level, ntaxa = top_hits, \n                                  groupmean = \"TEMP\")\n  tmp_me_abund_gr$abund_data$Abundance <- tmp_me_abund_gr$abund_data$Abundance / 100\n  tmp_name <- purrr::map_chr(i, ~paste0(., \"_me_abund\")) \n  assign(tmp_name, tmp_me_abund)  \n  tmp_name_gr <- purrr::map_chr(i, ~paste0(., \"_me_abund_group\")) \n  assign(tmp_name_gr, tmp_me_abund_gr)  \n  rm(list = ls(pattern = \"tmp_\"))\n}\n\nThe result is stored in object$taxa_abund ...\nI prefer to specify the order of taxa in these kinds of plots. We can look the top ntaxa (defined above) by accessing the use_taxanames character vector of each microtable object.\n\n\n\nHum. Similar but not the same. This means we need to define the order for each separately. Once we do that, we will override the use_taxanames character vectors with the reordered vectors.\n\n\nShow code\nits18_ps_work_tax_ord <- rev(c(\n  \"k_Fungi\",  \"p_Ascomycota\",  \"c_Agaricomycetes\", \"Agaricales\",  \n  \"Archaeorhizomycetales\",  \"Capnodiales\",  \"Eurotiales\",  \"Geastrales\",  \n  \"Glomerales\",  \"Helotiales\", \"Hypocreales\",  \"Saccharomycetales\",  \n  \"Trichosporonales\",  \"Xylariales\"))   \n\nits18_ps_filt_tax_ord <- rev(c(\n  \"k_Fungi\",  \"p_Ascomycota\",  \"Polyporales\", \"Agaricales\",  \n  \"Archaeorhizomycetales\",  \"Capnodiales\",  \"Eurotiales\",  \"Geastrales\",  \n  \"Glomerales\",  \"Mortierellales\", \"Hypocreales\",  \"Saccharomycetales\",  \n  \"Trichosporonales\",  \"Xylariales\"))   \n\nits18_ps_perfect_tax_ord <- rev(c(\n  \"k_Fungi\",  \"p_Ascomycota\",  \"c_Agaricomycetes\", \"Agaricales\",  \n  \"Archaeorhizomycetales\",  \"Capnodiales\",  \"Eurotiales\",  \"Geastrales\",  \n  \"Glomerales\",  \"Helotiales\",   \"Hypocreales\",  \"Saccharomycetales\", \n  \"Trichosporonales\",  \"Pezizales\"))   \nits18_ps_pime_tax_ord <- rev(c(\n  \"k_Fungi\",  \"p_Ascomycota\",  \"Polyporales\",  \"Agaricales\",  \n  \"Archaeorhizomycetales\",  \"Capnodiales\",  \"Eurotiales\",  \"Geastrales\", \n  \"Glomerales\",  \"Mortierellales\",  \"Hypocreales\",  \"Saccharomycetales\",  \n  \"Trichosporonales\",  \"Pezizales\"))   \n\nAnd one more little step before plotting. Here we a) specify a custom color palette and b) specify the sample order.\n\n\nShow code\ntop_level <- \"Phylum\"\nits18_colvec.tax <- rev(c(\"#323232\", \"#004949\", \"#924900\", \"#490092\", \n                      \"#6db6ff\", \"#920000\", \"#ffb6db\", \"#24ff24\", \n                      \"#006ddb\", \"#db6d00\", \"#b66dff\", \"#ffff6d\", \n                      \"#009292\", \"#b6dbff\", \"#ff6db6\"))\nits18_samp_order <- c(\"P02_D00_010_C0A\", \"P04_D00_010_C0B\", \"P06_D00_010_C0C\", \"P08_D00_010_C0D\", \"P10_D00_010_C0E\", \n                    \"P01_D00_010_W3A\", \"P03_D00_010_W3B\", \"P07_D00_010_W3D\", \"P09_D00_010_W3E\", \n                    \"P01_D00_010_W8A\", \"P03_D00_010_W8B\", \"P05_D00_010_W8C\", \"P07_D00_010_W8D\")\n\nNow we can generate plots (in a loop) for each faceted data set.\n\n\nShow code\nfor (i in its18_data_sets) {\n  tmp_abund <- get(purrr::map_chr(i, ~paste0(., \"_me_abund\")))\n  tmp_tax_order <- get(purrr::map_chr(i, ~paste0(., \"_tax_ord\")))\n  tmp_abund$use_taxanames <- tmp_tax_order\n  tmp_facet_plot <- tmp_abund$plot_bar(use_colors = its18_colvec.tax, \n                                       others_color = \"#323232\", \n                                       facet = \"TEMP\", \n                                       xtext_keep = TRUE, \n                                       xtext_type_hor = FALSE, \n                                       legend_text_italic = FALSE, \n                                       xtext_size = 6, \n                                       facet_color = \"#cccccc\", \n                                       order_x = its18_samp_order)\n  tmp_facet_name <- purrr::map_chr(i, ~paste0(., \"_facet_plot\")) \n  assign(tmp_facet_name, tmp_facet_plot)  \n  rm(list = ls(pattern = \"tmp_\"))\n}\n\nThen add a little formatting to the faceted plots.\n\n\nShow code\nset_to_plot <- c(\"its18_ps_work_facet_plot\", \"its18_ps_filt_facet_plot\", \"its18_ps_perfect_facet_plot\", \"its18_ps_pime_facet_plot\")\nfor (i in  set_to_plot) {\n    tmp_get <- get(i)\n    tmp_get <- tmp_get +\n    theme_cowplot() +\n    guides(fill = guide_legend(title = top_level, reverse = FALSE,\n                               keywidth = 0.7, keyheight = 0.7)) +\n    ylab(NULL) + xlab(\"Sample\") +\n    theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),\n        panel.background = element_rect(fill = \"transparent\", colour = NA),\n        plot.background = element_rect(fill = \"transparent\", colour = NA),\n        panel.border = element_rect(fill = NA, color = \"black\"),\n        legend.text = element_text(size = 7),\n        legend.title = element_text(size = 10),\n        legend.position = \"right\",\n        axis.text.y = element_text(size = 8),\n        axis.text.x = element_text(size = 6, angle = 90),\n        strip.text = element_text(size = 8, angle = 0),\n        axis.title = element_text(size = 10)) + ylab(NULL) +\n      scale_y_continuous()\n  assign(i, tmp_get)\n  rm(list = ls(pattern = \"tmp_\")) \n}\n\nAnd now plots for the groupmeans sets. We can use the same taxa order since that should not have changed.\n\n\nShow code\nset_to_plot <- c(\"its18_ps_work_group_plot\", \"its18_ps_filt_group_plot\", \"its18_ps_perfect_group_plot\", \"its18_ps_pime_group_plot\")\nfor (i in its18_data_sets) {\n  tmp_abund <- get(purrr::map_chr(i, ~paste0(., \"_me_abund_group\")))\n  tmp_tax_order <- get(purrr::map_chr(i, ~paste0(., \"_tax_ord\")))\n  tmp_abund$use_taxanames <- tmp_tax_order\n  tmp_group_plot <- tmp_abund$plot_bar(use_colors = its18_colvec.tax, \n                                       others_color = \"#323232\", \n                                       xtext_keep = TRUE, \n                                       xtext_type_hor = TRUE, \n                                       legend_text_italic = FALSE, \n                                       xtext_size = 10, \n                                       facet_color = \"#cccccc\")\n  tmp_group_name <- purrr::map_chr(i, ~paste0(., \"_group_plot\")) \n  assign(tmp_group_name, tmp_group_plot)  \n  rm(list = ls(pattern = \"tmp_\"))\n}\n\nLet’s also add a little formatting to the groupmean plots.\n\n\nShow code\nfor (i in  set_to_plot) {\n     tmp_get <- get(i)\n     tmp_get <- tmp_get +\n       theme_cowplot() +\n       ylab(\"Relative Abundance (% total reads)\") + xlab(\"Temperature\") +\n       theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),\n             panel.background = element_rect(fill = \"transparent\", colour = NA),\n             plot.background = element_rect(fill = \"transparent\", colour = NA),\n             panel.border = element_rect(fill = NA, color = \"black\"),\n             legend.position = \"none\",\n             axis.text = element_text(size = 8),\n             axis.title = element_text(size = 10)) + \n       scale_y_continuous()\n\n     assign(i, tmp_get)\n     rm(list = ls(pattern = \"tmp_\"))\n}\n\nFinally we use the patchwork package to combine the two plots and customize the look.\n\n\nShow code\n## single index that acts as an index for referencing elements (variables) in a list\n##  solution modified from this SO answerhttps://stackoverflow.com/a/54451460\nvar_list <- list(\n  var1 = its18_data_sets,\n  var2 = c(\"FULL\", \"Arbitrary filtered\", \"PERfect filtered\", \"PIME filtered\")\n)\nfor (j in  1:length(var_list$var1)) {\n     tmp_plot_final_name <- purrr::map_chr(var_list$var1[j], ~paste0(., \"_\", top_level, \"_plot_final\"))\n     tmp_set_type <- var_list$var2[j]\n     tmp_p_plot <- get(purrr::map_chr(var_list$var1[j], ~paste0(., \"_group_plot\")))\n     tmp_m_plot <- get(purrr::map_chr(var_list$var1[j], ~paste0(., \"_facet_plot\")))\n     tmp_plot_final <- tmp_p_plot + tmp_m_plot\n     tmp_plot_final <- tmp_plot_final +\n         plot_annotation(tag_levels = \"a\", \n                         title = paste(\"Top\", top_level, \"of\", tmp_set_type, \"data set\"), \n                         #subtitle = 'Top taxa of non-filtered data',\n                         caption = \"a) grouped by temperature.,\n                         b) All samples, faceted by temperature.\") + \n       plot_layout(widths = c(1, 2)) &\n       theme(plot.title = element_text(size = 13),\n             plot.subtitle = element_text(size = 10), \n             plot.tag = element_text(size = 12), \n             axis.title = element_text(size = 10), \n             axis.text = element_text(size = 8)) \n  assign(tmp_plot_final_name, tmp_plot_final)\n  rm(list = ls(pattern = \"tmp_\"))\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIt is important to note that while most of the dominant taxa are the same across the FULL, Arbitrary, PIME, and PERfect data sets, there a few key difference:\n\nc_Agaricomycetes & Helotiales were not among the dominant taxa in the Arbitrary or PIME filtered data sets. Polyporales & Mortierellales were substituted, respectively.\nXylariales was not among the dominant taxa in either the PIME or PERfect data sets. Pezizales was substituted in both cases.\n\n\nFULL (unfiltered)\n\n\n\nArbitrary filtered\n\n\n\nPERFECT filtered\n\n\n\nPIME filtered\n\n\n\n\n\nSource Code\nThe source code for this page can be accessed on GitHub by clicking this link.\n\n\n",
      "last_modified": "2021-10-14T07:48:24-05:00"
    }
  ],
  "collections": []
}
